$OpenBSD: patch-cmn_role_cpp,v 1.2 2018/04/08 13:36:10 jasper Exp $
Index: cmn/role.cpp
--- cmn/role.cpp.orig
+++ cmn/role.cpp
@@ -29,9 +29,12 @@
 
 #include "stdafx.h"
 
-#include <iostream.h>
+#include <iostream>
+
+using namespace std;
+
 #if X11
-#include <strstream.h>
+#include <strstream>
 #include <time.h>
 #endif
 #if WIN32
@@ -657,7 +660,7 @@ void Client::connect_server() {  
     client.sin_family = AF_INET;
     client.sin_addr.s_addr = htonl(INADDR_ANY);
     client.sin_port = htons((u_short)(clientPortBase + n));
-    if (bind(udpSock,(CMN_SOCKADDR *)&client,sizeof(client)) >= 0) {
+    if (::bind(udpSock,(CMN_SOCKADDR *)&client,sizeof(client)) >= 0) {
       // Success.
       break;
     }
@@ -1842,7 +1845,7 @@ void Server::run() {
   serverAddr.sin_port = htons(port);
 
   // Give address to both the TCP and UDP sockets.
-  if (bind(tcpSock, (CMN_SOCKADDR *)&serverAddr, sizeof(serverAddr)) < 0) {
+  if (::bind(tcpSock, (CMN_SOCKADDR *)&serverAddr, sizeof(serverAddr)) < 0) {
     ostrstream str;
     str << "Couldn't bind socket name to TCP socket on port " 
         << port << "."  << ends;
@@ -1850,7 +1853,7 @@ void Server::run() {
     delete str.str();
     return;
   }
-  if (bind(udpSock, (CMN_SOCKADDR *)&serverAddr, sizeof(serverAddr)) < 0) {
+  if (::bind(udpSock, (CMN_SOCKADDR *)&serverAddr, sizeof(serverAddr)) < 0) {
     ostrstream str;
     str << "Couldn't bind socket name to UDP socket on port " 
         << port << "."  << ends;
@@ -3262,8 +3265,8 @@ int Server::find_connection(const IntelId& iId) {
 void Server::send_udp_server_pong(IGameManager* manager,LocatorP locator,
                                   CMN_SOCKET udpSock,
                                   CMN_SOCKADDR_IN* destAddr) {
-  static char* unknownString = "<unknown>";
-  static char* serverString = "<server>";
+  static const char* unknownString = "<unknown>";
+  static const char* serverString = "<server>";
 
 
   // Temporary stream.
