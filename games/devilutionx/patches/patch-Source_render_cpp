$OpenBSD: patch-Source_render_cpp,v 1.1.1.1 2019/07/19 13:42:33 bcallah Exp $

clang

Index: Source/render.cpp
--- Source/render.cpp.orig
+++ Source/render.cpp
@@ -164,7 +164,7 @@ void drawTopArchesUpperScreen(BYTE *pBuff)
 				} while (i);
 				break;
 			case 1: // upper (top transparent), with lighting
-				WorldBoolFlag = (unsigned char)pBuff & 1;
+				WorldBoolFlag = (uintptr_t)pBuff & 1;
 				xx_32 = 32;
 				do {
 					yy_32 = 32;
@@ -181,7 +181,7 @@ void drawTopArchesUpperScreen(BYTE *pBuff)
 						}
 						if (dst < gpBufEnd)
 							return;
-						if (((unsigned char)dst & 1) == WorldBoolFlag) {
+						if (((uintptr_t)dst & 1) == WorldBoolFlag) {
 							asm_trans_light_cel_0_2(width, tbl, &dst, &src);
 						} else {
 							asm_trans_light_cel_1_3(width, tbl, &dst, &src);
@@ -238,7 +238,7 @@ void drawTopArchesUpperScreen(BYTE *pBuff)
 					} else {
 						asm_trans_light_cel_1_3(32 - xx_32, tbl, &dst, &src);
 					}
-					src += (unsigned char)src & 2;
+					src += (uintptr_t)src & 2;
 					dst = &dst[xx_32 - 800];
 					xx_32 -= 2;
 					if (xx_32 < 0) {
@@ -252,7 +252,7 @@ void drawTopArchesUpperScreen(BYTE *pBuff)
 							} else {
 								asm_trans_light_cel_1_3(32 - yy_32, tbl, &dst, &src);
 							}
-							src += (unsigned char)src & 2;
+							src += (uintptr_t)src & 2;
 							dst = &dst[yy_32 - 800];
 							yy_32 += 2;
 						} while (yy_32 != 32);
@@ -301,7 +301,7 @@ void drawTopArchesUpperScreen(BYTE *pBuff)
 					} else {
 						asm_trans_light_cel_1_3(32 - xx_32, tbl, &dst, &src);
 					}
-					src += (unsigned char)src & 2;
+					src += (uintptr_t)src & 2;
 					dst = &dst[xx_32 - 800];
 					xx_32 -= 2;
 					if (xx_32 < 0) {
@@ -359,7 +359,7 @@ void drawTopArchesUpperScreen(BYTE *pBuff)
 			} while (i);
 			break;
 		case 9: // upper (top transparent), without lighting
-			WorldBoolFlag = (unsigned char)pBuff & 1;
+			WorldBoolFlag = (uintptr_t)pBuff & 1;
 			yy_32 = 32;
 		LABEL_251:
 			xx_32 = 32;
@@ -383,7 +383,7 @@ void drawTopArchesUpperScreen(BYTE *pBuff)
 				xx_32 -= width;
 				if (dst < gpBufEnd)
 					return;
-				if (((unsigned char)dst & 1) == WorldBoolFlag) {
+				if (((uintptr_t)dst & 1) == WorldBoolFlag) {
 					chk_sh_and = width >> 1;
 					if (!(width & 1))
 						goto LABEL_258;
@@ -775,7 +775,7 @@ void drawTopArchesUpperScreen(BYTE *pBuff)
 		} while (i);
 		break;
 	case 1: // upper (top transparent), black
-		WorldBoolFlag = (unsigned char)pBuff & 1;
+		WorldBoolFlag = (uintptr_t)pBuff & 1;
 		xx_32 = 32;
 		while (1) {
 			yy_32 = 32;
@@ -788,7 +788,7 @@ void drawTopArchesUpperScreen(BYTE *pBuff)
 					if (dst < gpBufEnd)
 						return;
 					src += width;
-					if (((unsigned char)dst & 1) == WorldBoolFlag) {
+					if (((uintptr_t)dst & 1) == WorldBoolFlag) {
 						chk_sh_and = width >> 1;
 						if (!(width & 1))
 							goto LABEL_378;
@@ -1386,7 +1386,7 @@ void drawBottomArchesUpperScreen(BYTE *pBuff, unsigned
 							++dst;
 							--i;
 						} while (i);
-						src += (unsigned char)src & 2;
+						src += (uintptr_t)src & 2;
 						dst -= 800;
 						--gpDrawMask;
 						--yy_32;
@@ -1471,7 +1471,7 @@ void drawBottomArchesUpperScreen(BYTE *pBuff, unsigned
 				xx_32 = 30;
 				while (dst >= gpBufEnd) {
 					asm_cel_light_edge(32 - xx_32, tbl, &dst, &src);
-					src += (unsigned char)src & 2;
+					src += (uintptr_t)src & 2;
 					dst = &dst[xx_32 - 800];
 					xx_32 -= 2;
 					if (xx_32 < 0) {
@@ -1480,7 +1480,7 @@ void drawBottomArchesUpperScreen(BYTE *pBuff, unsigned
 							if (dst < gpBufEnd)
 								break;
 							asm_cel_light_edge(32 - yy_32, tbl, &dst, &src);
-							src += (unsigned char)src & 2;
+							src += (uintptr_t)src & 2;
 							dst = &dst[yy_32 - 800];
 							yy_32 += 2;
 						} while (yy_32 != 32);
@@ -1502,7 +1502,7 @@ void drawBottomArchesUpperScreen(BYTE *pBuff, unsigned
 						do {
 							if (dst < gpBufEnd)
 								break;
-							src += (unsigned char)src & 2;
+							src += (uintptr_t)src & 2;
 							asm_trans_light_mask(32, tbl, &dst, &src, *gpDrawMask);
 							dst -= 800;
 							--gpDrawMask;
@@ -1516,7 +1516,7 @@ void drawBottomArchesUpperScreen(BYTE *pBuff, unsigned
 				xx_32 = 30;
 				while (dst >= gpBufEnd) {
 					asm_cel_light_edge(32 - xx_32, tbl, &dst, &src);
-					src += (unsigned char)src & 2;
+					src += (uintptr_t)src & 2;
 					dst = &dst[xx_32 - 800];
 					xx_32 -= 2;
 					if (xx_32 < 0) {
@@ -1526,7 +1526,7 @@ void drawBottomArchesUpperScreen(BYTE *pBuff, unsigned
 							if (dst < gpBufEnd)
 								break;
 							asm_trans_light_mask(32, tbl, &dst, &src, *gpDrawMask);
-							src += (unsigned char)src & 2;
+							src += (uintptr_t)src & 2;
 							dst -= 800;
 							--gpDrawMask;
 							--yy_32;
@@ -2107,7 +2107,7 @@ void drawUpperScreen(BYTE *pBuff)
 				xx_32 = 30;
 				while (dst >= gpBufEnd) {
 					asm_cel_light_edge(32 - xx_32, tbl, &dst, &src);
-					src += (unsigned char)src & 2;
+					src += (uintptr_t)src & 2;
 					dst = &dst[xx_32 - 800];
 					xx_32 -= 2;
 					if (xx_32 < 0) {
@@ -2116,7 +2116,7 @@ void drawUpperScreen(BYTE *pBuff)
 							if (dst < gpBufEnd)
 								break;
 							asm_cel_light_edge(32 - yy_32, tbl, &dst, &src);
-							src += (unsigned char)src & 2;
+							src += (uintptr_t)src & 2;
 							dst = &dst[yy_32 - 800];
 							yy_32 += 2;
 						} while (yy_32 != 32);
@@ -2149,7 +2149,7 @@ void drawUpperScreen(BYTE *pBuff)
 				xx_32 = 30;
 				while (dst >= gpBufEnd) {
 					asm_cel_light_edge(32 - xx_32, tbl, &dst, &src);
-					src += (unsigned char)src & 2;
+					src += (uintptr_t)src & 2;
 					dst = &dst[xx_32 - 800];
 					xx_32 -= 2;
 					if (xx_32 < 0) {
@@ -2465,7 +2465,7 @@ void drawTopArchesLowerScreen(BYTE *pBuff)
 			} while (i);
 			break;
 		case 1: // lower (top transparent), black
-			WorldBoolFlag = (unsigned char)pBuff & 1;
+			WorldBoolFlag = (uintptr_t)pBuff & 1;
 			xx_32 = 32;
 		LABEL_412:
 			yy_32 = 32;
@@ -2489,7 +2489,7 @@ void drawTopArchesLowerScreen(BYTE *pBuff)
 				yy_32 -= width;
 				if (dst < gpBufEnd) {
 					src += width;
-					if (((unsigned char)dst & 1) == WorldBoolFlag) {
+					if (((uintptr_t)dst & 1) == WorldBoolFlag) {
 						chk_sh_and = width >> 1;
 						if (!(width & 1))
 							goto LABEL_420;
@@ -2895,7 +2895,7 @@ void drawTopArchesLowerScreen(BYTE *pBuff)
 			} while (i);
 			break;
 		case 1: // lower (top transparent), with lighting
-			WorldBoolFlag = (unsigned char)pBuff & 1;
+			WorldBoolFlag = (uintptr_t)pBuff & 1;
 			xx_32 = 32;
 			do {
 				yy_32 = 32;
@@ -2912,7 +2912,7 @@ void drawTopArchesLowerScreen(BYTE *pBuff)
 					}
 					yy_32 -= width;
 					if (dst < gpBufEnd) {
-						if (((unsigned char)dst & 1) == WorldBoolFlag) {
+						if (((uintptr_t)dst & 1) == WorldBoolFlag) {
 							asm_trans_light_cel_0_2(width, tbl, &dst, &src);
 						} else {
 							asm_trans_light_cel_1_3(width, tbl, &dst, &src);
@@ -3011,7 +3011,7 @@ void drawTopArchesLowerScreen(BYTE *pBuff)
 						} else {
 							asm_trans_light_cel_1_3(32 - yy_32, tbl, &dst, &src);
 						}
-						src += (unsigned char)src & 2;
+						src += (uintptr_t)src & 2;
 						dst = &dst[yy_32 - 800];
 						yy_32 += 2;
 					} while (yy_32 != 32);
@@ -3031,7 +3031,7 @@ void drawTopArchesLowerScreen(BYTE *pBuff)
 				} else {
 					asm_trans_light_cel_1_3(32 - xx_32, tbl, &dst, &src);
 				}
-				src += (unsigned char)src & 2;
+				src += (uintptr_t)src & 2;
 				dst = &dst[xx_32 - 800];
 				xx_32 -= 2;
 			} while (xx_32 >= 0);
@@ -3128,7 +3128,7 @@ void drawTopArchesLowerScreen(BYTE *pBuff)
 				} else {
 					asm_trans_light_cel_1_3(32 - xx_32, tbl, &dst, &src);
 				}
-				src += (unsigned char)src & 2;
+				src += (uintptr_t)src & 2;
 				dst = &dst[xx_32 - 800];
 				xx_32 -= 2;
 			} while (xx_32 >= 0);
@@ -3175,7 +3175,7 @@ LABEL_11:
 		} while (i);
 		break;
 	case 9: // lower (top transparent), without lighting
-		WorldBoolFlag = (unsigned char)pBuff & 1;
+		WorldBoolFlag = (uintptr_t)pBuff & 1;
 		xx_32 = 32;
 		while (1) {
 			yy_32 = 32;
@@ -3186,7 +3186,7 @@ LABEL_11:
 						break;
 					yy_32 -= width;
 					if (dst < gpBufEnd) {
-						if (((unsigned char)dst & 1) == WorldBoolFlag) {
+						if (((uintptr_t)dst & 1) == WorldBoolFlag) {
 							chk_sh_and = width >> 1;
 							if (!(width & 1))
 								goto LABEL_280;
@@ -4042,7 +4042,7 @@ void drawBottomArchesLowerScreen(BYTE *pBuff, unsigned
 				}
 				do {
 					asm_cel_light_edge(32 - xx_32, tbl, &dst, &src);
-					src += (unsigned char)src & 2;
+					src += (uintptr_t)src & 2;
 					dst = &dst[xx_32 - 800];
 					xx_32 -= 2;
 				} while (xx_32 >= 0);
@@ -4096,7 +4096,7 @@ void drawBottomArchesLowerScreen(BYTE *pBuff, unsigned
 						do {
 							if (dst < gpBufEnd) {
 								asm_trans_light_mask(32, tbl, &dst, &src, *gpDrawMask);
-								src += (unsigned char)src & 2;
+								src += (uintptr_t)src & 2;
 							} else {
 								src += 32;
 								dst += 32;
@@ -4114,7 +4114,7 @@ void drawBottomArchesLowerScreen(BYTE *pBuff, unsigned
 				}
 				do {
 					asm_cel_light_edge(32 - xx_32, tbl, &dst, &src);
-					src += (unsigned char)src & 2;
+					src += (uintptr_t)src & 2;
 					dst = &dst[xx_32 - 800];
 					xx_32 -= 2;
 				} while (xx_32 >= 0);
@@ -4396,7 +4396,7 @@ void drawBottomArchesLowerScreen(BYTE *pBuff, unsigned
 							++dst;
 							--i;
 						} while (i);
-						src += (unsigned char)src & 2;
+						src += (uintptr_t)src & 2;
 					} else {
 						src += 32;
 						dst += 32;
@@ -4821,7 +4821,7 @@ void drawLowerScreen(BYTE *pBuff)
 						}
 						do {
 							asm_cel_light_edge(32 - yy_32, tbl, &dst, &src);
-							src += (unsigned char)src & 2;
+							src += (uintptr_t)src & 2;
 							dst = &dst[yy_32 - 800];
 							yy_32 += 2;
 						} while (yy_32 != 32);
@@ -4834,7 +4834,7 @@ void drawLowerScreen(BYTE *pBuff)
 				}
 				do {
 					asm_cel_light_edge(32 - xx_32, tbl, &dst, &src);
-					src += (unsigned char)src & 2;
+					src += (uintptr_t)src & 2;
 					dst = &dst[xx_32 - 800];
 					xx_32 -= 2;
 				} while (xx_32 >= 0);
@@ -4901,7 +4901,7 @@ void drawLowerScreen(BYTE *pBuff)
 				}
 				do {
 					asm_cel_light_edge(32 - xx_32, tbl, &dst, &src);
-					src += (unsigned char)src & 2;
+					src += (uintptr_t)src & 2;
 					dst = &dst[xx_32 - 800];
 					xx_32 -= 2;
 				} while (xx_32 >= 0);
