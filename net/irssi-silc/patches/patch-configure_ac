$OpenBSD: patch-configure_ac,v 1.3 2017/04/16 20:50:06 sthen Exp $
--- configure.ac.orig	Sat Aug  1 07:53:41 2009
+++ configure.ac	Sun Apr 16 21:39:20 2017
@@ -51,7 +51,7 @@ case "$target" in
     check_threads=true
     ;;
   *-*-openbsd*)
-    check_threads=true
+    check_threads=false
     ;;
   *-*-*bsd*)
     check_threads=false
@@ -97,9 +97,6 @@ AM_CONDITIONAL(SILC_X86_64, test x$cpu_x86_64 = xtrue)
 AM_CONDITIONAL(SILC_POWERPC, test x$cpu_ppc = xtrue)
 AM_CONDITIONAL(SILC_IA64, test x$cpu_ia64 = xtrue)
 
-# Control compiler optimizations
-CFLAGS=`echo $CFLAGS | sed 's/-O[ 0123456789s]*//g'`
-
 AC_PROG_CC
 AC_C_INLINE
 AC_C_CONST
@@ -166,12 +163,13 @@ AC_DEFUN([SILC_ADD_CFLAGS],
 # Function to check if compiler flag works, destination specifiable
 # Usage: SILC_ADD_CC_FLAGS(VAR, FLAGS, [ACTION-IF-FAILED])
 AC_DEFUN([SILC_ADD_CC_FLAGS],
-[ tmp_CFLAGS="$1_CFLAGS"
-  $1_CFLAGS="${$1_CFLAGS} $2"
+[ tmp_CFLAGS="$CFLAGS"
+  CFLAGS="${$1_CFLAGS} $2"
   AC_MSG_CHECKING(whether $CC accepts $2 flag)
-  AC_TRY_LINK([], [], [AC_MSG_RESULT(yes)], [AC_MSG_RESULT(no)
-				       $1_CFLAGS="$tmp_CFLAGS"
+  AC_TRY_LINK([], [], [AC_MSG_RESULT(yes)
+	$1_CFLAGS="$CFLAGS"], [AC_MSG_RESULT(no)
 				       $3])
+  CFLAGS="$tmp_CFLAGS"
   unset tmp_CFLAGS
 ])
 
@@ -471,59 +469,9 @@ fi
 ## Compiler and compiler flag checks
 ##
 
-if test "$GCC"; then
-  # GCC specific options
-  if test "x$summary_debug" = "xyes"; then
-    SILC_ADD_CFLAGS(-g)
-  else
-    SILC_ADD_CFLAGS(-g)
-  fi
-  SILC_ADD_CFLAGS(-Wall -finline-functions)
-  SILC_ADD_CFLAGS(-Wno-pointer-sign)
-else
-  # Other compilers
-  case "$target" in
-    alpha*-dec-osf*)
-      SILC_ADD_CFLAGS(-g3)
-      ;;
-    mips*-sgi-irix*)
-      SILC_ADD_CFLAGS(-g3)
-      ;;
-    *)
-      SILC_ADD_CFLAGS(-g)
-      ;;
-  esac
+SILC_ADD_CFLAGS(-Wall -finline-functions)
+SILC_ADD_CFLAGS(-Wno-pointer-sign)
 
-  # Intel C++ Compiler needs -restrict
-  if test "x$CC" = "xicc"; then
-    SILC_ADD_CFLAGS(-restrict)
-  fi
-fi
-
-if test x$want_cc_optimizations = xtrue; then
-  if test "$GCC"; then
-    # GCC specific options
-    if test "x$summary_debug" = "xyes"; then
-      SILC_ADD_CFLAGS(-O)
-    else
-      SILC_ADD_CFLAGS(-O2)
-    fi
-  else
-    # Other compilers
-    case "$target" in
-      alpha*-dec-osf*)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-      mips*-sgi-irix*)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-      *)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-    esac
-  fi
-fi
-
 #
 # Workaround a bug in GCC 2.x which causes memory exhaustion
 # when compiling sha1 with optimizations on UltraSPARC.
@@ -616,8 +564,8 @@ if test -n "$with_silc_includes" || test -n "$with_sil
 
 else
   # pkg-config check
-  PKG_CHECK_MODULES(SILC, [silc >= 1.1], compile_libs=false, compile_libs=true)
-  PKG_CHECK_MODULES(SILCCLIENT, [silcclient >= 1.1.1], compile_libs=false, compile_libs=true)
+  #PKG_CHECK_MODULES(SILC, [silc >= 1.1], compile_libs=false, compile_libs=true)
+  #PKG_CHECK_MODULES(SILCCLIENT, [silcclient >= 1.1.1], compile_libs=false, compile_libs=true)
 
   if test x$compile_libs = xfalse; then
     LIBSUBDIR=
