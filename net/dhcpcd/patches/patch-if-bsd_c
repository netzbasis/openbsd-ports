$OpenBSD: patch-if-bsd_c,v 1.3 2017/10/27 09:44:46 mpi Exp $

Workaround for our old broken behaviour no longer needed.
Fixed with netinet6/in6.c r1.202.

netinet6/nd6.h r1.72 removed ND6_IFF_PERFORMNUD

Also conditionnaly flush prefix and router lists, OpenBSD no longer
keep track of them in kernel.  So there's no risk for dhcpcd(8) to
have its advertised routers and prefixes expired.

Index: if-bsd.c
--- if-bsd.c.orig
+++ if-bsd.c
@@ -985,7 +985,7 @@ if_address6(unsigned char cmd, const struct ipv6_addr 
 	}
 #endif
 
-#if defined(__OpenBSD__)
+#if 0
 	/* BUT OpenBSD does not reset the address lifetime
 	 * for subsequent calls...
 	 * Luckily dhcpcd will remove the lease when it expires so
@@ -1688,6 +1688,7 @@ ip6_temp_valid_lifetime(__unused const char *ifname)
 }
 #endif
 
+#if defined(ND6_IFF_AUTO_LINKLOCAL) || defined(ND6_IFF_PERFORMNUD) || defined(ND6_IFF_ACCEPT_RTADV) || defined(ND6_IFF_IFDISABLED)
 #define del_if_nd6_flag(s, ifname, flag) if_nd6_flag((s), (ifp), (flag), -1)
 #define get_if_nd6_flag(s, ifname, flag) if_nd6_flag((s), (ifp), (flag),  0)
 #define set_if_nd6_flag(s, ifname, flag) if_nd6_flag((s), (ifp), (flag),  1)
@@ -1713,6 +1714,7 @@ if_nd6_flag(int s, const struct interface *ifp, unsign
 		return 0;
 	return ioctl(s, SIOCSIFINFO_FLAGS, &nd);
 }
+#endif
 
 static int
 if_raflush(int s)
@@ -1720,9 +1722,14 @@ if_raflush(int s)
 	char dummy[IFNAMSIZ + 8];
 
 	strlcpy(dummy, "lo0", sizeof(dummy));
-	if (ioctl(s, SIOCSRTRFLUSH_IN6, (void *)&dummy) == -1 ||
-	    ioctl(s, SIOCSPFXFLUSH_IN6, (void *)&dummy) == -1)
+#ifdef SIOCSRTRFLUSH_IN6
+	if (ioctl(s, SIOCSRTRFLUSH_IN6, (void *)&dummy) == -1)
 		return -1;
+#endif
+#ifdef SIOCSPFXFLUSH_IN6
+	if (ioctl(s, SIOCSPFXFLUSH_IN6, (void *)&dummy) == -1)
+		return -1;
+#endif
 	return 0;
 }
 
