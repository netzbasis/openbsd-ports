$OpenBSD: patch-CMakeLists_txt,v 1.4 2019/11/24 23:05:10 cwen Exp $

* remove unknown option for base-gcc 
* NO_TEST is set but tests are built, and they break the build with base-gcc

Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -171,7 +171,7 @@ if(NOT MSVC)
     # Comma at end of enum is supported everywhere we run.
     add_cxxflag("-Wno-c++98-compat-pedantic")
     # TODO(iphydf): Stop using flexible array members.
-    add_cxxflag("-Wno-c99-extensions")
+    #add_cxxflag("-Wno-c99-extensions")
     # We're C-compatible, so use C style casts.
     add_cxxflag("-Wno-old-style-cast")
 
@@ -463,24 +463,11 @@ if(ANDROID_CPU_FEATURES)
 endif()
 
 function(auto_test target)
-  if(NOT (MSVC AND ARGV1 STREQUAL "MSVC_DONT_BUILD"))
-    add_executable(auto_${target}_test ${CPUFEATURES}
-      auto_tests/${target}_test.c)
-    target_link_modules(auto_${target}_test toxcore)
-    if(NOT ARGV1 STREQUAL "DONT_RUN")
-      add_test(NAME ${target} COMMAND ${CROSSCOMPILING_EMULATOR} auto_${target}_test)
-      set_tests_properties(${target} PROPERTIES TIMEOUT "${TEST_TIMEOUT_SECONDS}")
-      set_property(TEST ${target} PROPERTY ENVIRONMENT "LLVM_PROFILE_FILE=${target}.profraw")
-    endif()
-  endif()
+	message (WARNING "Test ${target} not built because it breaks the build with base-gcc and NO_TEST is set")
 endfunction()
 
 if(BUILD_TOXAV)
   add_definitions(-D__STDC_LIMIT_MACROS=1)
-  add_executable(auto_monolith_test ${CPUFEATURES}
-    auto_tests/monolith_test.cc)
-  target_link_libraries(auto_monolith_test ${toxcore_LINK_MODULES})
-  add_test(NAME monolith COMMAND ${CROSSCOMPILING_EMULATOR} auto_monolith_test)
 endif()
 
 auto_test(TCP)
@@ -593,15 +580,3 @@ if(NOT WIN32
     set_source_files_properties(testing/av_test.c PROPERTIES LANGUAGE CXX)
   endif()
 endif()
-
-add_executable(DHT_test ${CPUFEATURES}
-  testing/DHT_test.c)
-target_link_modules(DHT_test toxcore)
-
-add_executable(Messenger_test ${CPUFEATURES}
-  testing/Messenger_test.c)
-target_link_modules(Messenger_test toxcore)
-
-add_executable(random_testing ${CPUFEATURES}
-  testing/random_testing.cc)
-target_link_modules(random_testing toxcore)
