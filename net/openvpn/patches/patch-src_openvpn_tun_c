$OpenBSD: patch-src_openvpn_tun_c,v 1.13 2017/04/16 20:14:17 stsp Exp $

- no need for link0 any more, we have separate tap interfaces
- fix bus error in write_tun_header() due to misaligned access

--- src/openvpn/tun.c.orig	Wed Mar 22 16:34:21 2017
+++ src/openvpn/tun.c	Sun Apr 16 17:36:51 2017
@@ -1201,7 +1201,7 @@ do_ifconfig(struct tuntap *tt,
         if (tun)
         {
             argv_printf(&argv,
-                        "%s %s %s %s mtu %d netmask 255.255.255.255 up -link0",
+                        "%s %s %s %s mtu %d netmask 255.255.255.255 up",
                         IFCONFIG_PATH,
                         actual,
                         ifconfig_local,
@@ -1213,7 +1213,7 @@ do_ifconfig(struct tuntap *tt,
         {
             remote_end = create_arbitrary_remote( tt );
             argv_printf(&argv,
-                        "%s %s %s %s mtu %d netmask %s up -link0",
+                        "%s %s %s %s mtu %d netmask %s up",
                         IFCONFIG_PATH,
                         actual,
                         ifconfig_local,
@@ -1224,8 +1224,13 @@ do_ifconfig(struct tuntap *tt,
         }
         else
         {
+           /*
+            * OpenBSD has distinct tun and tap devices
+            * so we don't need the "link0" extra parameter to specify we want to do
+            * tunneling at the ethernet level
+            */
             argv_printf(&argv,
-                        "%s %s %s netmask %s mtu %d broadcast %s link0",
+                        "%s %s %s netmask %s mtu %d broadcast %s",
                         IFCONFIG_PATH,
                         actual,
                         ifconfig_local,
@@ -1654,11 +1659,11 @@ write_tun_header(struct tuntap *tt, uint8_t *buf, int 
     {
         u_int32_t type;
         struct iovec iv[2];
-        struct ip *iph;
+        struct ip iph;
 
-        iph = (struct ip *) buf;
+        memcpy(&iph, buf, sizeof(iph));
 
-        if (iph->ip_v == 6)
+        if (iph.ip_v == 6)
         {
             type = htonl(AF_INET6);
         }
