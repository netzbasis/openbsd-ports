$OpenBSD: patch-source3_configure_in,v 1.9 2014/01/05 16:54:04 espie Exp $
--- source3/configure.in.orig	Wed May  8 10:16:26 2013
+++ source3/configure.in	Sat Jan  4 13:31:08 2014
@@ -1675,8 +1675,7 @@ DSO_EXPORTS=""
 			;;
 		*openbsd*)  BLDSHARED="true"
 			LDSHFLAGS="-shared"
-			DYNEXP="-Wl,-Bdynamic"
-			SONAMEFLAG="-Wl,-soname,"
+			DYNEXP="-Wl,--export-dynamic"
 			PICFLAG="-fPIC"
 			AC_DEFINE(STAT_ST_BLOCKSIZE,512,[The size of a block])
 			AC_DEFINE(BROKEN_GETGRNAM,1,[Does getgrnam work correctly])
@@ -4535,6 +4534,9 @@ if test x"$with_dnsupdate_support" != x"no"; then
 			with_dnsupdate_support=no
 		fi
 	fi
+fi
+
+if test x"$with_dnsupdate_support" != x"no"; then
   ##################################################################
   # then test for uuid.h (necessary to generate unique DNS keynames
   # (uuid.h is required for this test)
@@ -6810,13 +6812,43 @@ fi
 
 CFLAGS=$CFLAGS_SAVE
 
+# Checks for *BSD bsd_statvfs() function
+# Start
+AC_CHECK_HEADERS(sys/param.h sys/mount.h)
+
+AC_MSG_CHECKING([bsd_statvfs: checking for statfs() and struct statfs.bsize])
+AC_CACHE_VAL(bsdstatvfs_cv_statfs,[
+             AC_TRY_RUN([
+                #ifdef HAVE_SYS_PARAM_H
+                #include <sys/param.h>
+                #endif
+                #ifdef HAVE_SYS_MOUNT_H
+                #include <sys/mount.h>
+                #endif
+                int main (void)
+                {
+                        struct statfs fsd;
+                        fsd.f_bsize = 0;
+                        exit (statfs (".", &fsd));
+                }],
+                bsdstatvfs_cv_statfs=yes,
+                bsdstatvfs_cv_statfs=no,
+                bsdstatvfs_cv_statfs=no)])
+AC_MSG_RESULT($bsdstatvfs_cv_statfs)
+
+if test $bsdstatvfs_cv_statfs = yes; then
+  AC_DEFINE(BSD_STATVFS_BSIZE,1,[Whether statfs exists and struct statfs has bsize property])
+fi
+
+# End
+
 # Checks for the vfs_fileid module
 # Start
 AC_CHECK_FUNC(getmntent)
 
 AC_CHECK_HEADERS(sys/statfs.h)
 
-AC_MSG_CHECKING([vfs_fileid: checking for statfs() and struct statfs.f_fsid)])
+AC_MSG_CHECKING([vfs_fileid: checking for statfs() and struct statfs.f_fsid])
 AC_CACHE_VAL(vfsfileid_cv_statfs,[
 	     AC_TRY_RUN([
 		#include <sys/types.h>
