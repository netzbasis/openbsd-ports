$OpenBSD: patch-pdns_recursor_cc,v 1.3 2019/04/26 07:52:52 otto Exp $

Index: pdns_recursor.cc
--- pdns_recursor.cc.orig
+++ pdns_recursor.cc
@@ -2152,7 +2152,12 @@ static void doStats(void)
   uint64_t cacheMisses = broadcastAccFunction<uint64_t>(pleaseGetCacheMisses);
 
   if(g_stats.qcounter && (cacheHits + cacheMisses) && SyncRes::s_queries && SyncRes::s_outqueries) {
-    L<<Logger::Notice<<"stats: "<<g_stats.qcounter<<" questions, "<<
+    uint64_t qcounter= g_stats.qcounter;
+    uint64_t s_nodelegated = SyncRes::s_nodelegated;
+    uint64_t s_tcpoutqueries = SyncRes::s_tcpoutqueries;
+    uint64_t s_outgoingtimeouts = SyncRes::s_outgoingtimeouts;
+
+    L<<Logger::Notice<<"stats: "<<qcounter<<" questions, "<<
       broadcastAccFunction<uint64_t>(pleaseGetCacheSize)<< " cache entries, "<<
       broadcastAccFunction<uint64_t>(pleaseGetNegCacheSize)<<" negative entries, "<<
       (int)((cacheHits*100.0)/(cacheHits+cacheMisses))<<"% cache hits"<<endl;
@@ -2162,9 +2167,9 @@ static void doStats(void)
       << broadcastAccFunction<uint64_t>(pleaseGetNsSpeedsSize)<<endl;
     L<<Logger::Notice<<"stats: outpacket/query ratio "<<(int)(SyncRes::s_outqueries*100.0/SyncRes::s_queries)<<"%";
     L<<Logger::Notice<<", "<<(int)(SyncRes::s_throttledqueries*100.0/(SyncRes::s_outqueries+SyncRes::s_throttledqueries))<<"% throttled, "
-     <<SyncRes::s_nodelegated<<" no-delegation drops"<<endl;
-    L<<Logger::Notice<<"stats: "<<SyncRes::s_tcpoutqueries<<" outgoing tcp connections, "<<
-      broadcastAccFunction<uint64_t>(pleaseGetConcurrentQueries)<<" queries running, "<<SyncRes::s_outgoingtimeouts<<" outgoing timeouts"<<endl;
+     <<s_nodelegated<<" no-delegation drops"<<endl;
+    L<<Logger::Notice<<"stats: "<<s_tcpoutqueries<<" outgoing tcp connections, "<<
+      broadcastAccFunction<uint64_t>(pleaseGetConcurrentQueries)<<" queries running, "<<s_outgoingtimeouts<<" outgoing timeouts"<<endl;
 
     //L<<Logger::Notice<<"stats: "<<g_stats.ednsPingMatches<<" ping matches, "<<g_stats.ednsPingMismatches<<" mismatches, "<<
       //g_stats.noPingOutQueries<<" outqueries w/o ping, "<< g_stats.noEdnsOutQueries<<" w/o EDNS"<<endl;
