$OpenBSD: patch-lib_base_utility_cpp,v 1.1 2015/11/09 22:36:38 sthen Exp $

commit 9ea51aa86edac407411376d2ed18a494368b9e31
Author: Gunnar Beutner <gunnar@beutner.name>
Date:   Mon Nov 9 20:39:26 2015 +0100

    Use non-blocking open() for the command pipe

    fixes #10410

--- lib/base/utility.cpp.orig	Mon Oct 19 10:14:40 2015
+++ lib/base/utility.cpp	Mon Nov  9 21:42:01 2015
@@ -844,7 +844,7 @@ bool Utility::SetFileOwnership(const String& file, con
 }
 
 #ifndef _WIN32
-void Utility::SetNonBlocking(int fd)
+void Utility::SetNonBlocking(int fd, bool nb)
 {
 	int flags = fcntl(fd, F_GETFL, 0);
 
@@ -854,14 +854,19 @@ void Utility::SetNonBlocking(int fd)
 		    << boost::errinfo_errno(errno));
 	}
 
-	if (fcntl(fd, F_SETFL, flags | O_NONBLOCK) < 0) {
+	if (nb)
+		flags |= O_NONBLOCK;
+	else
+		flags &= ~O_NONBLOCK;
+
+	if (fcntl(fd, F_SETFL, flags) < 0) {
 		BOOST_THROW_EXCEPTION(posix_error()
 		    << boost::errinfo_api_function("fcntl")
 		    << boost::errinfo_errno(errno));
 	}
 }
 
-void Utility::SetCloExec(int fd)
+void Utility::SetCloExec(int fd, bool cloexec)
 {
 	int flags = fcntl(fd, F_GETFD, 0);
 
@@ -871,7 +876,12 @@ void Utility::SetCloExec(int fd)
 		    << boost::errinfo_errno(errno));
 	}
 
-	if (fcntl(fd, F_SETFD, flags | FD_CLOEXEC) < 0) {
+	if (cloexec)
+		flags |= FD_CLOEXEC;
+	else
+		flags &= ~FD_CLOEXEC;
+
+	if (fcntl(fd, F_SETFD, flags) < 0) {
 		BOOST_THROW_EXCEPTION(posix_error()
 		    << boost::errinfo_api_function("fcntl")
 		    << boost::errinfo_errno(errno));
@@ -879,13 +889,13 @@ void Utility::SetCloExec(int fd)
 }
 #endif /* _WIN32 */
 
-void Utility::SetNonBlockingSocket(SOCKET s)
+void Utility::SetNonBlockingSocket(SOCKET s, bool nb)
 {
 #ifndef _WIN32
-	SetNonBlocking(s);
+	SetNonBlocking(s, nb);
 #else /* _WIN32 */
-	unsigned long lTrue = 1;
-	ioctlsocket(s, FIONBIO, &lTrue);
+	unsigned long lflag = nb;
+	ioctlsocket(s, FIONBIO, &lflag);
 #endif /* _WIN32 */
 }
 
