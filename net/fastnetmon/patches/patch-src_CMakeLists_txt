$OpenBSD: patch-src_CMakeLists_txt,v 1.1.1.1 2018/07/11 15:16:47 jasper Exp $

Index: src/CMakeLists.txt
--- src/CMakeLists.txt.orig
+++ src/CMakeLists.txt
@@ -230,7 +230,7 @@ add_library(sflow_plugin STATIC sflow_plugin/sflow_col
 add_library(netflow_plugin STATIC netflow_plugin/netflow_collector.cpp)
 target_link_libraries(netflow_plugin ipfix_rfc)
 
-set(ENABLE_DPI_SUPPORT YES)
+set(ENABLE_DPI_SUPPORT NO)
 if (ENABLE_DPI_SUPPORT) 
     message(STATUS "We will enable nDPI support")
 
@@ -445,7 +445,7 @@ endif()
 find_path(HIREDIS_INCLUDES_FOLDER NAMES hiredis/hiredis.h PATHS "${HIREDIS_CUSTOM_INSTALL_PATH}/include" NO_DEFAULT_PATH)
 
 # Try to find hiredis library path
-find_library(HIREDIS_LIBRARY_PATH NAMES hiredis PATHS "${HIREDIS_CUSTOM_INSTALL_PATH}/lib" NO_DEFAULT_PATH)
+find_library(HIREDIS_LIBRARY_PATH NAMES hiredis)
 
 if (HIREDIS_INCLUDES_FOLDER AND HIREDIS_LIBRARY_PATH) 
     message(STATUS "We found hiredis library and will build Redis support ${HIREDIS_INCLUDES_FOLDER} ${HIREDIS_LIBRARY_PATH}")
@@ -498,7 +498,7 @@ endif()
 find_path(LOG4CPP_INCLUDES_FOLDER NAMES log4cpp/Appender.hh PATHS "${LOG4CPP_CUSTOM_INSTALL_PATH}/include" NO_DEFAULT_PATH)
 
 # Try to find log4cpp library path
-find_library(LOG4CPP_LIBRARY_PATH NAMES log4cpp PATHS "${LOG4CPP_CUSTOM_INSTALL_PATH}/lib" NO_DEFAULT_PATH)
+find_library(LOG4CPP_LIBRARY_PATH NAMES log4cpp)
 
 if (LOG4CPP_INCLUDES_FOLDER AND LOG4CPP_LIBRARY_PATH)
     include_directories(${LOG4CPP_INCLUDES_FOLDER})
@@ -510,7 +510,7 @@ endif()
 ### Look for jsonc
 
 find_path(JSONC_INCLUDES_FOLDER NAMES json-c/json.h PATHS "${JSONC_CUSTOM_INSTALL_PATH}/include" NO_DEFAULT_PATH)
-find_library(JSONC_LIBRARY_PATH NAMES json-c PATHS "${JSONC_CUSTOM_INSTALL_PATH}/lib" NO_DEFAULT_PATH)
+find_library(JSONC_LIBRARY_PATH NAMES json-c)
 
 if (JSONC_INCLUDES_FOLDER AND JSONC_LIBRARY_PATH)
     include_directories(${JSONC_INCLUDES_FOLDER}) 
@@ -644,9 +644,9 @@ if (${CMAKE_SYSTEM_NAME} STREQUAL "FreeBSD" OR ${CMAKE
     set(CMAKE_INSTALL_SBINDIR "bin")
     set(CMAKE_INSTALL_SYSCONFDIR "etc")
 else()
-    set(CMAKE_INSTALL_BINDIR "/usr/bin")
-    set(CMAKE_INSTALL_SBINDIR "/usr/sbin")
-    set(CMAKE_INSTALL_SYSCONFDIR "/etc")
+    set(CMAKE_INSTALL_BINDIR "${PREFIX}/bin")
+    set(CMAKE_INSTALL_SBINDIR "${PREFIX}/sbin")
+    set(CMAKE_INSTALL_SYSCONFDIR "${PREFIX}/share/examples/fastnetmon")
 endif()
 
 install(TARGETS fastnetmon DESTINATION "${CMAKE_INSTALL_SBINDIR}")
@@ -654,17 +654,9 @@ install(TARGETS fastnetmon_client DESTINATION "${CMAKE
 
 install(FILES fastnetmon.conf DESTINATION "${CMAKE_INSTALL_SYSCONFDIR}")
 
-# Install blank files for networks list and whitelist
-install(FILES networks_list DESTINATION "${CMAKE_INSTALL_SYSCONFDIR}")
-install(FILES networks_whitelist DESTINATION "${CMAKE_INSTALL_SYSCONFDIR}")
-
 # man pages
-install(FILES man/fastnetmon.1 DESTINATION /usr/share/man/man1)
-install(FILES man/fastnetmon_client.1 DESTINATION /usr/share/man/man1)
-
-# service files
-configure_file(fastnetmon.service.in "${CMAKE_CURRENT_BINARY_DIR}/fastnetmon.service" @ONLY)
-install(FILES "${CMAKE_CURRENT_BINARY_DIR}/fastnetmon.service" DESTINATION ${CMAKE_INSTALL_SYSTEMD_SERVICEDIR})
+install(FILES man/fastnetmon.1 DESTINATION ${PREFIX}/man/man1)
+install(FILES man/fastnetmon_client.1 DESTINATION ${PREFIX}/man/man1)
 
 if (${OS_ID} MATCHES debian|ubuntu)
 install(FILES fastnetmon_init_script_debian_6_7 DESTINATION ${CMAKE_INSTALL_SYSCONFDIR}/init.d RENAME fastnetmon)
