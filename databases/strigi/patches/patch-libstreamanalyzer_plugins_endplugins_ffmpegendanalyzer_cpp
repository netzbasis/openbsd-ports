$OpenBSD: patch-libstreamanalyzer_plugins_endplugins_ffmpegendanalyzer_cpp,v 1.2 2019/02/20 11:22:26 sthen Exp $

- prevent collision with std::mutex
- Update for newer FFmpeg API

Index: libstreamanalyzer/plugins/endplugins/ffmpegendanalyzer.cpp
--- libstreamanalyzer/plugins/endplugins/ffmpegendanalyzer.cpp.orig
+++ libstreamanalyzer/plugins/endplugins/ffmpegendanalyzer.cpp
@@ -56,6 +56,8 @@ class STRIGI_PLUGIN_API FFMPEGEndAnalyzer : public Str
     signed char analyze(AnalysisResult& idx, ::InputStream* in);
 };
 
+/* using namespace std is stupid */
+#define mutex mymutex
 STRIGI_MUTEX_DEFINE(mutex);
 
 static int
@@ -355,7 +357,7 @@ FFMPEGEndAnalyzer::analyze(AnalysisResult& ar, ::Input
 #endif
 
   if(fc->bit_rate)
-    ar.addValue(factory->bitrateProperty, fc->bit_rate);
+    ar.addValue(factory->bitrateProperty, (uint32_t)fc->bit_rate);
   else if (fc->duration!= no_bitrate && fc->duration > 0) {
     cout<<"Trying to estimate bitrate\n";
     int64_t size;
@@ -412,8 +414,8 @@ FFMPEGEndAnalyzer::analyze(AnalysisResult& ar, ::Input
         if (size_t len = strlen(p->name)) {
           ar.addTriplet(streamuri, codecPropertyName, string(p->name, len));
         }
-      } else if (size_t len = strlen(codec.codec_name)) {
-        ar.addTriplet(streamuri, codecPropertyName, string(codec.codec_name, len));
+      } else if (size_t len = strlen(avcodec_get_name(codec.codec_id))) {
+        ar.addTriplet(streamuri, codecPropertyName, string(avcodec_get_name(codec.codec_id), len));
       }
 /*
 00792     } else if (enc->codec_id == CODEC_ID_MPEG2TS) {
@@ -486,7 +488,7 @@ FFMPEGEndAnalyzer::analyze(AnalysisResult& ar, ::Input
           outs << stream.r_frame_rate.num / stream.r_frame_rate.den;
           ar.addTriplet(streamuri, frameRatePropertyName, outs.str());
         }
-        if (codec.pix_fmt != PIX_FMT_NONE) {}//FIXME pixel format
+        if (codec.pix_fmt != AV_PIX_FMT_NONE) {}//FIXME pixel format
       }
       
     }
