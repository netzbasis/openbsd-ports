$OpenBSD: patch-plugins_c,v 1.5 2014/09/23 13:44:03 dcoppa Exp $
--- plugins.c.orig	Tue Aug  5 19:54:03 2014
+++ plugins.c	Tue Sep 23 12:55:48 2014
@@ -825,7 +825,6 @@ plug_load_all (void) {
 #ifndef ANDROID
     char *xdg_local_home = getenv ("XDG_LOCAL_HOME");
     char xdg_plugin_dir[1024];
-    char xdg_plugin_dir_explicit_arch[1024];
 
     if (xdg_local_home) {
         strncpy (xdg_plugin_dir, xdg_local_home, sizeof (xdg_plugin_dir));
@@ -846,16 +845,11 @@ plug_load_all (void) {
                 trace ("warning: XDG_LOCAL_HOME value is too long: %s. Ignoring.", xdg_local_home);
                 xdg_plugin_dir[0] = 0;
             }
-            written = snprintf (xdg_plugin_dir_explicit_arch, sizeof (xdg_plugin_dir_explicit_arch), "%s/.local/lib%d/deadbeef", homedir, (int)(sizeof (long) * 8));
-            if (written > sizeof (xdg_plugin_dir_explicit_arch)) {
-                trace ("warning: XDG_LOCAL_HOME value is too long: %s. Ignoring.", xdg_local_home);
-                xdg_plugin_dir_explicit_arch[0] = 0;
-            }
         }
     }
 
     // load from HOME 1st, than replace from installdir if needed
-    const char *plugins_dirs[] = { xdg_plugin_dir_explicit_arch, xdg_plugin_dir, dirname, NULL };
+    const char *plugins_dirs[] = { xdg_plugin_dir, dirname, NULL };
 
     // If xdg_plugin_dir and dirname is the same, we should avoid each plugin
     // to be load twice.
@@ -1171,7 +1165,7 @@ plug_select_output (void) {
     return 0;
 #else
     char outplugname[100];
-    conf_get_str ("output_plugin", "ALSA output plugin", outplugname, sizeof (outplugname));
+    conf_get_str ("output_plugin", "sndio output plugin", outplugname, sizeof (outplugname));
     for (int i = 0; g_output_plugins[i]; i++) {
         DB_output_t *p = g_output_plugins[i];
         if (!strcmp (p->plugin.name, outplugname)) {
@@ -1213,7 +1207,7 @@ plug_reinit_sound (void) {
 
     if (plug_select_output () < 0) {
         char outplugname[100];
-        conf_get_str ("output_plugin", "ALSA output plugin", outplugname, sizeof (outplugname));
+        conf_get_str ("output_plugin", "sndio output plugin", outplugname, sizeof (outplugname));
         trace ("failed to select output plugin %s\nreverted to %s\n", outplugname, prev->plugin.name);
         output_plugin = prev;
     }
