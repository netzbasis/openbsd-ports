$OpenBSD: patch-src_decoder_plugins_FfmpegDecoderPlugin_cxx,v 1.1 2015/10/23 07:53:05 dcoppa Exp $

Avoid a double free error while decoding a stream
http://stackoverflow.com/questions/9604633/reading-a-file-located-in-memory-with-libavformat

--- src/decoder/plugins/FfmpegDecoderPlugin.cxx.orig	Sat Jun 20 15:08:30 2015
+++ src/decoder/plugins/FfmpegDecoderPlugin.cxx	Fri Oct 23 09:33:49 2015
@@ -92,14 +92,18 @@ struct AvioStream {
 
 	AVIOContext *io;
 
-	unsigned char buffer[8192];
+	uint8_t *io_buffer = nullptr;
+	int io_buffer_size = 8192;
 
 	AvioStream(Decoder *_decoder, InputStream &_input)
 		:decoder(_decoder), input(_input), io(nullptr) {}
 
 	~AvioStream() {
-		if (io != nullptr)
+		if (io != nullptr) {
+			if (io->buffer != nullptr)
+				av_free(io->buffer);
 			av_free(io);
+		}
 	}
 
 	bool Open();
@@ -153,7 +157,15 @@ mpd_ffmpeg_stream_seek(void *opaque, int64_t pos, int 
 bool
 AvioStream::Open()
 {
-	io = avio_alloc_context(buffer, sizeof(buffer),
+	io_buffer = (uint8_t*)av_malloc(io_buffer_size);
+
+	if (!io_buffer) {
+		/* Not enough memory - shouldn't happen */
+		LogError(ffmpeg_domain, "av_malloc(io_buffer_size) failed");
+		return false;
+	}
+
+	io = avio_alloc_context(io_buffer, io_buffer_size,
 				false, this,
 				mpd_ffmpeg_stream_read, nullptr,
 				input.IsSeekable()
