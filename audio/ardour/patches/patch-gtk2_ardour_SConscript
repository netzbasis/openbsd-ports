$OpenBSD: patch-gtk2_ardour_SConscript,v 1.2 2013/03/08 01:25:44 brad Exp $
--- gtk2_ardour/SConscript.orig	Thu Apr 19 14:33:57 2012
+++ gtk2_ardour/SConscript	Sat Jan 26 01:17:52 2013
@@ -27,6 +27,8 @@ gtkardour.Append(POTFILE=domain + '.pot')
 if gtkardour['IS_OSX']:
 	gtkardour.Append (LINKFLAGS="-Xlinker -headerpad -Xlinker 2048")
 
+env.Append(LINKFLAGS = "-lboost_system-mt")
+
 gtkardour.Merge ([
     libraries['ardour'],
     libraries['ardour_cp'],
@@ -413,7 +415,7 @@ for style in ['', 'BOLD', 'ITALIC']:
 if env['GTKOSX']:
 	ardour_menus = env.Command ('ardour.menus', 'ardour.menus.in', "cpp -E -P -DGTKOSX -DTOP_MENUBAR ardour.menus.in ardour.menus", chdir=1)
 else:
-	ardour_menus = env.Command ('ardour.menus', 'ardour.menus.in', "cpp -E -P ardour.menus.in ardour.menus", chdir=1)
+	ardour_menus = env.Command ('ardour.menus', 'ardour.menus.in', "cpp -E -P ardour.menus.in > ardour.menus", chdir=1)
 
 ardour_dark_theme = env.SubstInFile ('ardour2_ui_dark.rc', 'ardour2_ui_dark.rc.in', SUBST_DICT = my_font_dict)
 ardour_light_theme = env.SubstInFile ('ardour2_ui_light.rc', 'ardour2_ui_light.rc.in', SUBST_DICT = my_font_dict)
@@ -529,14 +531,9 @@ if env['FREEDESKTOP']:
 	env.Alias('install', env.InstallAs(os.path.join(desktop_icon_install_prefix, '22x22', 'mimetypes', 'application-x-ardour2.png'), 'icons/application-x-ardour_22px.png'))
 	env.Alias('install', env.InstallAs(os.path.join(desktop_icon_install_prefix, '32x32', 'mimetypes', 'application-x-ardour2.png'), 'icons/application-x-ardour_32px.png'))
 	env.Alias('install', env.InstallAs(os.path.join(desktop_icon_install_prefix, '48x48', 'mimetypes', 'application-x-ardour2.png'), 'icons/application-x-ardour_48px.png'))
-	env.Alias('install', env.Command (os.path.join(install_prefix, 'share', 'mime'), [], 'update-mime-database $TARGET'))
-	# Update the icon cache #
-	env.Alias('install', env.Command (desktop_icon_install_prefix, [], 'touch --no-create $TARGET'))
-	env.Alias('install', env.Command (desktop_icon_install_prefix, [], 'gtk-update-icon-cache $TARGET'))
 	# Make the ardour2.desktop file and install it #
 	env.Alias('install', env.Command ('ardour2.desktop', 'ardour2.desktop.in', 'cat $SOURCES  > $TARGET'))
 	env.Alias('install', env.Install(os.path.join(install_prefix, 'share', 'applications'), 'ardour2.desktop'))
-	env.Alias('install', env.Command (os.path.join(install_prefix, 'share', 'applications'), [], 'update-desktop-database $TARGET'))
 	# uninstall target.. needed to run  update-mime-database and update-desktop-database after removal. #`
 	remove_desktop_files = env.Command ('another_frobnicatory_decoy', [],
                              [ Delete (install_prefix + '/share/mime/packages/ardour2.xml'),
