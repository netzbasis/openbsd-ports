$OpenBSD: patch-media_capture_video_video_capture_device_cc,v 1.3 2016/03/23 20:13:07 robert Exp $
--- media/capture/video/video_capture_device.cc.orig.port	Wed Feb 24 21:01:33 2016
+++ media/capture/video/video_capture_device.cc	Sat Mar  5 23:28:16 2016
@@ -16,16 +16,7 @@ namespace media {
 // TODO(msu.koo): http://crbug.com/532272, remove checking the switch in favour
 // of deferring GetModel() call to the actual VideoCaptureDevice object.
 const std::string VideoCaptureDevice::Name::GetNameAndModel() const {
-  const std::string model_id = GetModel();
-  if (model_id.empty())
-    return device_name_;
-  const std::string suffix = " (" + model_id + ")";
-  if (base::EndsWith(device_name_, suffix, base::CompareCase::SENSITIVE) ||
-      base::CommandLine::ForCurrentProcess()->HasSwitch(
-          switches::kUseFakeDeviceForMediaStream))
-    // Ignore |model_id| if |kUseFakeDeviceForMediaStream| flag is present.
-    return device_name_;
-  return device_name_ + suffix;
+  return "";
 }
 
 VideoCaptureDevice::Name::Name() {
@@ -35,7 +26,7 @@ VideoCaptureDevice::Name::Name(const std::string& name
     : device_name_(name), unique_id_(id) {
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
 VideoCaptureDevice::Name::Name(const std::string& name,
                                const std::string& id,
                                const CaptureApiType api_type)
@@ -82,7 +73,7 @@ VideoCaptureDevice::Name::Name(const std::string& name
 VideoCaptureDevice::Name::~Name() {
 }
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
 const char* VideoCaptureDevice::Name::GetCaptureApiTypeString() const {
   switch (capture_api_type()) {
     case V4L2_SINGLE_PLANE:
