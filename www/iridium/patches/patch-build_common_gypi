$OpenBSD: patch-build_common_gypi,v 1.9 2016/04/27 12:46:16 robert Exp $
--- build/common.gypi.orig.port	Thu Apr 14 08:30:54 2016
+++ build/common.gypi	Thu Apr 14 08:35:16 2016
@@ -112,7 +112,7 @@
 
           'conditions': [
             # Windows and Linux use Aura, but not Ash.
-            ['OS=="win" or OS=="linux"', {
+            ['OS=="win" or OS=="linux" or OS=="openbsd"', {
               'use_aura%': 1,
             }],
 
@@ -254,13 +254,13 @@
           }],
 
           # Enable HiDPI on Mac OS, Windows and Linux (including Chrome OS).
-          ['OS=="mac" or OS=="win" or OS=="linux"', {
+          ['OS=="mac" or OS=="win" or OS=="linux" or OS=="openbsd"', {
             'enable_hidpi%': 1,
           }],
 
           # Enable Top Chrome Material Design on Chrome OS, Windows, and Linux,
           # and Mac.
-          ['chromeos==1 or OS=="win" or OS=="linux" or OS=="mac"', {
+          ['chromeos==1 or OS=="win" or OS=="linux" or OS=="mac" or OS=="openbsd"', {
             'enable_topchrome_md%': 1,
           }],
 
@@ -778,7 +778,7 @@
         }],
 
         # DBus usage.
-        ['OS=="linux" and embedded==0', {
+        ['(OS=="linux" or OS=="openbsd") and embedded==0', {
           'use_dbus%': 1,
         }, {
           'use_dbus%': 0,
@@ -881,7 +881,7 @@
 
         # Use GPU accelerated cross process image transport by default
         # on linux builds with the Aura window manager
-        ['use_aura==1 and OS=="linux"', {
+        ['use_aura==1 and (OS=="linux" or OS=="openbsd")', {
           'ui_compositor_image_transport%': 1,
         }, {
           'ui_compositor_image_transport%': 0,
@@ -987,7 +987,7 @@
         # --help for more information. Meant to be overriden with GYP_DEFINES.
         # TODO(maruel): Remove the conditions as more configurations are
         # supported.
-        ['OS!="ios" and OS!="android" and chromeos==0', {
+        ['OS!="ios" and OS!="android" and chromeos==0 and OS!="openbsd"', {
           'test_isolation_mode%': 'check',
         }, {
           'test_isolation_mode%': 'noop',
@@ -1003,7 +1003,7 @@
         }, {
           'use_openmax_dl_fft%': 0,
         }],
-        ['OS=="win" or OS=="linux"', {
+        ['OS=="win" or OS=="linux" or OS=="openbsd"', {
           'enable_mdns%' : 1,
         }],
 
@@ -1633,7 +1633,7 @@
       ['OS=="win"', {
         'windows_driver_kit_path%': '$(WDK_DIR)',
       }],
-      ['os_posix==1 and OS!="mac" and OS!="ios"', {
+      ['os_posix==1 and OS!="mac" and OS!="ios" and OS!="openbsd"', {
         'conditions': [
           ['target_arch=="mipsel" or target_arch=="mips64el"', {
             'werror%': '',
@@ -3592,6 +3592,13 @@
     },
   },
   'conditions': [
+    ['OS=="openbsd"', {
+      'target_defaults': {
+        'cflags': [
+          '-Wno-unknown-warning-option',
+        ],
+      },
+    }],
     ['os_posix==1', {
       'target_defaults': {
         'ldflags': [
@@ -4710,7 +4717,7 @@
     }],
     # FreeBSD-specific options; note that most FreeBSD options are set above,
     # with Linux.
-    ['OS=="freebsd"', {
+    ['OS=="freebsd" or OS=="openbsd"', {
       'target_defaults': {
         'ldflags': [
           '-Wl,--no-keep-memory',
@@ -6003,8 +6010,8 @@
     ['clang==1 and ((OS!="mac" and OS!="ios") or clang_xcode==0) '
         'and OS!="win"', {
       'make_global_settings': [
-        ['CC', '<(make_clang_dir)/bin/clang'],
-        ['CXX', '<(make_clang_dir)/bin/clang++'],
+        ['CC', '/usr/local/bin/clang'],
+        ['CXX', '/usr/local/bin/clang++'],
         ['CC.host', '$(CC)'],
         ['CXX.host', '$(CXX)'],
       ],
