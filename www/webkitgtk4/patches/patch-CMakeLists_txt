$OpenBSD: patch-CMakeLists_txt,v 1.6 2015/11/05 16:46:18 ajacoutot Exp $
--- CMakeLists.txt.orig	Mon Oct 26 07:33:46 2015
+++ CMakeLists.txt	Thu Nov  5 17:45:06 2015
@@ -70,9 +70,9 @@ find_package(PythonInterp 2.7.0 REQUIRED)
 # We cannot check for RUBY_FOUND because it is set only when the full package is installed and
 # the only thing we need is the interpreter. Unlike Python, cmake does not provide a macro
 # for finding only the Ruby interpreter.
-find_package(Ruby 1.8.7)
-if (NOT RUBY_EXECUTABLE OR RUBY_VERSION VERSION_LESS 1.8.7)
-    message(FATAL_ERROR "Ruby 1.8.7 or higher is required.")
+find_package(Ruby ${MODRUBY_LIBREV})
+if (NOT RUBY_EXECUTABLE OR RUBY_VERSION VERSION_LESS ${MODRUBY_LIBREV})
+    message(FATAL_ERROR "Ruby ${MODRUBY_LIBREV} or higher is required.")
 endif ()
 
 # -----------------------------------------------------------------------------
@@ -97,7 +97,7 @@ elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(x64
     set(WTF_CPU_X86_64 1)
 elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(i[3-6]86|x86)")
     set(WTF_CPU_X86 1)
-elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "ppc")
+elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(ppc|powerpc)")
     set(WTF_CPU_PPC 1)
 elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "ppc64")
     set(WTF_CPU_PPC64 1)
@@ -109,6 +109,8 @@ elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "s390
     set(WTF_CPU_S390 1)
 elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "s390x")
     set(WTF_CPU_S390X 1)
+elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "sparc64")
+    set(WTF_CPU_SPARC64 1)
 else ()
     message(FATAL_ERROR "Unknown CPU '${LOWERCASE_CMAKE_SYSTEM_PROCESSOR}'")
 endif ()
