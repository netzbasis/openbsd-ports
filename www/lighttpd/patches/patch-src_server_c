$OpenBSD: patch-src_server_c,v 1.17 2016/10/12 08:09:26 ajacoutot Exp $

- [core] fix crash if ready events on abandoned fd (fixes #2748)
- performance: use Linux extended syscalls and flags

--- src/server.c.orig	Mon Oct 10 18:06:08 2016
+++ src/server.c	Mon Oct 10 18:04:38 2016
@@ -926,7 +926,7 @@ int main (int argc, char **argv) {
 
 	/* open pid file BEFORE chroot */
 	if (!buffer_string_is_empty(srv->srvconf.pid_file)) {
-		if (-1 == (pid_fd = open(srv->srvconf.pid_file->ptr, O_WRONLY | O_CREAT | O_EXCL | O_TRUNC, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH))) {
+		if (-1 == (pid_fd = fdevent_open_cloexec(srv->srvconf.pid_file->ptr, O_WRONLY | O_CREAT | O_EXCL | O_TRUNC, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH))) {
 			struct stat st;
 			if (errno != EEXIST) {
 				log_error_write(srv, __FILE__, __LINE__, "sbs",
@@ -951,7 +951,6 @@ int main (int argc, char **argv) {
 				return -1;
 			}
 		}
-		fd_close_on_exec(pid_fd);
 	}
 
 	if (srv->event_handler == FDEVENT_HANDLER_SELECT) {
@@ -1484,6 +1483,7 @@ int main (int argc, char **argv) {
 		FAMNoExists(&srv->stat_cache->fam);
 #endif
 
+		fd_close_on_exec(FAMCONNECTION_GETFD(&srv->stat_cache->fam));
 		fdevent_register(srv->ev, FAMCONNECTION_GETFD(&srv->stat_cache->fam), stat_cache_handle_fdevent, NULL);
 		fdevent_event_set(srv->ev, &(srv->stat_cache->fam_fcce_ndx), FAMCONNECTION_GETFD(&srv->stat_cache->fam), FDEVENT_IN);
 	}
@@ -1497,7 +1497,7 @@ int main (int argc, char **argv) {
 	for (i = 0; i < srv->srv_sockets.used; i++) {
 		server_socket *srv_socket = srv->srv_sockets.ptr[i];
 		if (srv->sockets_disabled) continue; /* lighttpd -1 (one-shot mode) */
-		if (-1 == fdevent_fcntl_set(srv->ev, srv_socket->fd)) {
+		if (-1 == fdevent_fcntl_set_nb_cloexec_sock(srv->ev, srv_socket->fd)) {
 			log_error_write(srv, __FILE__, __LINE__, "ss", "fcntl failed:", strerror(errno));
 			return -1;
 		}
@@ -1792,8 +1792,11 @@ int main (int argc, char **argv) {
 				fd      = fdevent_event_get_fd     (srv->ev, fd_ndx);
 				handler = fdevent_get_handler(srv->ev, fd);
 				context = fdevent_get_context(srv->ev, fd);
-				(*handler)(srv, context, revents);
+				if (NULL != handler) {
+					(*handler)(srv, context, revents);
+				}
 			} while (--n > 0);
+			fdevent_sched_run(srv, srv->ev);
 		} else if (n < 0 && errno != EINTR) {
 			log_error_write(srv, __FILE__, __LINE__, "ss",
 					"fdevent_poll failed:",
