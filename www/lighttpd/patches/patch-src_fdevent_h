$OpenBSD: patch-src_fdevent_h,v 1.2 2016/10/12 08:09:26 ajacoutot Exp $

- [core] check if client half-closed TCP if POLLHUP (#2743)
- [core] fix crash if ready events on abandoned fd (fixes #2748)
- performance: use Linux extended syscalls and flags

--- src/fdevent.h.orig	Mon Oct 10 18:05:33 2016
+++ src/fdevent.h	Mon Oct 10 18:04:38 2016
@@ -125,6 +125,7 @@ typedef struct fdevents {
 
 	fdnode **fdarray;
 	size_t maxfds;
+	int highfd;
 
 #ifdef USE_LINUX_EPOLL
 	int epoll_fd;
@@ -202,9 +203,17 @@ int fdevent_poll(fdevents *ev, int timeout_ms);
 
 int fdevent_register(fdevents *ev, int fd, fdevent_handler handler, void *ctx);
 int fdevent_unregister(fdevents *ev, int fd);
+void fdevent_sched_close(fdevents *ev, int fd, int issock);
+void fdevent_sched_run(struct server *srv, fdevents *ev);
 
 void fd_close_on_exec(int fd);
 int fdevent_fcntl_set(fdevents *ev, int fd);
+int fdevent_fcntl_set_nb(fdevents *ev, int fd);
+int fdevent_fcntl_set_nb_cloexec(fdevents *ev, int fd);
+int fdevent_fcntl_set_nb_cloexec_sock(fdevents *ev, int fd);
+int fdevent_socket_cloexec(int domain, int type, int protocol);
+int fdevent_socket_nb_cloexec(int domain, int type, int protocol);
+int fdevent_open_cloexec(const char *pathname, int flags, mode_t mode);
 
 int fdevent_select_init(fdevents *ev);
 int fdevent_poll_init(fdevents *ev);
@@ -213,5 +222,8 @@ int fdevent_solaris_devpoll_init(fdevents *ev);
 int fdevent_solaris_port_init(fdevents *ev);
 int fdevent_freebsd_kqueue_init(fdevents *ev);
 int fdevent_libev_init(fdevents *ev);
+
+/* fd must be TCP socket (AF_INET, AF_INET6), end-of-stream recv() 0 bytes */
+int fdevent_is_tcp_half_closed(int fd);
 
 #endif
