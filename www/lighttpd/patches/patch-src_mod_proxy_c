$OpenBSD: patch-src_mod_proxy_c,v 1.11 2016/10/12 08:09:26 ajacoutot Exp $

- [core] enforce wait for POLLWR after EINPROGRESS (fixes #2744)
- [core] proxy,scgi omit shutdown() to backend (fixes #2743)
- [core] fix crash if ready events on abandoned fd (fixes #2748)
- performance: use Linux extended syscalls and flags

--- src/mod_proxy.c.orig	Mon Oct 10 18:05:54 2016
+++ src/mod_proxy.c	Mon Oct 10 18:04:38 2016
@@ -341,9 +341,7 @@ static void proxy_connection_close(server *srv, handle
 	if (hctx->fd != -1) {
 		fdevent_event_del(srv->ev, &(hctx->fde_ndx), hctx->fd);
 		fdevent_unregister(srv->ev, hctx->fd);
-
-		close(hctx->fd);
-		srv->cur_fds--;
+		fdevent_sched_close(srv->ev, hctx->fd, 1);
 	}
 
 	if (hctx->host) {
@@ -784,14 +782,14 @@ static handler_t proxy_write_request(server *srv, hand
 #endif
 #if defined(HAVE_IPV6) && defined(HAVE_INET_PTON)
 		if (strstr(host->host->ptr,":")) {
-			if (-1 == (hctx->fd = socket(AF_INET6, SOCK_STREAM, 0))) {
+			if (-1 == (hctx->fd = fdevent_socket_nb_cloexec(AF_INET6, SOCK_STREAM, 0))) {
 				log_error_write(srv, __FILE__, __LINE__, "ss", "socket failed: ", strerror(errno));
 				return HANDLER_ERROR;
 			}
 		} else
 #endif
 		{
-			if (-1 == (hctx->fd = socket(AF_INET, SOCK_STREAM, 0))) {
+			if (-1 == (hctx->fd = fdevent_socket_nb_cloexec(AF_INET, SOCK_STREAM, 0))) {
 				log_error_write(srv, __FILE__, __LINE__, "ss", "socket failed: ", strerror(errno));
 				return HANDLER_ERROR;
 			}
@@ -818,7 +816,7 @@ static handler_t proxy_write_request(server *srv, hand
 
 			return HANDLER_WAIT_FOR_EVENT;
 		case -1:
-			/* if ECONNREFUSED choose another connection -> FIXME */
+			/* if ECONNREFUSED choose another connection */
 			hctx->fde_ndx = -1;
 
 			return HANDLER_ERROR;
@@ -854,7 +852,6 @@ static handler_t proxy_write_request(server *srv, hand
 
 		if (hctx->wb->bytes_out == hctx->wb_reqlen) {
 			fdevent_event_clr(srv->ev, &(hctx->fde_ndx), hctx->fd, FDEVENT_OUT);
-			shutdown(hctx->fd, SHUT_WR);/* future: remove if HTTP/1.1 request */
 			proxy_set_state(srv, hctx, PROXY_STATE_READ);
 		} else {
 			off_t wblen = hctx->wb->bytes_in - hctx->wb->bytes_out;
@@ -992,7 +989,8 @@ SUBREQUEST_FUNC(mod_proxy_handle_subrequest) {
 		}
 	}
 
-	return (0 == hctx->wb->bytes_in || !chunkqueue_is_empty(hctx->wb))
+	return ((0 == hctx->wb->bytes_in || !chunkqueue_is_empty(hctx->wb))
+		&& hctx->state != PROXY_STATE_CONNECT)
 	  ? proxy_send_request(srv, hctx)
 	  : HANDLER_WAIT_FOR_EVENT;
 }
