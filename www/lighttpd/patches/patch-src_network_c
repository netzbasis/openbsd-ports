$OpenBSD: patch-src_network_c,v 1.11 2016/10/12 08:09:26 ajacoutot Exp $

performance: use Linux extended syscalls and flags

--- src/network.c.orig	Sun Jul 31 08:42:39 2016
+++ src/network.c	Mon Oct 10 18:04:38 2016
@@ -382,7 +382,7 @@ static int network_server_init(server *srv, buffer *ho
 	if (AF_UNIX == srv_socket->addr.plain.sa_family) {
 		/* check if the socket exists and try to connect to it. */
 		force_assert(host); /*(static analysis hint)*/
-		if (-1 == (srv_socket->fd = socket(srv_socket->addr.plain.sa_family, SOCK_STREAM, 0))) {
+		if (-1 == (srv_socket->fd = fdevent_socket_cloexec(srv_socket->addr.plain.sa_family, SOCK_STREAM, 0))) {
 			log_error_write(srv, __FILE__, __LINE__, "ss", "socket failed:", strerror(errno));
 			goto error_free_socket;
 		}
@@ -409,10 +409,12 @@ static int network_server_init(server *srv, buffer *ho
 
 			goto error_free_socket;
 		}
+
+		fdevent_fcntl_set_nb(srv->ev, srv_socket->fd);
 	} else
 #endif
 	{
-		if (-1 == (srv_socket->fd = socket(srv_socket->addr.plain.sa_family, SOCK_STREAM, IPPROTO_TCP))) {
+		if (-1 == (srv_socket->fd = fdevent_socket_nb_cloexec(srv_socket->addr.plain.sa_family, SOCK_STREAM, IPPROTO_TCP))) {
 			log_error_write(srv, __FILE__, __LINE__, "ss", "socket failed:", strerror(errno));
 			goto error_free_socket;
 		}
@@ -432,9 +434,6 @@ static int network_server_init(server *srv, buffer *ho
 		}
 #endif
 	}
-
-	/* set FD_CLOEXEC now, fdevent_fcntl_set is called later; needed for pipe-logger forks */
-	fd_close_on_exec(srv_socket->fd);
 
 	/* */
 	srv->cur_fds = srv_socket->fd;
