$OpenBSD: patch-third_party_libjingle_source_talk_base_cpumonitor_cc,v 1.3 2014/09/11 19:04:52 robert Exp $
--- third_party/libjingle/source/talk/base/cpumonitor.cc.orig.port	Wed Sep 10 01:47:33 2014
+++ third_party/libjingle/source/talk/base/cpumonitor.cc	Wed Sep 10 22:05:41 2014
@@ -53,7 +53,7 @@
 #include <mach/task.h>
 #endif  // defined(IOS) || defined(OSX)
 
-#if defined(LINUX) || defined(ANDROID)
+#if defined(LINUX) || defined(ANDROID) || defined(OS_BSD)
 #include <sys/resource.h>
 #include <errno.h>
 #include <stdio.h>
@@ -286,6 +286,9 @@ float CpuSampler::GetSystemLoad() {
   const uint64 total_times = cpu_times + idle;
 #endif  // defined(LINUX) || defined(ANDROID)
 
+#if defined(OPENBSD)
+  return 0;
+#else
 #if defined(__native_client__)
   // TODO(ryanpetrie): Implement this via PPAPI when it's available.
   const uint64 cpu_times = 0;
@@ -298,6 +301,7 @@ float CpuSampler::GetSystemLoad() {
                                      &system_.prev_total_times_,
                                      &system_.prev_cpu_times_);
   return system_.prev_load_;
+#endif
 }
 
 float CpuSampler::GetProcessLoad() {
@@ -359,7 +363,7 @@ float CpuSampler::GetProcessLoad() {
       TimeValueTToInt64(task_term_info.system_time));
 #endif  // defined(IOS) || defined(OSX)
 
-#if defined(LINUX) || defined(ANDROID)
+#if defined(LINUX) || defined(ANDROID) || defined(OS_BSD)
   rusage usage;
   if (getrusage(RUSAGE_SELF, &usage) < 0) {
     LOG_ERR(LS_ERROR) << "getrusage failed";
