$OpenBSD: patch-media_capture_video_video_capture_device_h,v 1.7 2016/09/01 16:28:11 robert Exp $
--- media/capture/video/video_capture_device.h.orig.port	Thu Sep  1 00:03:32 2016
+++ media/capture/video/video_capture_device.h	Thu Sep  1 11:12:23 2016
@@ -55,7 +55,7 @@ class CAPTURE_EXPORT VideoCaptureDevice {
     Name();
     Name(const std::string& name, const std::string& id);
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
     // Linux/CrOS targets Capture Api type: it can only be set on construction.
     enum CaptureApiType {
       V4L2_SINGLE_PLANE,
@@ -86,7 +86,7 @@ class CAPTURE_EXPORT VideoCaptureDevice {
 #endif
 
 #if defined(OS_WIN) || defined(OS_MACOSX) || defined(OS_LINUX) || \
-    defined(OS_ANDROID)
+    defined(OS_ANDROID) || defined(OS_BSD)
     Name(const std::string& name,
          const std::string& id,
          const CaptureApiType api_type);
@@ -124,7 +124,7 @@ class CAPTURE_EXPORT VideoCaptureDevice {
     bool operator<(const Name& other) const { return unique_id_ < other.id(); }
 
 #if defined(OS_WIN) || defined(OS_MACOSX) || defined(OS_LINUX) || \
-    defined(OS_ANDROID)
+    defined(OS_ANDROID) || defined(OS_BSD)
     CaptureApiType capture_api_type() const {
       return capture_api_class_.capture_api_type();
     }
@@ -144,7 +144,7 @@ class CAPTURE_EXPORT VideoCaptureDevice {
     std::string device_name_;
     std::string unique_id_;
 #if defined(OS_WIN) || defined(OS_MACOSX) || defined(OS_LINUX) || \
-    defined(OS_ANDROID)
+    defined(OS_ANDROID) || defined(OS_BSD)
     // This class wraps the CaptureApiType to give it a by default value if not
     // initialized.
     class CaptureApiClass {
