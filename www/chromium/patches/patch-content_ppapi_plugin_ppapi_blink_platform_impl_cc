$OpenBSD: patch-content_ppapi_plugin_ppapi_blink_platform_impl_cc,v 1.4 2015/12/05 16:13:32 robert Exp $
--- content/ppapi_plugin/ppapi_blink_platform_impl.cc.orig.port	Fri Nov 13 12:04:17 2015
+++ content/ppapi_plugin/ppapi_blink_platform_impl.cc	Wed Dec  2 08:18:32 2015
@@ -19,7 +19,7 @@
 
 #if defined(OS_MACOSX)
 #include "third_party/WebKit/public/platform/mac/WebSandboxSupport.h"
-#elif defined(OS_POSIX) && !defined(OS_ANDROID)
+#elif defined(OS_POSIX) && !defined(OS_ANDROID) && !defined(OS_BSD)
 #include "content/common/child_process_sandbox_support_impl_linux.h"
 #include "third_party/WebKit/public/platform/linux/WebFallbackFont.h"
 #include "third_party/WebKit/public/platform/linux/WebSandboxSupport.h"
@@ -35,7 +35,7 @@ typedef struct CGFont* CGFontRef;
 
 namespace content {
 
-#if !defined(OS_ANDROID) && !defined(OS_WIN)
+#if !defined(OS_ANDROID) && !defined(OS_WIN) && !defined(OS_BSD)
 
 class PpapiBlinkPlatformImpl::SandboxSupport : public WebSandboxSupport {
  public:
@@ -116,7 +116,7 @@ void PpapiBlinkPlatformImpl::SandboxSupport::getRender
 
 PpapiBlinkPlatformImpl::PpapiBlinkPlatformImpl()
     : main_thread_(new scheduler::WebThreadImplForPPAPI()) {
-#if !defined(OS_ANDROID) && !defined(OS_WIN)
+#if !defined(OS_ANDROID) && !defined(OS_WIN) && !defined(OS_BSD)
   sandbox_support_.reset(new PpapiBlinkPlatformImpl::SandboxSupport);
 #endif
 }
@@ -125,7 +125,7 @@ PpapiBlinkPlatformImpl::~PpapiBlinkPlatformImpl() {
 }
 
 void PpapiBlinkPlatformImpl::Shutdown() {
-#if !defined(OS_ANDROID) && !defined(OS_WIN)
+#if !defined(OS_ANDROID) && !defined(OS_WIN) && !defined(OS_BSD)
   // SandboxSupport contains a map of WebFontFamily objects, which hold
   // WebCStrings, which become invalidated when blink is shut down. Hence, we
   // need to clear that map now, just before blink::shutdown() is called.
@@ -155,7 +155,7 @@ blink::WebFileUtilities* PpapiBlinkPlatformImpl::fileU
 }
 
 blink::WebSandboxSupport* PpapiBlinkPlatformImpl::sandboxSupport() {
-#if !defined(OS_ANDROID) && !defined(OS_WIN)
+#if !defined(OS_ANDROID) && !defined(OS_WIN) && !defined(OS_BSD)
   return sandbox_support_.get();
 #else
   return nullptr;
