$OpenBSD: patch-content_gpu_gpu_main_cc,v 1.1 2015/01/22 11:16:41 robert Exp $
--- content/gpu/gpu_main.cc.orig.port	Fri Dec 26 19:55:38 2014
+++ content/gpu/gpu_main.cc	Fri Dec 26 19:59:25 2014
@@ -162,13 +162,13 @@ int GpuMain(const MainFunctionParams& parameters) {
     message_loop_type = base::MessageLoop::TYPE_UI;
   }
   base::MessageLoop main_message_loop(message_loop_type);
-#elif defined(OS_LINUX) && defined(USE_X11)
+#elif (defined(OS_BSD) || defined(OS_LINUX)) && defined(USE_X11)
   // We need a UI loop so that we can grab the Expose events. See GLSurfaceGLX
   // and https://crbug.com/326995.
   base::MessageLoop main_message_loop(base::MessageLoop::TYPE_UI);
   scoped_ptr<ui::PlatformEventSource> event_source =
       ui::PlatformEventSource::CreateDefault();
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) || defined(OS_BSD)
   base::MessageLoop main_message_loop(base::MessageLoop::TYPE_DEFAULT);
 #elif defined(OS_MACOSX)
   // This is necessary for CoreAnimation layers hosted in the GPU process to be
@@ -216,7 +216,7 @@ int GpuMain(const MainFunctionParams& parameters) {
   // Temporarily disable DRI3 on desktop Linux.
   // The GPU process is crashing on DRI3-enabled desktop Linux systems.
   // TODO(jorgelo): remove this when crbug.com/415681 is fixed.
-#if defined(OS_LINUX) && !defined(OS_CHROMEOS)
+#if (defined(OS_BSD) || defined(OS_LINUX)) && !defined(OS_CHROMEOS)
   {
     scoped_ptr<base::Environment> env(base::Environment::Create());
     env->SetVar("LIBGL_DRI3_DISABLE", "1");
