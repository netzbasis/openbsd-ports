$OpenBSD: patch-ui_base_ime_input_method_initializer_cc,v 1.1 2014/07/20 17:22:34 robert Exp $
--- ui/base/ime/input_method_initializer.cc.orig.port	Sat Jul 19 05:58:51 2014
+++ ui/base/ime/input_method_initializer.cc	Sun Jul 20 03:01:51 2014
@@ -6,14 +6,14 @@
 
 #if defined(OS_CHROMEOS)
 #include "ui/base/ime/chromeos/ime_bridge.h"
-#elif defined(USE_AURA) && defined(OS_LINUX) && !defined(USE_OZONE)
+#elif defined(USE_AURA) && (defined(OS_LINUX) || defined(OS_BSD)) && !defined(USE_OZONE)
 #include "base/logging.h"
 #include "ui/base/ime/linux/fake_input_method_context_factory.h"
 #endif
 
 namespace {
 
-#if !defined(OS_CHROMEOS) && defined(USE_AURA) && defined(OS_LINUX) && \
+#if !defined(OS_CHROMEOS) && defined(USE_AURA) && (defined(OS_LINUX) || defined(OS_BSD)) && \
     !defined(USE_OZONE)
 const ui::LinuxInputMethodContextFactory* g_linux_input_method_context_factory;
 #endif
@@ -37,7 +37,7 @@ void ShutdownInputMethod() {
 void InitializeInputMethodForTesting() {
 #if defined(OS_CHROMEOS)
   chromeos::IMEBridge::Initialize();
-#elif defined(USE_AURA) && defined(OS_LINUX) && !defined(USE_OZONE)
+#elif defined(USE_AURA) && (defined(OS_LINUX) || defined(OS_BSD)) && !defined(USE_OZONE)
   if (!g_linux_input_method_context_factory)
     g_linux_input_method_context_factory = new FakeInputMethodContextFactory();
   const LinuxInputMethodContextFactory* factory =
@@ -53,7 +53,7 @@ void InitializeInputMethodForTesting() {
 void ShutdownInputMethodForTesting() {
 #if defined(OS_CHROMEOS)
   chromeos::IMEBridge::Shutdown();
-#elif defined(USE_AURA) && defined(OS_LINUX) && !defined(USE_OZONE)
+#elif defined(USE_AURA) && (defined(OS_LINUX) || defined(OS_BSD)) && !defined(USE_OZONE)
   const LinuxInputMethodContextFactory* factory =
       LinuxInputMethodContextFactory::instance();
   CHECK(!factory || factory == g_linux_input_method_context_factory)
