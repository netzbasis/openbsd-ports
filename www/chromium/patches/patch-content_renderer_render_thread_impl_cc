$OpenBSD: patch-content_renderer_render_thread_impl_cc,v 1.20 2017/07/27 14:23:46 robert Exp $

Index: content/renderer/render_thread_impl.cc
--- content/renderer/render_thread_impl.cc.orig
+++ content/renderer/render_thread_impl.cc
@@ -218,12 +218,21 @@
 #include "content/common/external_ipc_dumper.h"
 #endif
 
+#if !defined(OS_BSD)
 #if defined(OS_MACOSX)
 #include <malloc/malloc.h>
 #else
 #include <malloc.h>
 #endif
+#endif
 
+#if defined(OS_BSD)
+#include <stddef.h>
+#include <stdint.h>
+#include <sys/param.h>
+#include <sys/sysctl.h>
+#endif
+
 using base::ThreadRestrictions;
 using blink::WebDocument;
 using blink::WebFrame;
@@ -912,7 +921,7 @@ void RenderThreadImpl::Init(
   GetConnector()->BindInterface(mojom::kBrowserServiceName,
                                 mojo::MakeRequest(&storage_partition_service_));
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   ChildProcess::current()->SetIOThreadPriority(base::ThreadPriority::DISPLAY);
   ChildThreadImpl::current()->SetThreadPriority(
       categorized_worker_pool_->background_worker_thread_id(),
@@ -1112,7 +1121,7 @@ void RenderThreadImpl::InitializeCompositorThread() {
   compositor_task_runner_->PostTask(
       FROM_HERE,
       base::Bind(base::IgnoreResult(&ThreadRestrictions::SetIOAllowed), false));
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   ChildThreadImpl::current()->SetThreadPriority(compositor_thread_->ThreadId(),
                                                 base::ThreadPriority::DISPLAY);
 #endif
@@ -1416,7 +1425,7 @@ media::GpuVideoAcceleratorFactories* RenderThreadImpl:
   const bool enable_video_accelerator =
       !cmd_line->HasSwitch(switches::kDisableAcceleratedVideoDecode);
   const bool enable_gpu_memory_buffer_video_frames =
-#if defined(OS_MACOSX) || defined(OS_LINUX)
+#if defined(OS_MACOSX) || defined(OS_LINUX) || defined(OS_BSD)
       !cmd_line->HasSwitch(switches::kDisableGpuMemoryBufferVideoFrames) &&
       !cmd_line->HasSwitch(switches::kDisableGpuCompositing) &&
       !gpu_channel_host->gpu_info().software_rendering;
@@ -1771,6 +1780,23 @@ bool RenderThreadImpl::GetRendererMemoryMetrics(
 #else
   size_t malloc_usage = minfo.hblkhd + minfo.arena;
 #endif
+#elif defined(OS_BSD)
+  struct kinfo_proc *info;
+  size_t length, malloc_usage = 0;
+  int mib[] = { CTL_KERN, KERN_PROC, KERN_PROC_PID, getpid(),
+      sizeof(struct kinfo_proc), 0 };
+
+  if (sysctl(mib, arraysize(mib), NULL, &length, NULL, 0) < 0)
+    return -1;
+
+  info = (struct kinfo_proc *)malloc(length);
+
+  mib[5] = (length / sizeof(struct kinfo_proc));
+
+  if (!sysctl(mib, arraysize(mib), info, &length, NULL, 0))
+    malloc_usage = (((unsigned long long)(info->p_vm_tsize + info->p_vm_dsize + info->p_vm_ssize)*getpagesize()));
+
+  free(info);
 #else
   size_t malloc_usage = GetMallocUsage();
 #endif
