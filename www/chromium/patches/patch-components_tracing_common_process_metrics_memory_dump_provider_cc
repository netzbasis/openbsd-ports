$OpenBSD: patch-components_tracing_common_process_metrics_memory_dump_provider_cc,v 1.3 2017/07/27 14:23:46 robert Exp $

Index: components/tracing/common/process_metrics_memory_dump_provider.cc
--- components/tracing/common/process_metrics_memory_dump_provider.cc.orig
+++ components/tracing/common/process_metrics_memory_dump_provider.cc
@@ -57,7 +57,7 @@ base::LazyInstance<
              std::unique_ptr<ProcessMetricsMemoryDumpProvider>>>::Leaky
     g_dump_providers_map = LAZY_INSTANCE_INITIALIZER;
 
-#if defined(OS_LINUX) || defined(OS_ANDROID)
+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_BSD)
 const char kClearPeakRssCommand[] = "5";
 
 const uint32_t kMaxLineSize = 4096;
@@ -200,7 +200,7 @@ std::unique_ptr<base::ProcessMetrics> CreateProcessMet
     base::ProcessId process) {
   if (process == base::kNullProcessId)
     return base::ProcessMetrics::CreateCurrentProcessMetrics();
-#if defined(OS_LINUX) || defined(OS_ANDROID)
+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_BSD)
   // Just pass ProcessId instead of handle since they are the same in linux and
   // android.
   return base::ProcessMetrics::CreateProcessMetrics(process);
@@ -221,7 +221,7 @@ uint64_t ProcessMetricsMemoryDumpProvider::rss_bytes_f
 ProcessMetricsMemoryDumpProvider::FactoryFunction
     ProcessMetricsMemoryDumpProvider::factory_for_testing = nullptr;
 
-#if defined(OS_LINUX) || defined(OS_ANDROID)
+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_BSD)
 
 // static
 FILE* ProcessMetricsMemoryDumpProvider::proc_smaps_for_testing = nullptr;
@@ -637,7 +637,7 @@ bool ProcessMetricsMemoryDumpProvider::DumpProcessTota
 
   uint64_t peak_rss_bytes = 0;
 
-#if defined(OS_LINUX) || defined(OS_ANDROID)
+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_BSD)
   base::trace_event::ProcessMemoryTotals::PlatformPrivateFootprint footprint;
 
   base::ScopedFD autoclose;
@@ -673,7 +673,7 @@ bool ProcessMetricsMemoryDumpProvider::DumpProcessTota
 
 #if !defined(OS_IOS)
   peak_rss_bytes = process_metrics_->GetPeakWorkingSetSize();
-#if defined(OS_LINUX) || defined(OS_ANDROID)
+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_BSD)
   if (is_rss_peak_resettable_) {
     std::string clear_refs_file =
         "/proc/" +
@@ -714,7 +714,7 @@ bool ProcessMetricsMemoryDumpProvider::DumpProcessTota
   return true;
 }
 
-#if defined(OS_LINUX) || defined(OS_ANDROID)
+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_BSD)
 base::ScopedFD ProcessMetricsMemoryDumpProvider::OpenStatm() {
   std::string name =
       "/proc/" +
@@ -730,7 +730,7 @@ base::ScopedFD ProcessMetricsMemoryDumpProvider::OpenS
 void ProcessMetricsMemoryDumpProvider::PollFastMemoryTotal(
     uint64_t* memory_total) {
   *memory_total = 0;
-#if defined(OS_LINUX) || defined(OS_ANDROID)
+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_BSD)
 
   int statm_fd = fast_polling_statm_fd_for_testing;
   if (statm_fd == -1) {
@@ -755,7 +755,7 @@ void ProcessMetricsMemoryDumpProvider::PollFastMemoryT
 }
 
 void ProcessMetricsMemoryDumpProvider::SuspendFastMemoryPolling() {
-#if defined(OS_LINUX) || defined(OS_ANDROID)
+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_BSD)
   fast_polling_statm_fd_.reset();
 #endif
 }
