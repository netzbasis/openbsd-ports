$OpenBSD: patch-dom_ipc_ContentChild_cpp,v 1.2 2018/06/27 05:05:20 landry Exp $

Index: dom/ipc/ContentChild.cpp
--- dom/ipc/ContentChild.cpp.orig
+++ dom/ipc/ContentChild.cpp
@@ -103,6 +103,8 @@
 #include "CubebUtils.h"
 #elif defined(XP_MACOSX)
 #include "mozilla/Sandbox.h"
+#elif defined(__OpenBSD__)
+#include <unistd.h>
 #endif
 #endif
 
@@ -1737,6 +1739,25 @@ ContentChild::RecvSetProcessSandbox(const MaybeFileDes
   mozilla::SandboxTarget::Instance()->StartSandbox();
 #elif defined(XP_MACOSX)
   sandboxEnabled = StartMacOSContentSandbox();
+#elif defined(__OpenBSD__)
+  nsAutoCString promisesString;
+  Preferences::GetCString("security.sandbox.pledge.content",
+                          promisesString);
+  if (pledge(promisesString.get(), NULL) == -1) {
+    if (errno == EINVAL)
+        printf_stderr("(pid=%d) pledge promises for content process is a malformed string: '%s'\n", getpid(), promisesString.get());
+    if (errno == EPERM)
+        printf_stderr("pledge promises for content process cant elevate priviledges: '%s'\n", promisesString.get());
+  } else {
+    if (getenv("MOZ_SANDBOX_LOGGING")) {
+      printf_stderr("(pid=%d) pledged content process with promises: '%s'\n", getpid(), promisesString.get());
+    }
+    if (!getenv("DBUS_SESSION_BUS_ADDRESS")) {
+      printf_stderr("(pid=%d) no session dbus found, faking one\n", getpid());
+    }
+    /* dont overwrite an existing session dbus address, but ensure it is set */
+    setenv("DBUS_SESSION_BUS_ADDRESS","",0);
+  }
 #endif
 
   CrashReporter::AnnotateCrashReport(
