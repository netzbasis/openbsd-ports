$OpenBSD: patch-src_calibre_headless_fontconfig_database_cpp,v 1.3 2020/02/28 19:25:27 rsadowski Exp $
Subject: [PATCH] Compatibility with qt5-5.9.0
Commit-Id: 82bd2e1a51df0650cb40894c5dc2b958f601a91d

Qt 5.11 compatibility
Commit-Id: 68bbec179abc980ebcb3f13854d2e4fd46f489

Index: src/calibre/headless/fontconfig_database.cpp
--- src/calibre/headless/fontconfig_database.cpp.orig
+++ src/calibre/headless/fontconfig_database.cpp
@@ -48,14 +48,18 @@
 #include <qpa/qplatformservices.h>
 
 #if (QT_VERSION >= QT_VERSION_CHECK(5, 8, 0))
-#include <QtFontDatabaseSupport/private/qfontenginemultifontconfig_p.h>
+#  include <QtFontDatabaseSupport/private/qfontenginemultifontconfig_p.h>
 #else
-#include <QtPlatformSupport/private/qfontenginemultifontconfig_p.h>
+#  include <QtPlatformSupport/private/qfontenginemultifontconfig_p.h>
 #endif
-#include <QtGui/private/qfontengine_ft_p.h>
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
+#  include <QtFontDatabaseSupport/private/qfontengine_ft_p.h>
+#else
+#  include <QtGui/private/qfontengine_ft_p.h>
+#endif
 #include <QtGui/private/qguiapplication_p.h>
 #if (QT_VERSION >= QT_VERSION_CHECK(5, 6, 0))
-#include <QtGui/private/qhighdpiscaling_p.h>
+#  include <QtGui/private/qhighdpiscaling_p.h>
 #endif
 
 #include <QtGui/qguiapplication.h>
@@ -280,7 +284,21 @@ static const char specialLanguages[][6] = {
     "", // Hatran
     "", // Multani
     "", // OldHungarian
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 11, 0))
+    "", // SignWriting
+    "", // Adlam
+    "", // Bhaiksuki
+    "", // Marchen
+    "", // Newa
+    "", // Osage
+    "", // Tangut
+    "", // MasaramGondi
+    "", // Nushu
+    "", // Soyombo
+    "" // ZanabazarSquare
+#else
     ""  // SignWriting
+#endif // Qt >= 5.11
 #else
     "hoc"  // WarangCiti
 #endif  // Qt >= 5.6.0
@@ -763,7 +781,7 @@ QFontEngine *QFontconfigDatabase::fontEngine(const QFo
 
 QFontEngine *QFontconfigDatabase::fontEngine(const QByteArray &fontData, qreal pixelSize, QFont::HintingPreference hintingPreference)
 {
-    QFontEngineFT *engine = static_cast<QFontEngineFT*>(QBasicFontDatabase::fontEngine(fontData, pixelSize, hintingPreference));
+    QFontEngineFT *engine = static_cast<QFontEngineFT*>(QFreeTypeFontDatabase::fontEngine(fontData, pixelSize, hintingPreference));
     if (engine == 0)
         return 0;
 
@@ -915,7 +933,7 @@ QStringList QFontconfigDatabase::addApplicationFont(co
 
 QString QFontconfigDatabase::resolveFontFamilyAlias(const QString &family) const
 {
-    QString resolved = QBasicFontDatabase::resolveFontFamilyAlias(family);
+    QString resolved = QFreeTypeFontDatabase::resolveFontFamilyAlias(family);
     if (!resolved.isEmpty() && resolved != family)
         return resolved;
     FcPattern *pattern = FcPatternCreate();
