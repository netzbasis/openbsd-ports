$OpenBSD: patch-source_XMPFiles_FormatSupport_RIFF_Support_cpp,v 1.1 2018/04/10 16:53:12 jasper Exp $

https://cgit.freedesktop.org/exempi/commit/?id=b6ff77dd74a1

Index: source/XMPFiles/FormatSupport/RIFF_Support.cpp
--- source/XMPFiles/FormatSupport/RIFF_Support.cpp.orig
+++ source/XMPFiles/FormatSupport/RIFF_Support.cpp
@@ -604,7 +604,7 @@ static void exportXMPtoBextChunk( RIFF_MetaHandler* ha
 	// prepare buffer, need to know CodingHistory size as the only variable
 	XMP_Int32 bextBufferSize = MIN_BEXT_SIZE - 8; // -8 because of header
 	std::string value;
-	if ( xmp->GetProperty( bextCodingHistory.ns, bextCodingHistory.prop, &value, kXMP_NoOptions ))
+	if ( xmp->GetProperty( bextCodingHistory.ns, bextCodingHistory.prop, &value, 0 ))
 	{
 		bextBufferSize += ((XMP_StringLen)value.size()) + 1 ; // add to size (and a trailing zero)
 	}
@@ -616,35 +616,35 @@ static void exportXMPtoBextChunk( RIFF_MetaHandler* ha
 
 	// grab props, write into buffer, remove from XMP ///////////////////////////
 	// bextDescription ------------------------------------------------
-	if ( xmp->GetProperty( bextDescription.ns, bextDescription.prop, &value, kXMP_NoOptions ) )
+	if ( xmp->GetProperty( bextDescription.ns, bextDescription.prop, &value, 0 ) )
 	{
 		setBextField( &value, (XMP_Uns8*) buffer, 0, 256 );
 		xmp->DeleteProperty( bextDescription.ns, bextDescription.prop)					;
 		chunkUsed = true;
 	}
 	// bextOriginator -------------------------------------------------
-	if ( xmp->GetProperty( bextOriginator.ns , bextOriginator.prop, &value, kXMP_NoOptions ) )
+	if ( xmp->GetProperty( bextOriginator.ns , bextOriginator.prop, &value, 0 ) )
 	{
 		setBextField( &value, (XMP_Uns8*) buffer, 256, 32 );
 		xmp->DeleteProperty( bextOriginator.ns , bextOriginator.prop );
 		chunkUsed = true;
 	}
 	// bextOriginatorRef ----------------------------------------------
-	if ( xmp->GetProperty( bextOriginatorRef.ns , bextOriginatorRef.prop, &value, kXMP_NoOptions ) )
+	if ( xmp->GetProperty( bextOriginatorRef.ns , bextOriginatorRef.prop, &value, 0 ) )
 	{
 		setBextField( &value, (XMP_Uns8*) buffer, 256+32, 32 );
 		xmp->DeleteProperty( bextOriginatorRef.ns , bextOriginatorRef.prop );
 		chunkUsed = true;
 	}
 	// bextOriginationDate --------------------------------------------
-	if ( xmp->GetProperty( bextOriginationDate.ns , bextOriginationDate.prop, &value, kXMP_NoOptions ) )
+	if ( xmp->GetProperty( bextOriginationDate.ns , bextOriginationDate.prop, &value, 0 ) )
 	{
 		setBextField( &value, (XMP_Uns8*) buffer, 256+32+32, 10 );
 		xmp->DeleteProperty( bextOriginationDate.ns , bextOriginationDate.prop );
 		chunkUsed = true;
 	}
 	// bextOriginationTime --------------------------------------------
-	if ( xmp->GetProperty( bextOriginationTime.ns , bextOriginationTime.prop, &value, kXMP_NoOptions ) )
+	if ( xmp->GetProperty( bextOriginationTime.ns , bextOriginationTime.prop, &value, 0 ) )
 	{
 		setBextField( &value, (XMP_Uns8*) buffer, 256+32+32+10, 8 );
 		xmp->DeleteProperty( bextOriginationTime.ns , bextOriginationTime.prop );
@@ -652,7 +652,7 @@ static void exportXMPtoBextChunk( RIFF_MetaHandler* ha
 	}
 	// bextTimeReference ----------------------------------------------
 	// thanx to friendly byte order, all 8 bytes can be written in one go:
-	if ( xmp->GetProperty( bextTimeReference.ns, bextTimeReference.prop, &value, kXMP_NoOptions ) )
+	if ( xmp->GetProperty( bextTimeReference.ns, bextTimeReference.prop, &value, 0 ) )
 	{
 		try
 		{
@@ -675,7 +675,7 @@ static void exportXMPtoBextChunk( RIFF_MetaHandler* ha
 	xmp->DeleteProperty( bextVersion.ns, bextVersion.prop );
 
 	// bextUMID -------------------------------------------------------
-	if ( xmp->GetProperty( bextUMID.ns, bextUMID.prop, &value, kXMP_NoOptions ) )
+	if ( xmp->GetProperty( bextUMID.ns, bextUMID.prop, &value, 0 ) )
 	{
 		std::string rawStr;
 	
@@ -694,7 +694,7 @@ static void exportXMPtoBextChunk( RIFF_MetaHandler* ha
 	}
 
 	// bextCodingHistory ----------------------------------------------
-	if ( xmp->GetProperty( bextCodingHistory.ns, bextCodingHistory.prop, &value, kXMP_NoOptions ) )
+	if ( xmp->GetProperty( bextCodingHistory.ns, bextCodingHistory.prop, &value, 0 ) )
 	{
 		std::string ascii;
 		convertToASCII( value.data(), (XMP_StringLen) value.size() , &ascii, (XMP_StringLen) value.size() );
