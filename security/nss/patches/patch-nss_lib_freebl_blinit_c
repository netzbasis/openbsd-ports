$OpenBSD: patch-nss_lib_freebl_blinit_c,v 1.4 2019/12/26 22:15:12 cwen Exp $

powerpc fix. Work around the lack of <sys/auxv.h> and getauxval(), and
allow building with base-gcc that does not support `__has_include()'.
See: https://bugzilla.mozilla.org/show_bug.cgi?id=1602743

Index: nss/lib/freebl/blinit.c
--- nss/lib/freebl/blinit.c.orig
+++ nss/lib/freebl/blinit.c
@@ -93,7 +93,7 @@ CheckX86CPUSupport()
 #endif /* NSS_X86_OR_X64 */
 
 /* clang-format off */
-#if defined(__aarch64__) || defined(__arm__)
+#if defined(__aarch64__) || defined(__arm__) || defined(__powerpc__)
 #ifndef __has_include
 #define __has_include(x) 0
 #endif
@@ -115,7 +115,7 @@ static unsigned long (*getauxval)(unsigned long) = NUL
 #define AT_HWCAP 16
 #endif
 
-#endif /* defined(__aarch64__) || defined(__arm__) */
+#endif /* defined(__aarch64__) || defined(__arm__) || defined(__powerpc__) */
 /* clang-format on */
 
 #if defined(__aarch64__)
@@ -357,7 +357,9 @@ ppc_crypto_support()
 
 #if defined(__powerpc__)
 
+#if __has_include(<sys/auxv.h>)
 #include <sys/auxv.h>
+#endif
 
 // Defines from cputable.h in Linux kernel - PPC, letting us build on older kernels
 #ifndef PPC_FEATURE2_VEC_CRYPTO
@@ -368,8 +370,11 @@ static void
 CheckPPCSupport()
 {
     char *disable_hw_crypto = PR_GetEnvSecure("NSS_DISABLE_PPC_GHASH");
+    long hwcaps = 0;
 
-    long hwcaps = getauxval(AT_HWCAP2);
+    if (getauxval) {
+        hwcaps = getauxval(AT_HWCAP2);
+    }
 
     ppc_crypto_support_ = hwcaps & PPC_FEATURE2_VEC_CRYPTO && disable_hw_crypto == NULL;
 }
