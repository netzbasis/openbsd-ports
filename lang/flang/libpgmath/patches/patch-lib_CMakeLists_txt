$OpenBSD: patch-lib_CMakeLists_txt,v 1.7 2019/02/15 17:51:10 bcallah Exp $

Some ugly hacks here.

Index: lib/CMakeLists.txt
--- lib/CMakeLists.txt.orig
+++ lib/CMakeLists.txt
@@ -16,26 +16,29 @@
 
 # This value will be the same as CMAKE_SYSTEM_PROCESSOR
 set(PROCESSOR ${CMAKE_SYSTEM_PROCESSOR})
-if(${LIBPGMATH_WITH_GENERIC} OR (NOT ${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64|aarch64"))
+if(${LIBPGMATH_WITH_GENERIC} OR (NOT ${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64|amd64|aarch64"))
   set(PROCESSOR "generic")
 endif()
+if(${CMAKE_SYSTEM_NAME} MATCHES "OpenBSD" AND ${PROCESSOR} MATCHES "amd64")
+  set(PROCESSOR "x86_64")
+endif()
 
 set_property(GLOBAL APPEND PROPERTY "TARGET_OBJECTS")
 
-if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64|AMD64" AND NOT ${LIBPGMATH_WITH_GENERIC})
-  if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
+if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64|AMD64|amd64" AND NOT ${LIBPGMATH_WITH_GENERIC})
+  if(${CMAKE_SYSTEM_NAME} MATCHES "Linux|OpenBSD")
 
     set(DEFINITIONS_L1
       HOST_LINUX LINUX LINUX86 LINUX8664 MAXCPUS=256 MAXCPUSL=8 MAXCPUSR=8
       TARGET_LINUX TARGET_LINUX_X86 TARGET_LINUX_X8664 TARGET_X86 TARGET_X8664
-      __gnu_linux__ PG_PIC)
-    set(FLAGS_L1 "-m64 -O3 ")
+      __gnu_linux__ linux PG_PIC)
+    set(FLAGS_L1 "-m64 ")
 
     set(DEFINITIONS_L2
       LINUX LINUX86 LINUX8664 MAXCPUS=256 MAXCPUSL=8 MAXCPUSR=8 __gnu_linux__
       TARGET_LINUX TARGET_LINUX_X86 TARGET_LINUX_X8664 TARGET_X86 TARGET_X8664
       PG_PIC)
-    set(FLAGS_L2 "-m64 -O3 -mtune=core-avx2 -march=core-avx2 ")
+    set(FLAGS_L2 "-m64 -mtune=core-avx2 -march=core-avx2 ")
 
     # common
     # Definitions and compiler flags for level 1 directories
@@ -147,16 +150,16 @@ elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "ppc64le")
   set_property(GLOBAL APPEND PROPERTY "DEFINITIONS_PPC64LE_L2" ${DEFINITIONS_L2})
   set_property(GLOBAL APPEND_STRING PROPERTY "FLAGS_PPC64LE_L2" ${FLAGS_L2})
   # ppc64le
-elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64")
+elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64" AND NOT ${LIBPGMATH_WITH_GENERIC})
   set(DEFINITIONS_L1 HOST_LINUX MAXCPUS=8192 MAXCPUSL=128 MAXCPUSR=128
     TARGET_LINUX TARGET_LINUX_ARM TARGET_LINUX_ARM64 TARGET_LLVM
     TARGET_LLVM_LINUXAARCH64 TM_I8)
-  set(FLAGS_L1 "-O3 -mcpu=${LLVM_FLANG_CPU_TARGET} -ffast-math -funroll-loops ")
+  set(FLAGS_L1 "-ffast-math -funroll-loops ")
   set(FLAGS_L1 "${FLAGS_L1} -ffp-contract=fast")
   
   set(DEFINITIONS_L2 HOST_LINUX MAXCPUS=8192 MAXCPUSL=128 MAXCPUSR=128
     TARGET_LINUX TARGET_LINUX_ARM TARGET_LINUX_ARM64 TARGET_LLVM TM_I8)
-  set(FLAGS_L2 "-O3 -mcpu=${LLVM_FLANG_CPU_TARGET} -ffast-math -funroll-loops -ffp-contract=fast")
+  set(FLAGS_L2 "-ffast-math -funroll-loops -ffp-contract=fast")
 
   # common
   # Definitions and compiler flags for level 1 directories
@@ -181,12 +184,12 @@ else()
   set(DEFINITIONS_L1 HOST_LINUX MAXCPUS=256 MAXCPUSL=8 MAXCPUSR=8 TARGET_LINUX
     TARGET_LINUX_64 TARGET_LLVM TARGET_LLVM_64 TARGET_LLVM_LINUX64
     TARGET_LINUX_GENERIC TARGET_64 PG_PIC)
-  set(FLAGS_L1 "-O3 -ffp-contract=fast ")
+  set(FLAGS_L1 " ")
 
   set(DEFINITIONS_L2 HOST_LINUX MAXCPUS=256 MAXCPUSL=8 MAXCPUSR=8 TARGET_LINUX
     TARGET_LINUX_64 TARGET_LLVM TARGET_LLVM_64 TARGET_LLVM_LINUX64
     TARGET_LINUX_GENERIC TARGET_64 PG_PIC)
-  set(FLAGS_L2 "-O3 -ffp-contract=fast ")
+  set(FLAGS_L2 " ")
 
   # common
   # Definitions and compiler flags for level 1 directories
@@ -210,11 +213,11 @@ else()
 endif()
 
 include_directories(common)
-if(${PROCESSOR} MATCHES "x86_64|AMD64" AND NOT ${LIBPGMATH_WITH_GENERIC})
+if(${PROCESSOR} MATCHES "x86_64|AMD64|amd64" AND NOT ${LIBPGMATH_WITH_GENERIC})
   include_directories(x86_64)
 # elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "ppc64le")
 #   include_directories(ppc64le)
-elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64")
+elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64" AND NOT ${LIBPGMATH_WITH_GENERIC})
   include_directories(generic)
   include_directories(aarch64)
 elseif(${PROCESSOR} MATCHES "ppc64le|generic" OR ${LIBPGMATH_WITH_GENERIC})
@@ -223,11 +226,11 @@ endif()
 
 # Add directories to build
 add_subdirectory(common)
-if(${PROCESSOR} MATCHES "x86_64|AMD64" AND NOT ${LIBPGMATH_WITH_GENERIC})
+if(${PROCESSOR} MATCHES "x86_64|AMD64|amd64" AND NOT ${LIBPGMATH_WITH_GENERIC})
   add_subdirectory(x86_64)
 # elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "ppc64le")
 #   add_subdirectory(ppc64le)
-elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64")
+elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "aarch64" AND NOT ${LIBPGMATH_WITH_GENERIC})
   add_subdirectory(generic)
   add_subdirectory(aarch64)
 elseif(${PROCESSOR} MATCHES "ppc64le|generic" OR ${LIBPGMATH_WITH_GENERIC})
