$OpenBSD: patch-lib_CMakeLists_txt,v 1.8 2019/08/12 15:41:55 bcallah Exp $

Some ugly hacks here.

Index: lib/CMakeLists.txt
--- lib/CMakeLists.txt.orig
+++ lib/CMakeLists.txt
@@ -25,19 +25,19 @@ find_program(SH_PROGRAM NAMES sh bash)
 set_property(GLOBAL APPEND PROPERTY "TARGET_OBJECTS")
 
 if(${LIBPGMATH_SYSTEM_PROCESSOR} MATCHES "x86_64" AND NOT ${LIBPGMATH_WITH_GENERIC})
-  if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
+  if(${LIBPGMATH_SYSTEM_NAME} MATCHES "Linux")
 
     set(DEFINITIONS_L1
       HOST_LINUX LINUX LINUX86 LINUX8664 MAXCPUS=256 MAXCPUSL=8 MAXCPUSR=8
       TARGET_LINUX TARGET_LINUX_X86 TARGET_LINUX_X8664 TARGET_X86 TARGET_X8664
-      __gnu_linux__ PG_PIC)
-    set(FLAGS_L1 "-m64 -O3 ")
+      __gnu_linux__ linux PG_PIC)
+    set(FLAGS_L1 "-m64 ")
 
     set(DEFINITIONS_L2
       LINUX LINUX86 LINUX8664 MAXCPUS=256 MAXCPUSL=8 MAXCPUSR=8 __gnu_linux__
       TARGET_LINUX TARGET_LINUX_X86 TARGET_LINUX_X8664 TARGET_X86 TARGET_X8664
-      PG_PIC)
-    set(FLAGS_L2 "-m64 -O3 -mtune=core-avx2 -march=core-avx2 ")
+      linux PG_PIC)
+    set(FLAGS_L2 "-m64 -mtune=core-avx2 -march=core-avx2 ")
 
     # common
     # Definitions and compiler flags for level 1 directories
@@ -59,7 +59,7 @@ if(${LIBPGMATH_SYSTEM_PROCESSOR} MATCHES "x86_64" AND 
     set_property(GLOBAL APPEND_STRING PROPERTY "FLAGS_X8664_L2" ${FLAGS_L2})
     # x86_64
 
-  elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
+  elseif(${LIBPGMATH_SYSTEM_NAME} MATCHES "Darwin")
     set(DEFINITIONS_L1 HOST_OSX MAXCPUS=256 MAXCPUSL=8 MAXCPUSR=4 OSX OSX86
       OSX8664 TARGET_OSX TARGET_OSX_X86 TARGET_OSX_X8664 TARGET_X86
       TARGET_X8664 __gnu_osx__ PG_PIC)
@@ -87,7 +87,7 @@ if(${LIBPGMATH_SYSTEM_PROCESSOR} MATCHES "x86_64" AND 
     set_property(GLOBAL APPEND PROPERTY "DEFINITIONS_X8664_L2" ${DEFINITIONS_L2})
     set_property(GLOBAL APPEND_STRING PROPERTY "FLAGS_X8664_L2" ${FLAGS_L2})
     # x86_64
-  elseif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
+  elseif(${LIBPGMATH_SYSTEM_NAME} MATCHES "Windows")
     set(DEFINITIONS_L1
       TARGET_WIN_X8664 TARGET_WIN _PGI_NOBUILTINS MAXCPUS=256
       MAXCPUSL=8 MAXCPUSR=8 WINNT WIN64 LONG_IS_32
@@ -155,12 +155,12 @@ elseif(${LIBPGMATH_SYSTEM_PROCESSOR} MATCHES "aarch64"
   set(DEFINITIONS_L1 HOST_LINUX MAXCPUS=8192 MAXCPUSL=128 MAXCPUSR=128
     TARGET_LINUX TARGET_LINUX_ARM TARGET_LINUX_ARM64 TARGET_LLVM
     TARGET_LLVM_LINUXAARCH64 TM_I8)
-  set(FLAGS_L1 "-O3 -mcpu=${LLVM_FLANG_CPU_TARGET} -ffast-math -funroll-loops ")
+  set(FLAGS_L1 "-ffast-math -funroll-loops ")
   set(FLAGS_L1 "${FLAGS_L1} -ffp-contract=fast")
   
   set(DEFINITIONS_L2 HOST_LINUX MAXCPUS=8192 MAXCPUSL=128 MAXCPUSR=128
     TARGET_LINUX TARGET_LINUX_ARM TARGET_LINUX_ARM64 TARGET_LLVM TM_I8)
-  set(FLAGS_L2 "-O3 -mcpu=${LLVM_FLANG_CPU_TARGET} -ffast-math -funroll-loops -ffp-contract=fast")
+  set(FLAGS_L2 "-ffast-math -funroll-loops -ffp-contract=fast")
 
   # common
   # Definitions and compiler flags for level 1 directories
@@ -185,12 +185,12 @@ else()
   set(DEFINITIONS_L1 HOST_LINUX MAXCPUS=256 MAXCPUSL=8 MAXCPUSR=8 TARGET_LINUX
     TARGET_LINUX_64 TARGET_LLVM TARGET_LLVM_64 TARGET_LLVM_LINUX64
     TARGET_LINUX_GENERIC TARGET_64 PG_PIC)
-  set(FLAGS_L1 "-O3 -ffp-contract=fast ")
+  set(FLAGS_L1 "-ffp-contract=fast ")
 
   set(DEFINITIONS_L2 HOST_LINUX MAXCPUS=256 MAXCPUSL=8 MAXCPUSR=8 TARGET_LINUX
     TARGET_LINUX_64 TARGET_LLVM TARGET_LLVM_64 TARGET_LLVM_LINUX64
     TARGET_LINUX_GENERIC TARGET_64 PG_PIC)
-  set(FLAGS_L2 "-O3 -ffp-contract=fast ")
+  set(FLAGS_L2 "-ffp-contract=fast ")
 
   # common
   # Definitions and compiler flags for level 1 directories
@@ -244,7 +244,7 @@ get_property(TARGET_OBJECTS GLOBAL PROPERTY "TARGET_OB
 add_library(${LIBPGMATH_LIBRARY_NAME}_static STATIC ${TARGET_OBJECTS})
 add_library(${LIBPGMATH_LIBRARY_NAME} SHARED ${TARGET_OBJECTS})
 target_link_libraries(${LIBPGMATH_LIBRARY_NAME} INTERFACE ${LIBPGMATH_LIBRARY_NAME}_static)
-if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
+if(${LIBPGMATH_SYSTEM_NAME} MATCHES "Windows")
     set_target_properties(${LIBPGMATH_LIBRARY_NAME}_static PROPERTIES OUTPUT_NAME lib${LIBPGMATH_LIBRARY_NAME})
     set_target_properties(${LIBPGMATH_LIBRARY_NAME} PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS TRUE)
 if(${CMAKE_GENERATOR} MATCHES "MSYS Makefiles")
