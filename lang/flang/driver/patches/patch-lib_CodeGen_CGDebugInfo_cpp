$OpenBSD: patch-lib_CodeGen_CGDebugInfo_cpp,v 1.2 2019/07/17 21:33:33 bcallah Exp $

Remove extra arguments found only in NVidia's forked LLVM.

Index: lib/CodeGen/CGDebugInfo.cpp
--- lib/CodeGen/CGDebugInfo.cpp.orig
+++ lib/CodeGen/CGDebugInfo.cpp
@@ -3265,7 +3265,7 @@ CGDebugInfo::getGlobalVariableForwardDeclaration(const
   auto *GV = DBuilder.createTempGlobalVariableFwdDecl(
       DContext, Name, LinkageName, Unit, Line, getOrCreateType(T, Unit),
       !VD->isExternallyVisible(), nullptr, TemplateParameters,
-      llvm::DINode::FlagZero, Align);
+      Align);
   FwdDeclReplaceMap.emplace_back(
       std::piecewise_construct,
       std::make_tuple(cast<VarDecl>(VD->getCanonicalDecl())),
@@ -4215,7 +4215,7 @@ void CGDebugInfo::EmitGlobalVariable(llvm::GlobalVaria
         Var->hasLocalLinkage(),
         Expr.empty() ? nullptr : DBuilder.createExpression(Expr),
         getOrCreateStaticDataMemberDeclarationOrNull(D), TemplateParameters,
-        llvm::DINode::FlagZero, Align);
+        Align);
     Var->addDebugInfo(GVE);
   }
   DeclCache[D->getCanonicalDecl()].reset(GVE);
@@ -4284,7 +4284,7 @@ void CGDebugInfo::EmitGlobalVariable(const ValueDecl *
   GV.reset(DBuilder.createGlobalVariableExpression(
       DContext, Name, StringRef(), Unit, getLineNumber(VD->getLocation()), Ty,
       true, InitExpr, getOrCreateStaticDataMemberDeclarationOrNull(VarD),
-      TemplateParameters, llvm::DINode::FlagZero, Align));
+      TemplateParameters, Align));
 }
 
 llvm::DIScope *CGDebugInfo::getCurrentContextDescriptor(const Decl *D) {
