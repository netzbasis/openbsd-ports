$OpenBSD: patch-asmrun_signals_osdep_h,v 1.1 2014/09/02 09:24:44 chrisz Exp $

Add stack overflow detection for i386 and amd64.

--- asmrun/signals_osdep.h.orig	Tue May 13 15:20:48 2014
+++ asmrun/signals_osdep.h	Sun Aug 31 20:22:33 2014
@@ -130,6 +130,22 @@
   #define CONTEXT_YOUNG_PTR (context->uc_mcontext.gregs[REG_R15])
   #define CONTEXT_FAULTING_ADDRESS ((char *) info->si_addr)
 
+/****************** AMD64, OpenBSD */
+
+#elif defined(TARGET_amd64) && defined (SYS_openbsd)
+
+  #define DECLARE_SIGNAL_HANDLER(name) \
+    static void name(int sig, siginfo_t * info, struct sigcontext * context)
+
+  #define SET_SIGACT(sigact,name) \
+    sigact.sa_sigaction = (void (*)(int,siginfo_t *,void *)) (name); \
+    sigact.sa_flags = SA_SIGINFO
+
+  #define CONTEXT_PC (context->sc_rip)
+  #define CONTEXT_EXCEPTION_POINTER (context->sc_r14)
+  #define CONTEXT_YOUNG_PTR (context->sc_r15)
+  #define CONTEXT_FAULTING_ADDRESS ((char *) info->si_addr)
+
 /****************** I386, Linux */
 
 #elif defined(TARGET_i386) && defined(SYS_linux_elf)
@@ -142,6 +158,20 @@
      sigact.sa_flags = 0
 
   #define CONTEXT_FAULTING_ADDRESS ((char *) context.cr2)
+
+/****************** I386, BSD_ELF */
+
+#elif defined(TARGET_i386) && defined(SYS_bsd_elf)
+
+  #define DECLARE_SIGNAL_HANDLER(name) \
+    static void name(int sig, siginfo_t * info, struct sigcontext * context)
+
+  #define SET_SIGACT(sigact,name) \
+    sigact.sa_sigaction = (void (*)(int,siginfo_t *,void *)) (name); \
+    sigact.sa_flags = SA_SIGINFO
+
+  #define CONTEXT_PC (context->sc_eip)
+  #define CONTEXT_FAULTING_ADDRESS ((char *) info->si_addr)
 
 /****************** I386, BSD */
 
