$OpenBSD: patch-openbsd_memory_cc,v 1.1 2016/04/28 13:32:22 jasper Exp $

Simplify memory calculations by using uvmexp.pageshift

--- openbsd/memory.cc.orig	Thu Apr 28 15:07:56 2016
+++ openbsd/memory.cc	Thu Apr 28 15:25:30 2016
@@ -40,13 +40,6 @@
 #include "luts.h"
 #include "conversions.h"
 
-static int pageshift;
-
-#ifndef LOG1024
-#define LOG1024	10
-#endif
-#define pagesh(size) ((size) << pageshift)
-
 std::string mem_string( bool use_colors = false )
 {
   std::ostringstream oss;
@@ -66,16 +59,6 @@ std::string mem_string( bool use_colors = false )
     error( "memory: error getting page size" );
   }
 
-  // calculate how far we must shift the variables
-  pageshift = 0;
-  while( page_size > 1 )
-  {
-    pageshift++;
-    page_size >>= 1;
-  }
-
-  pageshift -= LOG1024;
-
   // get vm memory stats
   static int uvmexp_mib[] = { CTL_VM, VM_UVMEXP };
   struct uvmexp uvmexp;
@@ -95,16 +78,15 @@ std::string mem_string( bool use_colors = false )
   }
 
   // calculations based on libgtop
-  used_mem = (uint64_t) pagesh (uvmexp.npages - uvmexp.free) << LOG1024;
+  used_mem = ((uint64_t) uvmexp.npages - uvmexp.free) << uvmexp.pageshift;
+  free_mem = ((uint64_t) uvmexp.free) << uvmexp.pageshift;
 
-  free_mem = (uint64_t) pagesh( uvmexp.free ) << LOG1024;
-
   // from nagios-memory plugin
-  used_mem -= pagesh( bcstats.numbufpages );
-  free_mem += pagesh( bcstats.numbufpages );
+  used_mem -= ((uint64_t) bcstats.numbufpages) << uvmexp.pageshift;
+  free_mem += ((uint64_t) bcstats.numbufpages) << uvmexp.pageshift;
 
   // calculate total memory
-  total_mem = (uint64_t) pagesh( uvmexp.npages ) << LOG1024;
+  total_mem = ((uint64_t) uvmexp.npages) << uvmexp.pageshift;
 
   if( use_colors )
   {
