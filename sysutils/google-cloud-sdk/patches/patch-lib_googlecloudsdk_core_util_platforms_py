$OpenBSD: patch-lib_googlecloudsdk_core_util_platforms_py,v 1.4 2017/02/23 08:32:26 ajacoutot Exp $
--- lib/googlecloudsdk/core/util/platforms.py.orig	Tue Jan  1 09:00:00 1980
+++ lib/googlecloudsdk/core/util/platforms.py	Thu Feb 23 09:28:02 2017
@@ -66,7 +66,8 @@ class OperatingSystem(object):
   LINUX = _OS('LINUX', 'Linux', 'linux')
   CYGWIN = _OS('CYGWIN', 'Cygwin', 'cygwin')
   MSYS = _OS('MSYS', 'Msys', 'msys')
-  _ALL = [WINDOWS, MACOSX, LINUX, CYGWIN, MSYS]
+  OPENBSD = _OS('OPENBSD', 'OpenBSD', 'openbsd')
+  _ALL = [WINDOWS, MACOSX, LINUX, CYGWIN, MSYS, OPENBSD]
 
   @staticmethod
   def AllValues():
@@ -119,6 +120,8 @@ class OperatingSystem(object):
       return OperatingSystem.MACOSX
     elif 'cygwin' in sys.platform:
       return OperatingSystem.CYGWIN
+    elif 'openbsd' in sys.platform:
+      return OperatingSystem.OPENBSD
     # TODO(user): More reliable handling of OS types
     # TODO(user): What happens when we use jython, does it actually use the
     # 'java' os name?
@@ -146,7 +149,7 @@ class Architecture(object):
   ppc = _ARCH('PPC', 'PPC', 'ppc')
   arm = _ARCH('arm', 'arm', 'arm')
   _ALL = [x86, x86_64, ppc, arm]
-  _MACHINE_TO_ARCHITECTURE = {'AMD64': x86_64, 'x86_64': x86_64,
+  _MACHINE_TO_ARCHITECTURE = {'AMD64': x86_64, 'x86_64': x86_64, 'amd64': x86_64,
                               'i386': x86, 'i686': x86, 'x86': x86,
                               'Power Macintosh': ppc,
                               'arm6l': arm, 'arm64': arm, 'armv7': arm}
@@ -259,6 +262,9 @@ class Platform(object):
                      if self.architecture == Architecture.ppc else 'Intel')
       return format_string.format(
           name=arch_string, version=platform.release())
+    elif self.operating_system == OperatingSystem.OPENBSD:
+      return '({name} {version})'.format(
+          name=self.operating_system.name, version=platform.release())
     else:
       return '()'
 
