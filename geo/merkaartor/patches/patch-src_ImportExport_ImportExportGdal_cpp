$OpenBSD: patch-src_ImportExport_ImportExportGdal_cpp,v 1.1 2015/06/27 06:59:01 landry Exp $

Adapt for GDAL 2.0 API.

--- src/ImportExport/ImportExportGdal.cpp.orig	Sat Jun 27 08:15:15 2015
+++ src/ImportExport/ImportExportGdal.cpp	Sat Jun 27 08:22:01 2015
@@ -58,7 +58,7 @@ bool ImportExportGdal::export_(const QList<Feature *>&
 
     OGRRegisterAll();
 
-    poDriver = OGRSFDriverRegistrar::GetRegistrar()->GetDriverByName(pszDriverName);
+    poDriver = GetGDALDriverManager()->GetDriverByName(pszDriverName);
     if( poDriver == NULL )
     {
         qDebug( "%s driver not available.", pszDriverName );
@@ -424,7 +424,7 @@ bool ImportExportGdal::import(Layer* aLayer)
 
     OGRDataSource       *poDS;
 
-    poDS = OGRSFDriverRegistrar::Open( FileName.toUtf8().constData(), FALSE );
+    poDS = reinterpret_cast<OGRDataSource*>(GDALOpenEx( FileName.toUtf8().constData(), GDAL_OF_VECTOR, NULL, NULL,NULL));
     if( poDS == NULL )
     {
         qDebug( "GDAL Open failed.\n" );
@@ -433,7 +433,7 @@ bool ImportExportGdal::import(Layer* aLayer)
 
     importGDALDataset(poDS, aLayer, M_PREFS->getGdalConfirmProjection());
 
-    OGRDataSource::DestroyDataSource( poDS );
+    GDALClose(( GDALDatasetH) poDS);
 
     return true;
 }
@@ -448,7 +448,8 @@ bool ImportExportGdal::import(Layer* aLayer, const QBy
     GByte* content = (GByte*)(ba.constData());
     /*FILE* f = */VSIFileFromMemBuffer("/vsimem/temp", content, ba.size(), FALSE);
 
-    poDS = OGRSFDriverRegistrar::Open( "/vsimem/temp", FALSE );
+    poDS = reinterpret_cast<OGRDataSource*>(GDALOpenEx("/vsimem/temp", GDAL_OF_VECTOR, NULL, NULL,NULL));
+
     if( poDS == NULL )
     {
         qDebug( "GDAL Open failed.\n" );
@@ -456,7 +457,7 @@ bool ImportExportGdal::import(Layer* aLayer, const QBy
     }
     importGDALDataset(poDS, aLayer, confirmProjection);
 
-    OGRDataSource::DestroyDataSource( poDS );
+    GDALClose(( GDALDatasetH) poDS);
 
     return true;
 }
