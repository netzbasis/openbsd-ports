$OpenBSD: patch-src_map_albersequal_cpp,v 1.2 2020/01/24 08:02:36 landry Exp $

https://github.com/tumic0/GPXSee/issues/266

../src/map/albersequal.h:28:9: error: expected member name or ';' after declaration specifiers
        double _C;
        ~~~~~~ ^
/usr/include/ctype.h:50:12: note: expanded from macro '_C'
#define _C      0x20


Index: src/map/albersequal.cpp
--- src/map/albersequal.cpp.orig
+++ src/map/albersequal.cpp
@@ -104,10 +104,10 @@ AlbersEqual::AlbersEqual(const Ellipsoid *ellipsoid, d
 	} else
 		_n = sin_lat1;
 
-	_C = sqr_m1 + _n * q1;
+	C = sqr_m1 + _n * q1;
 	_a_over_n = ellipsoid->radius() / _n;
 	nq0 = _n * q0;
-	_rho0 = (_C < nq0) ? 0 : _a_over_n * sqrt(_C - nq0);
+	_rho0 = (C < nq0) ? 0 : _a_over_n * sqrt(C - nq0);
 }
 
 PointD AlbersEqual::ll2xy(const Coordinates &c) const
@@ -131,7 +131,7 @@ PointD AlbersEqual::ll2xy(const Coordinates &c) const
 	e_sin = _e * sin_lat;
 	q = ALBERS_Q(sin_lat, ONE_MINUS_SQR(e_sin), e_sin);
 	nq = _n * q;
-	rho = (_C < nq) ? 0 : _a_over_n * sqrt(_C - nq);
+	rho = (C < nq) ? 0 : _a_over_n * sqrt(C - nq);
 	theta = _n * dlam;
 
 	return PointD(rho * sin(theta) + _falseEasting,
@@ -168,7 +168,7 @@ Coordinates AlbersEqual::xy2ll(const PointD &p) const
 	if (rho != 0.0)
 		theta = atan2(dx, rho0_minus_dy);
 	rho_n = rho * _n;
-	q = (_C - (rho_n * rho_n) / _a2) / _n;
+	q = (C - (rho_n * rho_n) / _a2) / _n;
 	qc = 1 - ((_one_minus_es) / (_two_e)) * log((1.0 - _e) / (1.0 + _e));
 	if (fabs(fabs(qc) - fabs(q)) > 1.0e-6) {
 		q_over_2 = q / 2.0;
