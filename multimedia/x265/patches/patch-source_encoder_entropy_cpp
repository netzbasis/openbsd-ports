$OpenBSD: patch-source_encoder_entropy_cpp,v 1.1 2014/12/08 08:25:05 brad Exp $

threading: use 32bit atomic integer operations exclusively

--- source/encoder/entropy.cpp.orig	Fri Oct 31 14:24:01 2014
+++ source/encoder/entropy.cpp	Sun Dec  7 00:05:35 2014
@@ -1116,7 +1116,7 @@ void Entropy::writeCoefRemainExGolomb(uint32_t codeNum
         if (codeNumber != 0)
         {
             unsigned long idx;
-            CLZ32(idx, codeNumber + 1);
+            CLZ(idx, codeNumber + 1);
             length = idx;
             codeNumber -= (1 << idx) - 1;
         }
@@ -2006,9 +2006,9 @@ void Entropy::encodeBin(uint32_t binValue, uint8_t &ct
     if ((binValue ^ mstate) & 1)
     {
         // NOTE: lps is non-zero and the maximum of idx is 8 because lps less than 256
-        //numBits   = g_renormTable[lps >> 3];
+        //numBits = g_renormTable[lps >> 3];
         unsigned long idx;
-        CLZ32(idx, lps);
+        CLZ(idx, lps);
         X265_CHECK(state != 63 || idx == 1, "state failure\n");
 
         numBits = 8 - idx;
