$OpenBSD: patch-minidlna_c,v 1.9 2019/01/06 10:09:04 ajacoutot Exp $

Add kqueue(2) support, from FreeBSD.

Index: minidlna.c
--- minidlna.c.orig
+++ minidlna.c
@@ -46,6 +46,7 @@
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  * POSSIBILITY OF SUCH DAMAGE.
  */
+#define FD_SETSIZE 8192
 #include <stdlib.h>
 #include <unistd.h>
 #include <string.h>
@@ -370,6 +371,7 @@ rescan:
 		open_db(&db);
 		if (*scanner_pid == 0) /* child (scanner) process */
 		{
+			DPRINTF(E_DEBUG, L_GENERAL, "Starting scanner in forked child\n");
 			start_scanner();
 			sqlite3_close(db);
 			log_close();
@@ -379,6 +381,7 @@ rescan:
 		}
 		else if (*scanner_pid < 0)
 		{
+			DPRINTF(E_DEBUG, L_GENERAL, "Starting scanner in parent\n");
 			start_scanner();
 		}
 #else
@@ -1070,6 +1073,15 @@ main(int argc, char **argv)
 			                            "Inotify will be disabled.\n");
 		else if (pthread_create(&inotify_thread, NULL, start_inotify, NULL) != 0)
 			DPRINTF(E_FATAL, L_GENERAL, "ERROR: pthread_create() failed for start_inotify. EXITING\n");
+	}
+#elif defined(HAVE_SYS_EVENT_H)
+	if( GETFLAG(INOTIFY_MASK) )
+	{
+		if (!sqlite3_threadsafe() || sqlite3_libversion_number() < 3005001)
+			DPRINTF(E_ERROR, L_GENERAL, "SQLite library is not threadsafe!	"
+			"Kqueue will be disabled.\n");
+		else if (pthread_create(&inotify_thread, NULL, start_kqueue, NULL) != 0)
+			DPRINTF(E_FATAL, L_GENERAL, "ERROR: pthread_create() failed for start_kqueue. EXITING\n");
 	}
 #endif
 	smonitor = OpenAndConfMonitorSocket();
