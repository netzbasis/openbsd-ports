$OpenBSD: patch-cmake_modules_LXQtCompilerSettings_cmake,v 1.2 2018/12/01 08:44:39 landry Exp $

Index: cmake/modules/LXQtCompilerSettings.cmake
--- cmake/modules/LXQtCompilerSettings.cmake.orig
+++ cmake/modules/LXQtCompilerSettings.cmake
@@ -134,13 +134,13 @@ if (CMAKE_COMPILER_IS_GNUCXX OR LXQT_COMPILER_IS_CLANG
     # -Bsymbolic-functions: replace dynamic symbols used internally in
     #                       shared libs with direct addresses.
     set(SYMBOLIC_FLAGS
-        "-Wl,-Bsymbolic-functions -Wl,-Bsymbolic"
+        "-Wl,-Bsymbolic"
     )
     set(CMAKE_SHARED_LINKER_FLAGS
-        "-Wl,--no-undefined ${SYMBOLIC_FLAGS} ${CMAKE_SHARED_LINKER_FLAGS}"
+        "${SYMBOLIC_FLAGS} ${CMAKE_SHARED_LINKER_FLAGS}"
     )
     set(CMAKE_MODULE_LINKER_FLAGS
-        "-Wl,--no-undefined ${SYMBOLIC_FLAGS} ${CMAKE_MODULE_LINKER_FLAGS}"
+        "${SYMBOLIC_FLAGS} ${CMAKE_MODULE_LINKER_FLAGS}"
     )
     set(CMAKE_EXE_LINKER_FLAGS
         "${SYMBOLIC_FLAGS} ${CMAKE_EXE_LINKER_FLAGS}"
@@ -153,7 +153,8 @@ endif()
 # Turn on more aggrassive optimizations not supported by CMake
 # References: https://wiki.qt.io/Performance_Tip_Startup_Time
 #-----------------------------------------------------------------------------
-if (CMAKE_COMPILER_IS_GNUCXX OR LXQT_COMPILER_IS_CLANGCXX)
+if ((CMAKE_COMPILER_IS_GNUCXX OR LXQT_COMPILER_IS_CLANGCXX) AND
+    NOT (CMAKE_SYSTEM_NAME STREQUAL OpenBSD))
     # -flto: use link-time optimizations to generate more efficient code
     if (CMAKE_COMPILER_IS_GNUCXX)
         set(LTO_FLAGS "-flto -fuse-linker-plugin")
