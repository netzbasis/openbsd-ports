$OpenBSD: patch-src_preferences_dialog_vala,v 1.2 2016/01/18 12:50:52 ajacoutot Exp $

From 4bbcb14a3479c86ea3bb49c0fcff30cf497f8e6b Mon Sep 17 00:00:00 2001
From: Sebastien Wilmet <swilmet@gnome.org>
Date: Sat, 16 Jan 2016 13:37:14 +0100
Subject: spell: bind GSettings key to language chooser's :language-code

From cd6a9f8f7d0be0f27d06032522a3c132c2c8e533 Mon Sep 17 00:00:00 2001
From: Sebastien Wilmet <swilmet@gnome.org>
Date: Thu, 14 Jan 2016 13:26:30 +0100
Subject: spell: use gspell_language_get_default()

From 92e6b33fe0731009268292e201dd009a3f28fbf0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?S=C3=A9bastien=20Wilmet?= <swilmet@gnome.org>
Date: Fri, 27 Nov 2015 18:35:48 +0100
Subject: Adapt code for GspellLanguage API changes

--- src/preferences_dialog.vala.orig	Sat Dec 19 17:37:05 2015
+++ src/preferences_dialog.vala	Mon Jan 18 13:44:26 2016
@@ -294,49 +294,14 @@ public class PreferencesDialog : Dialog
         GLib.Settings editor_settings =
             new GLib.Settings ("org.gnome.latexila.preferences.editor");
 
-        /* Language */
-
         Gspell.LanguageChooserButton spell_language_button =
             builder.get_object ("spell_language_button") as Gspell.LanguageChooserButton;
+        editor_settings.bind ("spell-checking-language", spell_language_button,
+            "language-code", SettingsBindFlags.DEFAULT);
 
-        update_spell_language_button (editor_settings, spell_language_button);
-
-        spell_language_button.notify["language"].connect (() =>
-        {
-            unowned Gspell.Language? selected_lang =
-                spell_language_button.get_language ();
-
-            if (selected_lang != null)
-            {
-                editor_settings.set_string ("spell-checking-language",
-                    selected_lang.to_key ());
-            }
-            else
-                editor_settings.set_string ("spell-checking-language", "");
-        });
-
-        editor_settings.changed["spell-checking-language"].connect (() =>
-        {
-            update_spell_language_button (editor_settings, spell_language_button);
-        });
-
-        /* Inline checker */
-
         var inline_spell_checkbutton = builder.get_object ("inline_spell_checkbutton");
         editor_settings.bind ("highlight-misspelled-words", inline_spell_checkbutton,
             "active", SettingsBindFlags.DEFAULT);
-    }
-
-    private void update_spell_language_button (GLib.Settings editor_settings,
-        Gspell.LanguageChooserButton spell_language_button)
-    {
-        unowned Gspell.Language? lang = null;
-        string lang_key = editor_settings.get_string ("spell-checking-language");
-        if (lang_key[0] != '\0')
-            lang = Gspell.Language.from_key (lang_key);
-
-        Gspell.Checker checker = new Gspell.Checker (lang);
-        spell_language_button.set_language (checker.get_language ());
     }
 
     private void init_other_tab (Builder builder)
