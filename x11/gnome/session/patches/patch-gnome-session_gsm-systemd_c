$OpenBSD: patch-gnome-session_gsm-systemd_c,v 1.1 2017/06/24 07:36:39 ajacoutot Exp $

From f708bbbf2df41ea9683f7667c745d0297e584968 Mon Sep 17 00:00:00 2001
From: Ray Strode <rstrode@redhat.com>
Date: Tue, 20 Jun 2017 16:51:00 -0400
Subject: system: add api for detecting if this is the last session for a user

Index: gnome-session/gsm-systemd.c
--- gnome-session/gsm-systemd.c.orig
+++ gnome-session/gsm-systemd.c
@@ -881,6 +881,68 @@ gsm_systemd_complete_shutdown (GsmSystem *system)
         drop_delay_inhibitor (systemd);
 }
 
+static gboolean
+gsm_systemd_is_last_session_for_user (GsmSystem *system)
+{
+        char **sessions = NULL;
+        char *session = NULL;
+        gboolean is_last_session;
+        int ret, i;
+
+        ret = sd_pid_get_session (getpid (), &session);
+
+        if (ret != 0) {
+                return FALSE;
+        }
+
+        ret = sd_uid_get_sessions (getuid (), FALSE, &sessions);
+
+        if (ret <= 0) {
+                free (session);
+                return FALSE;
+        }
+
+        is_last_session = TRUE;
+        for (i = 0; sessions[i]; i++) {
+                char *state = NULL;
+                char *type = NULL;
+
+                if (g_strcmp0 (sessions[i], session) == 0)
+                        continue;
+
+                ret = sd_session_get_state (sessions[i], &state);
+
+                if (ret != 0)
+                        continue;
+
+                if (g_strcmp0 (state, "closing") == 0) {
+                        free (state);
+                        continue;
+                }
+                free (state);
+
+                ret = sd_session_get_type (sessions[i], &type);
+
+                if (ret != 0)
+                        continue;
+
+                if (g_strcmp0 (type, "x11") != 0 &&
+                    g_strcmp0 (type, "wayland") != 0) {
+                        free (type);
+                        continue;
+                }
+
+                is_last_session = FALSE;
+        }
+
+        for (i = 0; sessions[i]; i++)
+                free (sessions[i]);
+        free (sessions);
+        free (session);
+
+        return is_last_session;
+}
+
 static void
 gsm_systemd_system_init (GsmSystemInterface *iface)
 {
@@ -899,6 +961,7 @@ gsm_systemd_system_init (GsmSystemInterface *iface)
         iface->remove_inhibitor = gsm_systemd_remove_inhibitor;
         iface->prepare_shutdown = gsm_systemd_prepare_shutdown;
         iface->complete_shutdown = gsm_systemd_complete_shutdown;
+        iface->is_last_session_for_user = gsm_systemd_is_last_session_for_user;
 }
 
 GsmSystemd *
