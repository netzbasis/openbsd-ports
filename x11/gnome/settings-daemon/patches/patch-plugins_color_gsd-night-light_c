$OpenBSD: patch-plugins_color_gsd-night-light_c,v 1.1 2019/05/09 17:22:31 ajacoutot Exp $

From a101e96b493751f7ca40ec8ee3d7e862030e2d5a Mon Sep 17 00:00:00 2001
From: Benjamin Berg <bberg@redhat.com>
Date: Fri, 15 Feb 2019 10:52:39 +0100
Subject: [PATCH] color: Allow night light to be always on

Index: plugins/color/gsd-night-light.c
--- plugins/color/gsd-night-light.c.orig
+++ plugins/color/gsd-night-light.c
@@ -305,11 +305,12 @@ night_light_recheck (GsdNightLight *self)
                 if (time_span > (GTimeSpan) 24 * 60 * 60 * 1000000) {
                         g_debug ("night light disabled until tomorrow is older than 24h, resetting disabled until tomorrow");
                         reset = TRUE;
-                } else {
+                } else if (time_span > 0) {
                         /* Or if a sunrise lies between the time it was disabled and now. */
                         gdouble frac_disabled;
                         frac_disabled = gsd_night_light_frac_day_from_dt (self->disabled_until_tmw_dt);
-                        if (gsd_night_light_frac_day_is_between (schedule_to,
+                        if (frac_disabled != frac_day &&
+                            gsd_night_light_frac_day_is_between (schedule_to,
                                                                  frac_disabled,
                                                                  frac_day)) {
                                 g_debug ("night light sun rise happened, resetting disabled until tomorrow");
@@ -329,9 +330,14 @@ night_light_recheck (GsdNightLight *self)
                 }
         }
 
+        /* lower smearing period to be smaller than the time between start/stop */
+        smear = MIN (smear,
+                     MIN (     ABS (schedule_to - schedule_from),
+                          24 - ABS (schedule_to - schedule_from)));
+
         if (!gsd_night_light_frac_day_is_between (frac_day,
-                                                    schedule_from - smear,
-                                                    schedule_to)) {
+                                                  schedule_from - smear,
+                                                  schedule_to)) {
                 g_debug ("not time for night-light");
                 gsd_night_light_set_active (self, FALSE);
                 return;
@@ -348,15 +354,18 @@ night_light_recheck (GsdNightLight *self)
          *   \--------------------/
          */
         temperature = g_settings_get_uint (self->settings, "night-light-temperature");
-        if (gsd_night_light_frac_day_is_between (frac_day,
-                                                   schedule_from - smear,
-                                                   schedule_from)) {
+        if (smear < 0.01) {
+                /* Don't try to smear for extremely short or zero periods */
+                temp_smeared = temperature;
+        } else if (gsd_night_light_frac_day_is_between (frac_day,
+                                                        schedule_from - smear,
+                                                        schedule_from)) {
                 gdouble factor = 1.f - ((frac_day - (schedule_from - smear)) / smear);
                 temp_smeared = linear_interpolate (GSD_COLOR_TEMPERATURE_DEFAULT,
                                                    temperature, factor);
         } else if (gsd_night_light_frac_day_is_between (frac_day,
-                                                          schedule_to - smear,
-                                                          schedule_to)) {
+                                                        schedule_to - smear,
+                                                        schedule_to)) {
                 gdouble factor = (frac_day - (schedule_to - smear)) / smear;
                 temp_smeared = linear_interpolate (GSD_COLOR_TEMPERATURE_DEFAULT,
                                                    temperature, factor);
