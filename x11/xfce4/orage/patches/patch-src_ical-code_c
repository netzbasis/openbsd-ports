$OpenBSD: patch-src_ical-code_c,v 1.3 2017/11/08 05:38:08 ajacoutot Exp $

Fix build with libical >= 3.0.0

Index: src/ical-code.c
--- src/ical-code.c.orig
+++ src/ical-code.c
@@ -129,7 +129,6 @@ static struct icaltimetype ical_get_current_local_time
         &&   (strcmp(g_par.local_timezone, "floating") != 0))
         ctime = icaltime_current_time_with_zone(local_icaltimezone);
     else { / * use floating time * /
-        ctime.is_utc      = 0;
         ctime.is_date     = 0;
         ctime.is_daylight = 0;
         ctime.zone        = NULL;
@@ -382,7 +381,7 @@ gboolean xfical_file_open(gboolean foreign)
     ok = ic_internal_file_open(&ic_ical, &ic_fical, g_par.orage_file, FALSE
             , FALSE);
     /* store last access time */
-    if (ok)
+    if (ok) {
         if (g_stat(g_par.orage_file, &s) < 0) {
             orage_message(150, P_N "stat of %s failed: %d (%s)",
                     g_par.orage_file, errno, strerror(errno));
@@ -391,6 +390,7 @@ gboolean xfical_file_open(gboolean foreign)
         else {
             g_par.latest_file_change = s.st_mtime;
         }
+    }
 
     if (ok && foreign) /* let's open foreign files */
         for (i = 0; i < g_par.foreign_count; i++) {
@@ -2579,7 +2579,6 @@ static struct icaltimetype count_first_alarm_time(xfic
  * when counting alarm time. */
         if (rel == ICAL_RELATED_START) {
             per.stime.is_date       = 0;
-            per.stime.is_utc        = 1;
             per.stime.is_daylight   = 0;
             per.stime.zone          = utc_icaltimezone;
             per.stime.hour          = 0;
@@ -2588,7 +2587,6 @@ static struct icaltimetype count_first_alarm_time(xfic
         }
         else {
             per.etime.is_date       = 0;
-            per.etime.is_utc        = 1;
             per.etime.is_daylight   = 0;
             per.etime.zone          = utc_icaltimezone;
             per.etime.hour          = 0;
@@ -2613,7 +2611,6 @@ static struct icaltimetype count_next_alarm_time(struc
 /* HACK: convert to UTC time so that we can use time arithmetic
  * when counting alarm time. */
         start_time.is_date       = 0;
-        start_time.is_utc        = 1;
         start_time.is_daylight   = 0;
         start_time.zone          = utc_icaltimezone;
         start_time.hour          = 0;
@@ -2768,7 +2765,6 @@ static alarm_struct *process_alarm_trigger(icalcompone
      */
     if (icaltime_is_date(per.stime)) {
         if (local_icaltimezone != utc_icaltimezone) {
-            next_alarm_time.is_utc        = 0;
             next_alarm_time.is_daylight   = 0;
             next_alarm_time.zone          = local_icaltimezone;
         }
@@ -2850,7 +2846,6 @@ orage_message(120, P_N "Alarm rec loop next_start:%s n
          */
         if (icaltime_is_date(per.stime)) {
             if (local_icaltimezone != utc_icaltimezone) {
-                next_alarm_time.is_utc        = 0;
                 next_alarm_time.is_daylight   = 0;
                 next_alarm_time.zone          = local_icaltimezone;
             }
@@ -2944,7 +2939,6 @@ orage_message(120, P_N "*****After loop Alarm %s %s", 
          */
         if (icaltime_is_date(per.stime)) {
             if (local_icaltimezone != utc_icaltimezone) {
-                next_alarm_time.is_utc        = 0;
                 next_alarm_time.is_daylight   = 0;
                 next_alarm_time.zone          = local_icaltimezone;
             }
