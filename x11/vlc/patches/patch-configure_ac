$OpenBSD: patch-configure_ac,v 1.34 2019/02/21 22:38:48 jca Exp $

Update for newer FFmpeg API.

Index: configure.ac
--- configure.ac.orig
+++ configure.ac
@@ -134,8 +134,6 @@ case "${host_os}" in
     ;;
   openbsd*)
     SYS=openbsd
-    CPPFLAGS="${CPPFLAGS} -I/usr/local/include -I/usr/X11R6/include"
-    LDFLAGS="${LDFLAGS} -L/usr/local/lib -L/usr/X11R6/lib/"
     ;;
   netbsd*)
     SYS=netbsd
@@ -952,35 +950,6 @@ AC_ARG_ENABLE(optimizations,
 dnl Check for various optimization flags
 AS_IF([test "${enable_optimizations}" != "no"], [
 
-  dnl -O4 and -O3 only in production builds
-  AS_IF([test "${enable_debug}" = "no"], [
-    VLC_SAVE_FLAGS
-    CFLAGS="${CFLAGS} -O4"
-    CXXFLAGS="${CXXFLAGS} -O4"
-    OBJCFLAGS="${OBJCFLAGS} -O4"
-    AC_CACHE_CHECK([if $CC accepts -O4], [ac_cv_c_o4], [
-      AC_COMPILE_IFELSE([AC_LANG_PROGRAM()], [
-        ac_cv_c_o4=yes
-      ], [
-        ac_cv_c_o4=no
-      ])
-    ])
-    AS_IF([test "${ac_cv_c_o4}" = "no"], [
-      VLC_RESTORE_FLAGS
-      CFLAGS="${CFLAGS} -O3"
-      CXXFLAGS="${CXXFLAGS} -O3"
-      OBJCFLAGS="${OBJCFLAGS} -O3"
-      AC_CACHE_CHECK([if $CC accepts -O3],  [ac_cv_c_o3], [
-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM()], [
-          ac_cv_c_o3=yes
-        ], [
-          ac_cv_c_o3=no
-        ])
-      ])
-      AS_IF([test "${ac_cv_c_o3}" = "no"], [VLC_RESTORE_FLAGS])
-    ])
-  ])
-
   dnl Check for fast maths
   RDC_PROG_CC_FFLAGS([no-math-errno unsafe-math-optimizations no-rounding-math no-signaling-nans cx-limited-range])
   AC_LANG_PUSH(C++)
@@ -1605,7 +1574,7 @@ AS_IF([test "${enable_live555}" != "no" -a -n "${CXX}"
     ], [
       AS_IF([test "${SYS}" != "os2"], [
         LIVE555_PREFIX=${LIVE555_PREFIX-"/usr"}
-        CPPFLAGS_live555="-I${LIVE555_PREFIX}/include/liveMedia -I${LIVE555_PREFIX}/include/groupsock -I${LIVE555_PREFIX}/include/BasicUsageEnvironment -I${LIVE555_PREFIX}/include/UsageEnvironment"
+        CPPFLAGS_live555="-I${LIVE555_PREFIX}/live/liveMedia/include -I${LIVE555_PREFIX}/live/groupsock/include -I${LIVE555_PREFIX}/live/BasicUsageEnvironment/include -I${LIVE555_PREFIX}/live/UsageEnvironment/include"
       ], [
         LIVE555_PREFIX=${LIVE555_PREFIX-"/usr/lib/live"}
         CPPFLAGS_live555="-I${LIVE555_PREFIX}/liveMedia/include -I${LIVE555_PREFIX}/groupsock/include -I${LIVE555_PREFIX}/BasicUsageEnvironment/include -I${LIVE555_PREFIX}/UsageEnvironment/include"
@@ -2316,10 +2285,10 @@ dnl
 AC_ARG_ENABLE(avcodec,
 [  --enable-avcodec        libavcodec codec (default enabled)])
 AS_IF([test "${enable_avcodec}" != "no"], [
-  PKG_CHECK_MODULES(AVCODEC,[libavcodec >= 53.34.0 libavutil >= 51.22.0], [
-    PKG_CHECK_EXISTS([libavutil < 55],, [
-      AC_MSG_ERROR([libavutil versions 55 and later are not supported.])
-    ])
+  PKG_CHECK_MODULES(AVCODEC,[libavcodec >= 55.0.0 libavutil >= 51.22.0], [
+    dnl PKG_CHECK_EXISTS([libavcodec < 56],, [
+    dnl  AC_MSG_ERROR([libavcodec versions 56 and later are not supported yet.])
+    dnl ])
     VLC_SAVE_FLAGS
     CPPFLAGS="${CPPFLAGS} ${AVCODEC_CFLAGS}"
     CFLAGS="${CFLAGS} ${AVCODEC_CFLAGS}"
@@ -2377,7 +2346,9 @@ AS_IF([test "${have_vaapi}" = "yes" -a "${have_avcodec
   case "${avfork}" in
     ffmpeg)
       PKG_CHECK_EXISTS([libavcodec >= 57.10.100], [
-        AC_MSG_ERROR([VA API requires FFmpeg libavcodec < 57.10 or libav.])
+        PKG_CHECK_EXISTS([libavcodec <= 57.12.100], [
+          AC_MSG_ERROR([VA API requires FFmpeg libavcodec < 57.10 or > 57.12 or libav.])
+        ])
       ])
       ;;
   esac
@@ -2411,7 +2382,9 @@ AS_IF([test "${enable_dxva2}" != "no"], [
     case "${avfork}" in
       ffmpeg)
         PKG_CHECK_EXISTS([libavcodec >= 57.10.100], [
-          AC_MSG_ERROR([DXVA2 requires FFmpeg libavcodec < 57.10 or libav.])
+          PKG_CHECK_EXISTS([libavcodec <= 57.12.100], [
+            AC_MSG_ERROR([DXVA2 requires FFmpeg libavcodec < 57.10 or > 57.12 or libav.])
+          ])
         ])
         ;;
     esac
@@ -3175,7 +3148,9 @@ AS_IF([test "${have_vdpau}" = "yes" -a "${have_avcodec
     libav) av_vdpau_ver="55.26.0" ;;
     ffmpeg) av_vdpau_ver="55.42.100"
       PKG_CHECK_EXISTS([libavcodec >= 57.10.100], [
-        AC_MSG_ERROR([VDPAU requires FFmpeg libavcodec < 57.10 or libav.])
+        PKG_CHECK_EXISTS([libavcodec <= 57.12.100], [
+          AC_MSG_ERROR([VDPAU requires FFmpeg libavcodec < 57.10 or > 57.12 or libav.])
+        ])
       ])
       ;;
   esac
@@ -3730,47 +3705,18 @@ AC_ARG_ENABLE(qt, [
   ])
 ])
 AS_IF([test "${enable_qt}" != "no"], [
-  PKG_CHECK_MODULES([QT], [Qt5Core >= 5.1.0 Qt5Widgets Qt5Gui], [
-      PKG_CHECK_MODULES([QTX11], [Qt5X11Extras], [
-          VLC_ADD_LIBS([qt4],[${QTX11_LIBS}])
-          VLC_ADD_CXXFLAGS([qt4],[${QTX11_CFLAGS} -DQT5_HAS_X11])
-          PKG_CHECK_MODULES([XI], [xi], [
-            VLC_ADD_LIBS([qt4], [${XI_LIBS}])
-            VLC_ADD_CXXFLAGS([qt4], [${XI_CFLAGS} -DHAVE_XI])
-          ], [
-            PKG_CHECK_EXISTS([Qt5Gui >= 5.5], [
-              AC_MSG_ERROR([${XI_PKG_ERRORS}.])
-            ], [
-              AC_MSG_WARN([${XI_PKG_ERRORS}.])
-            ])
-          ])
-      ],[
-          AC_MSG_WARN([Not building Qt Interface with X11 helpers.])
-      ])
-
-      PKG_CHECK_EXISTS([Qt5Core >= 5.5.0 Qt5Core < 5.6.0], [
-        AC_MSG_ERROR(["You cannot build VLC with Qt-5.5.0. You need to backport I78ef29975181ee22429c9bd4b11d96d9e68b7a9c"])
-      ])
-
-      QT_PATH="$(eval $PKG_CONFIG --variable=exec_prefix Qt5Core)"
-      QT_HOST_PATH="$(eval $PKG_CONFIG --variable=host_bins Qt5Core)"
-      AC_PATH_PROGS(MOC, [moc-qt5 moc], moc, ["${QT_HOST_PATH}" "${QT_PATH}/bin" "${CONTRIB_DIR}/bin"])
-      AC_PATH_PROGS(RCC, [rcc-qt5 rcc], rcc, ["${QT_HOST_PATH}" "${QT_PATH}/bin" "${CONTRIB_DIR}/bin"])
-      AC_PATH_PROGS(UIC, [uic-qt5 uic], uic, ["${QT_HOST_PATH}" "${QT_PATH}/bin" "${CONTRIB_DIR}/bin"])
-    ], [
-      PKG_CHECK_MODULES([QT], [QtCore QtGui >= 4.6.0],, [
-        AS_IF([test -n "${enable_qt}"],[
-          AC_MSG_ERROR([${QT_PKG_ERRORS}.])
-        ],[
-          AC_MSG_WARN([${QT_PKG_ERRORS}.])
-        ])
-        enable_qt="no"
-      ])
-      QT_PATH="$(eval $PKG_CONFIG --variable=exec_prefix QtCore)"
-      AC_PATH_PROGS(MOC, [moc-qt4 moc], moc, ["${QT_PATH}/bin" "${CONTRIB_DIR}/bin"])
-      AC_PATH_PROG(RCC, rcc, rcc, [${QT_PATH}/bin ${CONTRIB_DIR}/bin])
-      AC_PATH_PROGS(UIC, [uic-qt4 uic], uic, ["${QT_PATH}/bin" "${CONTRIB_DIR}/bin"])
+  PKG_CHECK_MODULES([QT], [QtCore QtGui >= 4.6.0],, [
+    AS_IF([test -n "${enable_qt}"],[
+      AC_MSG_ERROR([${QT_PKG_ERRORS}.])
+    ],[
+      AC_MSG_WARN([${QT_PKG_ERRORS}.])
     ])
+    enable_qt="no"
+  ])
+  QT_PATH="$(eval $PKG_CONFIG --variable=exec_prefix QtCore)"
+  AC_PATH_PROGS(MOC, [moc-qt4 moc], moc, ["${QT_PATH}/bin" "${CONTRIB_DIR}/bin"])
+  AC_PATH_PROG(RCC, rcc, rcc, [${QT_PATH}/bin ${CONTRIB_DIR}/bin])
+  AC_PATH_PROGS(UIC, [uic-qt4 uic], uic, ["${QT_PATH}/bin" "${CONTRIB_DIR}/bin"])
 ])
 AS_IF([test "${enable_qt}" != "no"], [
   VLC_ADD_PLUGIN([qt4])
