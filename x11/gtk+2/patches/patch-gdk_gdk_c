$OpenBSD: patch-gdk_gdk_c,v 1.1 2014/10/02 20:02:20 ajacoutot Exp $

From fbf38d16bcc26630f0f721d266509f5bc292f606 Mon Sep 17 00:00:00 2001
From: Emmanuele Bassi <ebassi@gnome.org>
Date: Tue, 26 Aug 2014 12:07:34 +0100
Subject: threads: Do not release the GDK lock if it hasn't been acquired yet

--- gdk/gdk.c.orig	Thu Mar  6 05:56:42 2014
+++ gdk/gdk.c	Thu Oct  2 21:37:39 2014
@@ -434,7 +434,29 @@ static void
 gdk_threads_impl_unlock (void)
 {
   if (gdk_threads_mutex)
-    g_mutex_unlock (gdk_threads_mutex);
+    {
+      /* we need a trylock() here because trying to unlock a mutex
+       * that hasn't been locked yet is:
+       *
+       *  a) not portable
+       *  b) fail on GLib â‰¥ 2.41
+       *
+       * trylock() will either succeed because nothing is holding the
+       * GDK mutex, and will be unlocked right afterwards; or it's
+       * going to fail because the mutex is locked already, in which
+       * case we unlock it as expected.
+       *
+       * this is needed in the case somebody called gdk_threads_init()
+       * without calling gdk_threads_enter() before calling gtk_main().
+       * in theory, we could just say that this is undefined behaviour,
+       * but our documentation has always been *less* than explicit as
+       * to what the behaviour should actually be.
+       *
+       * see bug: https://bugzilla.gnome.org/show_bug.cgi?id=735428
+       */
+      g_mutex_trylock (gdk_threads_mutex);
+      g_mutex_unlock (gdk_threads_mutex);
+    }
 }
 
 /**
