$OpenBSD: patch-src_actions_c,v 1.8 2016/08/05 13:55:33 dcoppa Exp $

commit 5561199c871293cca0b3dc2c6feff0d7783111c6
Author: Bjorn Mork <bjorn@mork.no>
Date:   Tue Jul 12 23:49:47 2016 +0200

wmaker: allow alt+tabbed windows over fullscreen

Fullscreen windows should only be on top when they are in focus. Change
the stacking level temporarily back to WMNormalLevel if the fullscreen
window loses focus due to an alt+tab operation.

Change the stacking level back to WMFullscreenLevel if the fullscreen
window receives the focus again.

Cc: Amadeusz Slawinski <amade@asmblr.net>
Signed-off-by: Bjorn Mork <bjorn@mork.no>

commit 6429847494fbcd84e2bab026c3fd9239c7cf8927
Author: Bjorn Mork <bjorn@mork.no>
Date:   Tue Jul 12 23:49:46 2016 +0200

wmaker: fix stacking order of dock and fullscreen

This reverts the commits:
 311ab6b08ccf ("Raise fullscreened window")
 a504370f3b27 ("Remove WMFullscreenLevel")

Removing WMFullscreenLevel had the side effect that a dock or panel
having the _NET_WM_WINDOW_TYPE_DOCK type would stack on top of
fullscreen windows, obscuring part of them.  This is unwanted. No
other window should cover a focused fullscreen window:.
https://specifications.freedesktop.org/wm-spec/latest/ar01s09.html#STACKINGORDER

Simply raising the fullscreen window to the top of the stack of normal
windows is not sufficient if there are windows with higher stacking
levels present.  The separate WMFullscreenLevel is needed.

Cc: Amadeusz Slawinski <amade@asmblr.net>
Signed-off-by: Bjorn Mork <bjorn@mork.no>

--- src/actions.c.orig	Tue Aug 11 20:41:14 2015
+++ src/actions.c	Fri Aug  5 15:39:23 2016
@@ -216,6 +216,10 @@ void wSetFocusTo(WScreen *scr, WWindow *wwin)
 			if (wPreferences.highlight_active_app)
 				wApplicationDeactivate(oapp);
 		}
+
+		/* reset fullscreen if temporarily removed due to lost focus*/
+		if (wwin->flags.fullscreen)
+			ChangeStackingLevel(wwin->frame->core, WMFullscreenLevel);
 	}
 
 	wWindowFocus(wwin, focused);
@@ -726,8 +730,7 @@ void wFullscreenWindow(WWindow *wwin)
 
 	wWindowConfigureBorders(wwin);
 
-	ChangeStackingLevel(wwin->frame->core, WMNormalLevel);
-	wRaiseFrame(wwin->frame->core);
+	ChangeStackingLevel(wwin->frame->core, WMFullscreenLevel);
 
 	wwin->bfs_geometry.x = wwin->frame_x;
 	wwin->bfs_geometry.y = wwin->frame_y;
@@ -751,10 +754,15 @@ void wUnfullscreenWindow(WWindow *wwin)
 
 	wwin->flags.fullscreen = False;
 
-	if (WFLAGP(wwin, sunken))
-		ChangeStackingLevel(wwin->frame->core, WMSunkenLevel);
-	else if (WFLAGP(wwin, floating))
-		ChangeStackingLevel(wwin->frame->core, WMFloatingLevel);
+	if (wwin->frame->core->stacking->window_level == WMFullscreenLevel) {
+		if (WFLAGP(wwin, sunken)) {
+			ChangeStackingLevel(wwin->frame->core, WMSunkenLevel);
+		} else if (WFLAGP(wwin, floating)) {
+			ChangeStackingLevel(wwin->frame->core, WMFloatingLevel);
+		} else {
+			ChangeStackingLevel(wwin->frame->core, WMNormalLevel);
+		}
+	}
 
 	wWindowConfigure(wwin, wwin->bfs_geometry.x, wwin->bfs_geometry.y,
 			 wwin->bfs_geometry.width, wwin->bfs_geometry.height);
