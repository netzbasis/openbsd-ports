$OpenBSD: patch-src_network_ssl_qsslcontext_openssl_cpp,v 1.6 2020/03/13 16:53:50 rsadowski Exp $

Index: src/network/ssl/qsslcontext_openssl.cpp
--- src/network/ssl/qsslcontext_openssl.cpp.orig
+++ src/network/ssl/qsslcontext_openssl.cpp
@@ -168,7 +168,7 @@ SSL* QSslContext::createSsl()
             m_npnContext.data = reinterpret_cast<unsigned char *>(m_supportedNPNVersions.data());
             m_npnContext.len = m_supportedNPNVersions.count();
             m_npnContext.status = QSslConfiguration::NextProtocolNegotiationNone;
-#if OPENSSL_VERSION_NUMBER >= 0x10002000L
+#if OPENSSL_VERSION_NUMBER >= 0x10002000L && !defined(LIBRESSL_VERSION_NUMBER)
             if (QSslSocket::sslLibraryVersionNumber() >= 0x10002000L) {
                 // Callback's type has a parameter 'const unsigned char ** out'
                 // since it was introduced in 1.0.2. Internally, OpenSSL's own code
@@ -269,7 +269,7 @@ void QSslContext::applyBackendConfig(QSslContext *sslC
     }
 #endif // ocsp
 
-#if OPENSSL_VERSION_NUMBER >= 0x10002000L
+#if OPENSSL_VERSION_NUMBER >= 0x10002000L && !defined(LIBRESSL_VERSION_NUMBER)
     if (QSslSocket::sslLibraryVersionNumber() >= 0x10002000L) {
         QSharedPointer<SSL_CONF_CTX> cctx(q_SSL_CONF_CTX_new(), &q_SSL_CONF_CTX_free);
         if (cctx) {
