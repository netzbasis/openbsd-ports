$OpenBSD: patch-kasten_controllers_test_scriptvalueconvertertest_cpp,v 1.1.1.1 2013/12/08 18:17:49 zhuk Exp $
--- kasten/controllers/test/scriptvalueconvertertest.cpp.orig	Thu Jan 24 02:14:54 2013
+++ kasten/controllers/test/scriptvalueconvertertest.cpp	Wed Feb  6 23:37:53 2013
@@ -18,6 +18,11 @@
  *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
  */
 
+#define __STDC_CONSTANT_MACROS
+
+#include <sys/types.h>
+#include <stdint.h>
+
 #include "view/structures/script/scriptengineinitializer.h"
 #include "view/structures/allprimitivetypes.h"
 
@@ -300,13 +305,13 @@ void ScriptValueConverterTest::testParseEnum_data()
     QTest::newRow("float2int32") << arg2(baseStr, "uint32()", "1234.1234") << 1 << quint64(1234);
     QTest::newRow("float2int32_range") << arg2(baseStr, "uint32()", "5294967296.234") << 0 << quint64(0);
     QTest::newRow("float2int64") << arg2(baseStr, "uint64()", "5294967296.234") << 1
-            << quint64(5294967296UL);
+            << quint64(UINT64_C(5294967296));
     QTest::newRow("double_overflow") << arg2(baseStr, "uint64()", "9007199254740993.0") << 0
-            << quint64(9007199254740993UL); //only 992 and 994 can be represented as a double
+            << quint64(UINT64_C(9007199254740993)); //only 992 and 994 can be represented as a double
     QTest::newRow("uint64_max_hex") << arg2(baseStr, "uint64()", "new String(\"0xFFFFFFFFFFFFFFFF\")") << 1
-            << quint64(0xFFFFFFFFFFFFFFFFL);
+            << quint64(UINT64_C(0xFFFFFFFFFFFFFFFF));
     QTest::newRow("uint64_max") << arg2(baseStr, "uint64()", "new String(\"18446744073709551615\")") << 1
-            << quint64(18446744073709551615UL);
+            << quint64(UINT64_C(18446744073709551615));
 }
 
 QTEST_MAIN(ScriptValueConverterTest)
