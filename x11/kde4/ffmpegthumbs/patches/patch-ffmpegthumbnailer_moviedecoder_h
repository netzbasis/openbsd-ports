$OpenBSD: patch-ffmpegthumbnailer_moviedecoder_h,v 1.1 2019/02/21 23:28:26 sthen Exp $

Fix with FFmpeg-3+, from https://git.reviewboard.kde.org/r/126992/
via FreeBSD.

Index: ffmpegthumbnailer/moviedecoder.h
--- ffmpegthumbnailer/moviedecoder.h.orig
+++ ffmpegthumbnailer/moviedecoder.h
@@ -23,6 +23,9 @@
 extern "C" {
 #include <libavcodec/avcodec.h>
 #include <libavformat/avformat.h>
+#include <libavfilter/avfilter.h>
+#include <libavfilter/buffersrc.h>
+#include <libavfilter/buffersink.h>
 }
 
 namespace ffmpegthumbnailer
@@ -52,10 +55,14 @@ class MovieDecoder (private)
 
     bool decodeVideoPacket();
     bool getVideoPacket();
-    void convertAndScaleFrame(PixelFormat format, int scaledSize, bool maintainAspectRatio, int& scaledWidth, int& scaledHeight);
-    void createAVFrame(AVFrame** avFrame, quint8** frameBuffer, int width, int height, PixelFormat format);
+    void convertAndScaleFrame(AVPixelFormat format, int scaledSize, bool maintainAspectRatio, int& scaledWidth, int& scaledHeight);
+    void createAVFrame(AVFrame** avFrame, quint8** frameBuffer, int width, int height, AVPixelFormat format);
     void calculateDimensions(int squareSize, bool maintainAspectRatio, int& destWidth, int& destHeight);
 
+    void delete_filter_graph();
+    int init_filter_graph(enum AVPixelFormat pixfmt, int width, int height);
+    int process_filter_graph(AVPicture *dst, const AVPicture *src, enum AVPixelFormat pixfmt, int width, int height);
+
 private:
     int                     m_VideoStream;
     AVFormatContext*        m_pFormatContext;
@@ -68,6 +75,13 @@ class MovieDecoder (private)
     bool                    m_FormatContextWasGiven;
     bool                    m_AllowSeek;
     bool                    m_initialized;
+    AVFilterContext*        m_buffersink_ctx;
+    AVFilterContext*        m_buffersrc_ctx;
+    AVFilterGraph*          m_filter_graph;
+    AVFrame*                m_filter_frame;
+    int                     m_last_width;
+    int                     m_last_height;
+    enum AVPixelFormat      m_last_pixfmt;
 };
 
 }
