$OpenBSD: patch-kio_kssl_kopenssl_cpp,v 1.1 2020/03/18 14:31:20 tb Exp $

Resolve X509_getm_notBefore() and X509_getm_notAfter() at runtime
to fix use of X509_get_notBefore() and X509_get_notAfter() in
kio/kssl/ksslcertificate.cpp after <openssl/x509.h> rev 1.70.

Index: kio/kssl/kopenssl.cpp
--- kio/kssl/kopenssl.cpp.orig
+++ kio/kssl/kopenssl.cpp
@@ -80,6 +80,8 @@ static void (*K_X509_free) (X509 *) = 0L;
 static char *(*K_X509_NAME_oneline) (X509_NAME *,char *,int) = 0L;
 static X509_NAME *(*K_X509_get_subject_name) (X509 *) = 0L;
 static X509_NAME *(*K_X509_get_issuer_name) (X509 *) = 0L;
+static ASN1_TIME *(*K_X509_getm_notBefore) (const X509 *) = 0L;
+static ASN1_TIME *(*K_X509_getm_notAfter) (const X509 *) = 0L;
 static X509_LOOKUP *(*K_X509_STORE_add_lookup) (X509_STORE *, X509_LOOKUP_METHOD *) = 0L;
 static X509_LOOKUP_METHOD *(*K_X509_LOOKUP_file)(void) = 0L;
 static void (*K_X509_LOOKUP_free)(X509_LOOKUP *) = 0L;
@@ -422,6 +424,8 @@ KOpenSSLProxy::KOpenSSLProxy()
       K_X509_NAME_oneline = (char * (*) (X509_NAME *,char *,int)) d->cryptoLib->resolveFunction("X509_NAME_oneline");
       K_X509_get_subject_name = (X509_NAME * (*) (X509 *)) d->cryptoLib->resolveFunction("X509_get_subject_name");
       K_X509_get_issuer_name = (X509_NAME * (*) (X509 *)) d->cryptoLib->resolveFunction("X509_get_issuer_name");
+      K_X509_getm_notBefore = (ASN1_TIME  * (*) (const X509 *)) d->cryptoLib->resolveFunction("X509_getm_notBefore");
+      K_X509_getm_notAfter = (ASN1_TIME  * (*) (const X509 *)) d->cryptoLib->resolveFunction("X509_getm_notAfter");
       K_X509_STORE_add_lookup = (X509_LOOKUP *(*) (X509_STORE *, X509_LOOKUP_METHOD *)) d->cryptoLib->resolveFunction("X509_STORE_add_lookup");
       K_X509_LOOKUP_file = (X509_LOOKUP_METHOD *(*)(void)) d->cryptoLib->resolveFunction("X509_LOOKUP_file");
       K_X509_LOOKUP_free = (void (*)(X509_LOOKUP *)) d->cryptoLib->resolveFunction("X509_LOOKUP_free");
@@ -902,6 +906,18 @@ X509_NAME *KOpenSSLProxy::X509_get_subject_name(X509 *
 
 X509_NAME *KOpenSSLProxy::X509_get_issuer_name(X509 *a) {
    if (K_X509_get_issuer_name) return (K_X509_get_issuer_name)(a);
+   return 0L;
+}
+
+
+ASN1_TIME *KOpenSSLProxy::X509_getm_notBefore(const X509 *a) {
+   if (K_X509_getm_notBefore) return (K_X509_getm_notBefore)(a);
+   return 0L;
+}
+
+
+ASN1_TIME *KOpenSSLProxy::X509_getm_notAfter(const X509 *a) {
+   if (K_X509_getm_notAfter) return (K_X509_getm_notAfter)(a);
    return 0L;
 }
 
