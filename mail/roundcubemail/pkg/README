$OpenBSD: README,v 1.6 2015/10/22 13:06:23 sthen Exp $

+-----------------------------------------------------------------------
| Running ${FULLPKGNAME} on OpenBSD
+-----------------------------------------------------------------------

Standard Roundcube installation/upgrade
=======================================
See ${INSTDIR}/INSTALL and ${INSTDIR}/UPGRADING
for more information.

OpenBSD's standard PHP package uses the Suhosin extension. Disable session
encryption by adding "suhosin.session.encrypt = false" to ${SYSCONFDIR}/php-${MODPHP_VERSION}.ini.

If upgrading from a version before 0.9, note that database access is now
done via PDO.

If you are using MySQL or PostgreSQL you will need to ensure that the
relevant package (php-pdo_mysql or php-pdo_pgsql) is installed and
enabled. If you are using SQLite, you will need to convert the
database from sqlite2 to sqlite3, for example (adjusting filenames
if necessary):

# cd /var/www/roundcubemail/db
# mv sqlite.db old_sqlite.db
# sqlite old_sqlite.db .dump | sqlite3 sqlite.db


Setup with apache-httpd-openbsd from packages
=============================================
With Apache, AllowOverride settings are required on the ${INSTDIR}
directory. You can configure this as follows:

# ln -s ../modules.sample/roundcubemail.conf \
        /var/www/conf/modules
# /etc/rc.d/httpd restart


Setup with other web servers
============================
Review the .htaccess files as you may need to use them as a template to
adjust various PHP settings in ${SYSCONFDIR}/php-${MODPHP_VERSION}.ini

With clients using certain versions of Internet Explorer, cache-control
headers must be adjusted for file downloads to work correctly over HTTPS.
Roundcube does this automatically but requires that the HTTPS variable
is passed to PHP. This is normally set by Apache mod_ssl, but not by
other servers; it will show as an environment variable in a phpinfo()
call if you want to check.

If this is not present it will need adding as a FastCGI parameter.
For nginx, you can do this by setting 'fastcgi_param HTTPS on' in the
appropriate location{} block for HTTPS.
