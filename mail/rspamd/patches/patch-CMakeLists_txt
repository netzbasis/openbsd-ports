$OpenBSD: patch-CMakeLists_txt,v 1.17 2018/08/21 17:11:08 sthen Exp $

don't pick up libevent2 from ports, otherwise rspamd links against
both libevent from base *and* libevent2

forcibly disable lua < 5.3 (lua_strlen problem)

Index: CMakeLists.txt
--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -515,14 +515,14 @@ SET(POE_LOOP "Loop::IO_Poll")
 SET(TAR "tar")
 
 # Platform specific configuration
-IF(CMAKE_SYSTEM_NAME MATCHES "^.*BSD$|DragonFly")
+IF(CMAKE_SYSTEM_NAME MATCHES "FreeBSD|DragonFly")
 	ADD_DEFINITIONS(-DFREEBSD -D_BSD_SOURCE)
 	CONFIGURE_FILE(freebsd/rspamd.sh.in freebsd/rspamd @ONLY)
 
 	IF(ENABLE_REDIRECTOR MATCHES "ON")
 		CONFIGURE_FILE(freebsd/redirector.sh.in freebsd/redirector @ONLY)
 	ENDIF(ENABLE_REDIRECTOR MATCHES "ON")
-	MESSAGE(STATUS "Configuring for BSD system")
+	MESSAGE(STATUS "Configuring for FreeBSD/DragonFly system")
 	# Find util library
 	ProcessPackage(LIBUTIL LIBRARY util INCLUDE libutil.h
 		ROOT ${LIBUTIL_ROOT_DIR} OPTIONAL)
@@ -538,8 +538,14 @@ IF(CMAKE_SYSTEM_NAME MATCHES "^.*BSD$|DragonFly")
 	ENDIF()
 	SET(POE_LOOP "Loop::Kqueue")
 	SET(TAR "gtar")
-ENDIF()
+ENDIF(CMAKE_SYSTEM_NAME MATCHES "FreeBSD|DragonFly")
 
+IF(CMAKE_SYSTEM_NAME MATCHES "NetBSD|OpenBSD")
+	MESSAGE(STATUS "Configuring for NetBSD/OpenBSD")
+	SET(POE_LOOP "Loop::Kqueue")
+	SET(TAR "gtar")
+ENDIF(CMAKE_SYSTEM_NAME MATCHES "NetBSD|OpenBSD")
+
 IF(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
 	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D_BSD_SOURCE -DDARWIN")
 	SET(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS "${CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS} -undefined dynamic_lookup")
@@ -611,13 +617,13 @@ IF(ENABLE_LUAJIT MATCHES "ON")
 		INCLUDE_DIRECTORIES("${LUA_INCLUDE_DIR}")
 	ENDIF(NOT LUA_FOUND)
 ELSE(ENABLE_LUAJIT MATCHES "ON")
-	FindLua(VERSION_MAJOR "5" VERSION_MINOR "3" ROOT "${LUA_ROOT}")
-	IF(NOT LUA_FOUND)
-		FindLua(VERSION_MAJOR "5" VERSION_MINOR "2" ROOT "${LUA_ROOT}")
-		IF(NOT LUA_FOUND)
+#	FindLua(VERSION_MAJOR "5" VERSION_MINOR "3" ROOT "${LUA_ROOT}")
+#	IF(NOT LUA_FOUND)
+#		FindLua(VERSION_MAJOR "5" VERSION_MINOR "2" ROOT "${LUA_ROOT}")
+#		IF(NOT LUA_FOUND)
 				FindLua(VERSION_MAJOR "5" VERSION_MINOR "1" ROOT "${LUA_ROOT}")
-		ENDIF(NOT LUA_FOUND)
-	ENDIF(NOT LUA_FOUND)
+#		ENDIF(NOT LUA_FOUND)
+#	ENDIF(NOT LUA_FOUND)
 	IF(NOT LUA_FOUND)
 			MESSAGE(FATAL_ERROR "Lua not found, lua support is required")
 	ELSE(NOT LUA_FOUND)
@@ -654,7 +660,7 @@ ELSE()
 ENDIF()
 
 ProcessPackage(LIBEVENT LIBRARY event INCLUDE event.h INCLUDE_SUFFIXES include/event
-	ROOT ${LIBEVENT_ROOT_DIR} MODULES event libevent)
+	ROOT ${LIBEVENT_ROOT_DIR} MODULES event)
 ProcessPackage(SQLITE3 LIBRARY sqlite3 INCLUDE sqlite3.h INCLUDE_SUFFIXES include/sqlite3 include/sqlite
 	ROOT ${SQLITE3_ROOT_DIR} MODULES sqlite3 sqlite)
 ProcessPackage(ICUDATA LIBRARY icudata INCLUDE unicode/ucnv.h
