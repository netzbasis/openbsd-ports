$OpenBSD: patch-installer_linux_search_cfg,v 1.7 2016/04/01 18:08:10 robert Exp $
--- installer/linux/search.cfg.orig	Wed Mar 23 12:14:33 2016
+++ installer/linux/search.cfg	Fri Apr  1 13:20:45 2016
@@ -2,19 +2,19 @@
 # INDEXED SEARCH SERVICE SETTINGS
 
 # Location of the index files
-index_path          =   /var/lib/zarafa/search/
+index_path          =   /var/db/zarafa/search/
 
 # run as specific user
-#run_as_user         = zarafa
+run_as_user         = _zarafa
 
 # run as specific group
-#run_as_group        = zarafa
+run_as_group        = _zarafa
 
 # control pid file
-#pid_file            =   /var/run/zarafad/search.pid
+pid_file            =   /var/run/zarafad/search.pid
 
 # run server in this path (when not using the -F switch)
-#running_path = /var/lib/zarafa
+running_path = /var/empty
 
 # Limit the number of results returned (0 = don't limit)
 limit_results		=	1000
@@ -28,7 +28,7 @@ limit_results		=	1000
 #server_socket = file:///var/run/zarafad/server.sock
 
 # Login to the Zarafa server using this SSL Key
-#sslkey_file         = /etc/zarafa/ssl/search.pem
+#sslkey_file         = ${SYSCONFDIR}/zarafa/ssl/search.pem
 
 # The password of the SSL Key
 #sslkey_pass         = replace-with-server-cert-password
@@ -42,10 +42,10 @@ limit_results		=	1000
 server_bind_name   =   file:///var/run/zarafad/search.sock
 
 # File with RSA key for SSL, used then server_bind_name uses https
-ssl_private_key_file= /etc/zarafa/search/privkey.pem
+ssl_private_key_file= ${SYSCONFDIR}/zarafa/search/privkey.pem
 
 # File with certificate for SSL, used then server_bind_name uses https
-ssl_certificate_file= /etc/zarafa/search/cert.pem
+ssl_certificate_file= ${SYSCONFDIR}/zarafa/search/cert.pem
 
 ##############################################################
 # LOG SETTINGS
@@ -91,7 +91,7 @@ index_attachments	= no
 index_attachment_max_size = 5M
 
 # Scripts to attachment to text parser
-index_attachment_parser = /etc/zarafa/searchscripts/attachments_parser
+index_attachment_parser = ${SYSCONFDIR}/zarafa/searchscripts/attachments_parser
 
 # Maximum amount of memory which a parser may use in bytes (set to 0 for unlimited)
 # If this maximum is exceeded the parser will be killed
