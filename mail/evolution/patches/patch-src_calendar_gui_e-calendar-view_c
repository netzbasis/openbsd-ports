$OpenBSD: patch-src_calendar_gui_e-calendar-view_c,v 1.1 2018/06/23 09:56:17 ajacoutot Exp $

From a87ce36cdaaf59ca808e5836ba8d87fb8bef955c Mon Sep 17 00:00:00 2001
From: Milan Crha <mcrha@redhat.com>
Date: Thu, 14 Jun 2018 14:28:37 +0200
Subject: [PATCH] Bug 796174 - strcat() considered unsafe for buffer overflow

Index: src/calendar/gui/e-calendar-view.c
--- src/calendar/gui/e-calendar-view.c.orig
+++ src/calendar/gui/e-calendar-view.c
@@ -2248,7 +2248,7 @@ e_calendar_view_get_description_text (ECalendarView *c
 	struct tm start_tm, end_tm;
 	struct icaltimetype start_tt, end_tt;
 	icaltimezone *zone;
-	gchar buffer[1024] = { 0 };
+	gchar start_buffer[512] = { 0 };
 	gchar end_buffer[512] = { 0 };
 
 	g_return_val_if_fail (E_IS_CALENDAR_VIEW (cal_view), NULL);
@@ -2282,59 +2282,34 @@ e_calendar_view_get_description_text (ECalendarView *c
 	if (E_IS_MONTH_VIEW (cal_view) || E_IS_CAL_LIST_VIEW (cal_view)) {
 		if (start_tm.tm_year == end_tm.tm_year) {
 			if (start_tm.tm_mon == end_tm.tm_mon) {
-				e_utf8_strftime (buffer, sizeof (buffer),
-					"%d", &start_tm);
-				e_utf8_strftime (end_buffer, sizeof (end_buffer),
-					_("%d %b %Y"), &end_tm);
-				strcat (buffer, " - ");
-				strcat (buffer, end_buffer);
+				e_utf8_strftime (start_buffer, sizeof (start_buffer), "%d", &start_tm);
+				e_utf8_strftime (end_buffer, sizeof (end_buffer), _("%d %b %Y"), &end_tm);
 			} else {
-				e_utf8_strftime (buffer, sizeof (buffer),
-					_("%d %b"), &start_tm);
-				e_utf8_strftime (end_buffer, sizeof (end_buffer),
-					_("%d %b %Y"), &end_tm);
-				strcat (buffer, " - ");
-				strcat (buffer, end_buffer);
+				e_utf8_strftime (start_buffer, sizeof (start_buffer), _("%d %b"), &start_tm);
+				e_utf8_strftime (end_buffer, sizeof (end_buffer), _("%d %b %Y"), &end_tm);
 			}
 		} else {
-			e_utf8_strftime (
-				buffer, sizeof (buffer),
-				_("%d %b %Y"), &start_tm);
-			e_utf8_strftime (
-				end_buffer, sizeof (end_buffer),
-				_("%d %b %Y"), &end_tm);
-			strcat (buffer, " - ");
-			strcat (buffer, end_buffer);
+			e_utf8_strftime (start_buffer, sizeof (start_buffer), _("%d %b %Y"), &start_tm);
+			e_utf8_strftime (end_buffer, sizeof (end_buffer), _("%d %b %Y"), &end_tm);
 		}
 	} else {
 		if (start_tm.tm_year == end_tm.tm_year &&
 			start_tm.tm_mon == end_tm.tm_mon &&
 			start_tm.tm_mday == end_tm.tm_mday) {
-			e_utf8_strftime (
-				buffer, sizeof (buffer),
-				_("%A %d %b %Y"), &start_tm);
+			e_utf8_strftime (start_buffer, sizeof (start_buffer), _("%A %d %b %Y"), &start_tm);
 		} else if (start_tm.tm_year == end_tm.tm_year) {
-			e_utf8_strftime (
-				buffer, sizeof (buffer),
-				_("%a %d %b"), &start_tm);
-			e_utf8_strftime (
-				end_buffer, sizeof (end_buffer),
-				_("%a %d %b %Y"), &end_tm);
-			strcat (buffer, " - ");
-			strcat (buffer, end_buffer);
+			e_utf8_strftime (start_buffer, sizeof (start_buffer), _("%a %d %b"), &start_tm);
+			e_utf8_strftime (end_buffer, sizeof (end_buffer), _("%a %d %b %Y"), &end_tm);
 		} else {
-			e_utf8_strftime (
-				buffer, sizeof (buffer),
-				_("%a %d %b %Y"), &start_tm);
-			e_utf8_strftime (
-				end_buffer, sizeof (end_buffer),
-				_("%a %d %b %Y"), &end_tm);
-			strcat (buffer, " - ");
-			strcat (buffer, end_buffer);
+			e_utf8_strftime (start_buffer, sizeof (start_buffer), _("%a %d %b %Y"), &start_tm);
+			e_utf8_strftime (end_buffer, sizeof (end_buffer), _("%a %d %b %Y"), &end_tm);
 		}
 	}
 
-	return g_strdup (buffer);
+	if (*start_buffer && *end_buffer)
+		return g_strdup_printf ("%s - %s", start_buffer, end_buffer);
+
+	return g_strdup_printf ("%s%s", start_buffer, end_buffer);
 }
 
 void
