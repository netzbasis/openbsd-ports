$OpenBSD: patch-mozilla_js_src_jit_Lowering_cpp,v 1.1 2017/03/08 15:54:54 landry Exp $

https://gitweb.torproject.org/tor-browser.git/patch/?id=235c607f6bc39e124b9e8430092be249c3d64981

--- mozilla/js/src/jit/Lowering.cpp.orig	Sun Mar  5 21:58:26 2017
+++ mozilla/js/src/jit/Lowering.cpp	Wed Mar  8 14:06:00 2017
@@ -2304,17 +2304,7 @@ LIRGenerator::visitFunctionEnvironment(MFunctionEnviro
 void
 LIRGenerator::visitInterruptCheck(MInterruptCheck* ins)
 {
-    // Implicit interrupt checks require asm.js signal handlers to be installed.
-    // They also require writable JIT code: reprotecting in patchIonBackedges
-    // would be expensive and using AutoWritableJitCode in the signal handler
-    // is complicated because there could be another AutoWritableJitCode on the
-    // stack.
-    LInstructionHelper<0, 0, 0>* lir;
-    if (GetJitContext()->runtime->canUseSignalHandlers()) {
-        lir = new(alloc()) LInterruptCheckImplicit();
-    } else {
-        lir = new(alloc()) LInterruptCheck();
-    }
+    LInstructionHelper<0, 0, 0>* lir = new(alloc()) LInterruptCheck();
     add(lir, ins);
     assignSafepoint(lir, ins);
 }
