$OpenBSD: patch-Modules_CMakeCXXInformation_cmake,v 1.6 2018/06/12 05:12:01 rsadowski Exp $
Index: Modules/CMakeCXXInformation.cmake
--- Modules/CMakeCXXInformation.cmake.orig
+++ Modules/CMakeCXXInformation.cmake
@@ -134,10 +134,6 @@ if(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG)
   set(CMAKE_EXE_EXPORTS_CXX_FLAG ${CMAKE_EXE_EXPORTS_C_FLAG})
 endif()
 
-if(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG)
-  set(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG ${CMAKE_SHARED_LIBRARY_SONAME_C_FLAG})
-endif()
-
 if(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG)
   set(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG})
 endif()
@@ -232,7 +228,7 @@ include(CMakeCommonLanguageInclude)
 # create a shared C++ library
 if(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY)
   set(CMAKE_CXX_CREATE_SHARED_LIBRARY
-      "<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>")
+      "<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>")
 endif()
 
 # create a c++ shared module copy the shared library rule by default
