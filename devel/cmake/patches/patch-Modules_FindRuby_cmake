$OpenBSD: patch-Modules_FindRuby_cmake,v 1.15 2018/06/12 05:12:01 rsadowski Exp $
Index: Modules/FindRuby.cmake
--- Modules/FindRuby.cmake.orig
+++ Modules/FindRuby.cmake
@@ -41,10 +41,18 @@
 
 # uncomment the following line to get debug output for this file
 # set(_RUBY_DEBUG_OUTPUT TRUE)
+set(MODRUBY_REV $ENV{MODRUBY_REV})
 
+if(MODRUBY_REV AND MODRUBY_REV MATCHES "^[0-9]+\\.[0-9]$")
+   string(REPLACE "." "" MODRUBY_REV_NO_DOTS ${MODRUBY_REV})
+   string(REPLACE "." ";" MODRUBY_REV_LIST ${MODRUBY_REV})
+   list(GET MODRUBY_REV_LIST 0 MODRUBY_REV_MAJOR)
+   list(GET MODRUBY_REV_LIST 1 MODRUBY_REV_MINOR)
+endif()
+
 # Determine the list of possible names of the ruby executable depending
 # on which version of ruby is required
-set(_RUBY_POSSIBLE_EXECUTABLE_NAMES ruby)
+set(_RUBY_POSSIBLE_EXECUTABLE_NAMES)
 
 # if 1.9 is required, don't look for ruby18 and ruby1.8, default to version 1.8
 if(DEFINED Ruby_FIND_VERSION_MAJOR AND DEFINED Ruby_FIND_VERSION_MINOR)
@@ -59,12 +67,9 @@ else()
 endif()
 
 if(NOT Ruby_FIND_VERSION_EXACT)
-  list(APPEND _RUBY_POSSIBLE_EXECUTABLE_NAMES ruby2.4 ruby24)
-  list(APPEND _RUBY_POSSIBLE_EXECUTABLE_NAMES ruby2.3 ruby23)
-  list(APPEND _RUBY_POSSIBLE_EXECUTABLE_NAMES ruby2.2 ruby22)
-  list(APPEND _RUBY_POSSIBLE_EXECUTABLE_NAMES ruby2.1 ruby21)
-  list(APPEND _RUBY_POSSIBLE_EXECUTABLE_NAMES ruby2.0 ruby20)
-  list(APPEND _RUBY_POSSIBLE_EXECUTABLE_NAMES ruby1.9 ruby19)
+  list(APPEND _RUBY_POSSIBLE_EXECUTABLE_NAMES ruby25 ruby2.4)
+  list(APPEND _RUBY_POSSIBLE_EXECUTABLE_NAMES ruby24 ruby2.4)
+  list(APPEND _RUBY_POSSIBLE_EXECUTABLE_NAMES ruby23 ruby2.3)
 
   # if we want a version below 1.9, also look for ruby 1.8
   if("${Ruby_FIND_VERSION_SHORT_NODOT}" VERSION_LESS "19")
@@ -74,6 +79,9 @@ if(NOT Ruby_FIND_VERSION_EXACT)
   list(REMOVE_DUPLICATES _RUBY_POSSIBLE_EXECUTABLE_NAMES)
 endif()
 
+list(APPEND _RUBY_POSSIBLE_EXECUTABLE_NAMES ruby)
+list(REMOVE_DUPLICATES _RUBY_POSSIBLE_EXECUTABLE_NAMES)
+
 find_program(RUBY_EXECUTABLE NAMES ${_RUBY_POSSIBLE_EXECUTABLE_NAMES})
 
 if(RUBY_EXECUTABLE  AND NOT  RUBY_VERSION_MAJOR)
@@ -188,6 +196,11 @@ if(RUBY_EXECUTABLE AND NOT RUBY_VERSION_MAJOR)
       set(RUBY_VERSION_MAJOR 2)
       set(RUBY_VERSION_MINOR 4)
    endif()
+   # check whether we found 2.5.x
+   if(${RUBY_EXECUTABLE} MATCHES "ruby2\\.?5")
+      set(RUBY_VERSION_MAJOR 2)
+      set(RUBY_VERSION_MINOR 4)
+   endif()
 endif()
 
 if(RUBY_VERSION_MAJOR)
@@ -221,7 +234,8 @@ endif()
 
 
 # Determine the list of possible names for the ruby library
-set(_RUBY_POSSIBLE_LIB_NAMES ruby ruby-static ruby${_RUBY_VERSION_SHORT} ruby${_RUBY_VERSION_SHORT_NODOT} ruby-${_RUBY_VERSION_SHORT} ruby-${RUBY_VERSION})
+set(_RUBY_POSSIBLE_LIB_NAMES ruby${_RUBY_VERSION_SHORT_NODOT} ruby${_RUBY_VERSION_SHORT} ruby-${_RUBY_VERSION_SHORT} ruby-${RUBY_VERSION} ruby ruby-static)
+
 
 if(WIN32)
    set( _RUBY_MSVC_RUNTIME "" )
