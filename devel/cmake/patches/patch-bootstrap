$OpenBSD: patch-bootstrap,v 1.16 2018/03/14 12:24:54 rsadowski Exp $

Use Ninja to build CMake
XXX: broken on m88k

Index: bootstrap
--- bootstrap.orig
+++ bootstrap
@@ -165,7 +165,11 @@ if ${cmake_system_mingw}; then
   cmake_bootstrap_generator="MSYS Makefiles"
 else
   # Bootstrapping from a standard UNIX prompt.
-  cmake_bootstrap_generator="Unix Makefiles"
+  if arch -s | grep -q '^m88k'; then
+    cmake_bootstrap_generator="Unix Makefiles"
+  else
+    cmake_bootstrap_generator="Ninja"
+  fi
 fi
 
 # Choose tools and extensions for this platform.
@@ -224,9 +228,9 @@ cmake_doc_dir_default="`cmake_install_dest_default DOC
 cmake_man_dir_default="`cmake_install_dest_default MAN ${cmake_man_dir_keyword}`"
 cmake_xdgdata_dir_default="`cmake_install_dest_default XDGDATA ${cmake_xdgdata_dir_keyword}`"
 
-CMAKE_KNOWN_C_COMPILERS="cc gcc xlc icc tcc"
-CMAKE_KNOWN_CXX_COMPILERS="aCC xlC CC g++ c++ icc como "
-CMAKE_KNOWN_MAKE_PROCESSORS="gmake make"
+CMAKE_KNOWN_C_COMPILERS="cc"
+CMAKE_KNOWN_CXX_COMPILERS="c++"
+CMAKE_KNOWN_MAKE_PROCESSORS="make"
 
 CMAKE_PROBLEMATIC_FILES="\
   CMakeCache.txt \
@@ -310,6 +314,7 @@ CMAKE_CXX_SOURCES="\
   cmFindPathCommand \
   cmFindProgramCommand \
   cmForEachCommand \
+  cmFortranParserImpl \
   cmFunctionCommand \
   cmGeneratedFileStream \
   cmGeneratorExpression \
@@ -330,6 +335,7 @@ CMAKE_CXX_SOURCES="\
   cmGetTestPropertyCommand \
   cmGlobalCommonGenerator \
   cmGlobalGenerator \
+  cmGlobalNinjaGenerator \
   cmGlobalUnixMakefileGenerator3 \
   cmHexFileConverter \
   cmIfCommand \
@@ -350,10 +356,12 @@ CMAKE_CXX_SOURCES="\
   cmInstalledFile \
   cmLinkDirectoriesCommand \
   cmLinkLineComputer \
+  cmLinkLineDeviceComputer \
   cmListCommand \
   cmListFileCache \
   cmLocalCommonGenerator \
   cmLocalGenerator \
+  cmLocalNinjaGenerator \
   cmLocalUnixMakefileGenerator3 \
   cmMSVC60LinkLineComputer \
   cmMacroCommand \
@@ -368,6 +376,10 @@ CMAKE_CXX_SOURCES="\
   cmMessageCommand \
   cmMessenger \
   cmNewLineStyle \
+  cmNinjaLinkLineComputer \
+  cmNinjaNormalTargetGenerator \
+  cmNinjaTargetGenerator \
+  cmNinjaUtilityTargetGenerator \
   cmOSXBundleGenerator \
   cmOptionCommand \
   cmOrderDirectories \
@@ -436,6 +448,8 @@ LexerParser_CXX_SOURCES="\
   cmCommandArgumentParser \
   cmExprLexer \
   cmExprParser \
+  cmFortranLexer \
+  cmFortranParser \
 "
 
 LexerParser_C_SOURCES="\
@@ -1385,7 +1399,7 @@ cmake_cxx_flags="${cmake_cxx_flags} \
   -I`cmake_escape \"${cmake_source_dir}/Source/LexerParser\"` \
   -I`cmake_escape \"${cmake_source_dir}/Utilities\"`"
 echo "cmake: ${objs}" > "${cmake_bootstrap_dir}/Makefile"
-echo "	${cmake_cxx_compiler} ${cmake_ld_flags} ${cmake_cxx_flags} ${objs} ${libs} -o cmake" >> "${cmake_bootstrap_dir}/Makefile"
+echo "	${cmake_cxx_compiler} ${cmake_ld_flags} ${cmake_cxx_flags} ${objs} -o cmake -L${cmake_prefix_dir}/lib -ljsoncpp" >> "${cmake_bootstrap_dir}/Makefile"
 for a in ${CMAKE_CXX_SOURCES}; do
   src=`cmake_escape "${cmake_source_dir}/Source/${a}.cxx"`
   src_flags=`eval echo \\${cmake_cxx_flags_\${a}}`
