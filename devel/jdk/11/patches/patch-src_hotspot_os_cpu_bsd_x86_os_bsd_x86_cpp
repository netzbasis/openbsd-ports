$OpenBSD: patch-src_hotspot_os_cpu_bsd_x86_os_bsd_x86_cpp,v 1.1 2019/07/23 11:55:42 kurt Exp $

Enable os::verify_stack_alignment() on BSD:
* Add implementation for stack alignment checking.
* Disable optimization on os::current_stack_pointer() for clang to
  prevent clang from optimizing away the stack alignment on x86 and to
  prevent inlining into os::verify_stack_alignment() which also gets
  over optimized and breaks the checking of stack alignment.

Index: src/hotspot/os_cpu/bsd_x86/os_bsd_x86.cpp
--- src/hotspot/os_cpu/bsd_x86/os_bsd_x86.cpp.orig
+++ src/hotspot/os_cpu/bsd_x86/os_bsd_x86.cpp
@@ -271,16 +271,18 @@
 # endif
 #endif
 
-address os::current_stack_pointer() {
 #if defined(__clang__) || defined(__llvm__)
+address os::current_stack_pointer() __attribute__ ((optnone)) {
   intptr_t* esp;
   __asm__ __volatile__ ("mov %%" SPELL_REG_SP ", %0":"=r"(esp):);
   return (address) esp;
+}
 #else
+address os::current_stack_pointer() {
   register void *esp __asm__ (SPELL_REG_SP);
   return (address) esp;
-#endif
 }
+#endif
 
 char* os::non_memory_address_word() {
   // Must never look like an address returned by reserve_memory,
@@ -975,6 +977,7 @@ void os::setup_fpu() {
 
 #ifndef PRODUCT
 void os::verify_stack_alignment() {
+  assert(((intptr_t)os::current_stack_pointer() & (StackAlignmentInBytes-1)) == 0, "incorrect stack alignment");
 }
 #endif
 
