$OpenBSD: patch-ompi_contrib_vt_vt_tools_compwrap_compwrap_cc,v 1.1 2018/04/11 22:49:40 sthen Exp $

Index: ompi/contrib/vt/vt/tools/compwrap/compwrap.cc
--- ompi/contrib/vt/vt/tools/compwrap/compwrap.cc.orig
+++ ompi/contrib/vt/vt/tools/compwrap/compwrap.cc
@@ -99,7 +99,7 @@ ReadDataFile()
       "compiler_iflags_ftrace", "inst_avail", "inst_default"
    };
    
-   std::string data_file = DATADIR"/" + ExeName + "-wrapper-data.txt";
+   std::string data_file = DATADIR "/" + ExeName + "-wrapper-data.txt";
    std::ifstream in( data_file.c_str() );
    if( !in )
    {
@@ -646,11 +646,11 @@ ParseCommandLine( int argc, char ** argv )
       //
       // -vt:<cc|cxx|f77|f90> <cmd>
       //
-      else if( arg.compare("-vt:"WRAP_LANG_SUFFIX) == 0 )
+      else if( arg.compare("-vt:" WRAP_LANG_SUFFIX) == 0 )
       {
 	 if( i == argc - 1 )
 	 {
-	    std::cerr << ExeName << ": <cmd> expected -- -vt:"WRAP_LANG_SUFFIX
+	    std::cerr << ExeName << ": <cmd> expected -- -vt:" WRAP_LANG_SUFFIX
 		      << std::endl;
 	    return false;
 	 }
@@ -824,7 +824,7 @@ Wrapper::showUsageText()
 	     << " compiler wrapper for VampirTrace."
 	     << std::endl << std::endl
 	     << " Syntax: " << ExeName << " "
-	     << "[-vt:"WRAP_LANG_SUFFIX" <cmd>] "
+	     << "[-vt:" WRAP_LANG_SUFFIX " <cmd>] "
 	     << "[-vt:inst <insttype>] [-vt:<seq|mpi|omp|hyb>] "
 	     << std::endl << "         "
 	     << "[-vt:opari <args>]"
@@ -840,7 +840,7 @@ Wrapper::showUsageText()
 	     << std::endl
 	     << "     -vt:help            Show this help message."
 	     << std::endl
-	     << "     -vt:"WRAP_LANG_SUFFIX" <cmd>       ";
+	     << "     -vt:" WRAP_LANG_SUFFIX " <cmd>       ";
    if( strlen( WRAP_LANG_SUFFIX ) == 2 ) std::cout << " ";
    std::cout << "Set the underlying compiler command.";
    std::cout <<  std::endl << std::endl;
@@ -895,7 +895,7 @@ Wrapper::showUsageText()
 
    std::cout << "     -vt:opari <args>    Set options for OPARI command."
 	     << std::endl
-	     << "                         (see "DATADIR"/doc/opari/Readme.html for more information)"
+	     << "                         (see " DATADIR "/doc/opari/Readme.html for more information)"
 	     << std::endl << std::endl
 	     << "     -vt:<seq|mpi|omp|hyb>"
 	     << std::endl
@@ -939,7 +939,7 @@ Wrapper::showUsageText()
 	     << std::endl << std::endl
 	     << "     See the man page for your underlying compiler for other options that can"
 	     << std::endl
-	     << "     be passed through 'vt"WRAP_LANG_SUFFIX"'."
+	     << "     be passed through 'vt" WRAP_LANG_SUFFIX "'."
 	     << std::endl << std::endl
 	     << "   environment variables:"
 	     << std::endl
@@ -952,7 +952,7 @@ Wrapper::showUsageText()
 #elif defined(WRAP_LANG_F90)
              << "     VT_F90"
 #endif
-             << "              Equivalent to '-vt:"WRAP_LANG_SUFFIX"'"
+             << "              Equivalent to '-vt:" WRAP_LANG_SUFFIX "'"
              << std::endl
 	     << "     VT_INST             Equivalent to '-vt:inst'"
 	     << std::endl << std::endl
@@ -1121,7 +1121,7 @@ Wrapper::show()
 	 if( usesMPI() )
 	 {
 	    vt_snprintf( vtlib, sizeof(vtlib) - 1,
-			 "%s %s %s %s "VTHYBLIB" %s %s",
+			 "%s %s %s %s " VTHYBLIB " %s %s",
 			 Properties.comp_ldflags.c_str(),
 			 Properties.libdir.c_str(),
 			 getInstType() == INST_TYPE_DYNINST ?
@@ -1136,7 +1136,7 @@ Wrapper::show()
 	 }
 	 else
 	 {
-	    vt_snprintf( vtlib, sizeof(vtlib) - 1, "%s %s %s "VTOMPLIB" %s",
+	    vt_snprintf( vtlib, sizeof(vtlib) - 1, "%s %s %s " VTOMPLIB " %s",
 			 Properties.comp_ldflags.c_str(),
 			 Properties.libdir.c_str(),
 			 getInstType() == INST_TYPE_DYNINST ?
@@ -1146,7 +1146,7 @@ Wrapper::show()
       }
       else if( usesMPI() )
       {
-	 vt_snprintf( vtlib, sizeof(vtlib) - 1, "%s %s %s %s "VTMPILIB" %s %s",
+	 vt_snprintf( vtlib, sizeof(vtlib) - 1, "%s %s %s %s " VTMPILIB " %s %s",
 		      Properties.comp_ldflags.c_str(),
 		      Properties.libdir.c_str(),
 		      getInstType() == INST_TYPE_DYNINST ?
@@ -1161,7 +1161,7 @@ Wrapper::show()
       }
       else
       {
-	 vt_snprintf( vtlib, sizeof(vtlib) - 1, "%s %s %s "VTSEQLIB" %s",
+	 vt_snprintf( vtlib, sizeof(vtlib) - 1, "%s %s %s " VTSEQLIB " %s",
 		      Properties.comp_ldflags.c_str(),
 		      Properties.libdir.c_str(),
 		      getInstType() == INST_TYPE_DYNINST ?
@@ -1269,7 +1269,7 @@ Wrapper::run()
 	 if( usesMPI() )
 	 {
 	    vt_snprintf( vtlib, sizeof(vtlib) - 1,
-			 "%s %s %s %s "VTHYBLIB" %s %s",
+			 "%s %s %s %s " VTHYBLIB " %s %s",
 			 Properties.comp_ldflags.c_str(),
 			 Properties.libdir.c_str(),
 			 getInstType() == INST_TYPE_DYNINST ?
@@ -1284,7 +1284,7 @@ Wrapper::run()
 	 }
 	 else
 	 {
-	    vt_snprintf( vtlib, sizeof(vtlib) - 1, "%s %s %s "VTOMPLIB" %s",
+	    vt_snprintf( vtlib, sizeof(vtlib) - 1, "%s %s %s " VTOMPLIB " %s",
 			 Properties.comp_ldflags.c_str(),
 			 Properties.libdir.c_str(),
 			 getInstType() == INST_TYPE_DYNINST ?
@@ -1297,7 +1297,7 @@ Wrapper::run()
 	 if( usesMPI() )
 	 {
 	    vt_snprintf( vtlib, sizeof(vtlib) - 1,
-			 "%s %s %s %s "VTMPILIB" %s %s",
+			 "%s %s %s %s " VTMPILIB " %s %s",
 			 Properties.comp_ldflags.c_str(),
 			 Properties.libdir.c_str(),
 			 getInstType() == INST_TYPE_DYNINST ?
@@ -1312,7 +1312,7 @@ Wrapper::run()
 	 }
 	 else
 	 {
-	    vt_snprintf( vtlib, sizeof(vtlib) - 1, "%s %s %s "VTSEQLIB" %s",
+	    vt_snprintf( vtlib, sizeof(vtlib) - 1, "%s %s %s " VTSEQLIB " %s",
 			 Properties.comp_ldflags.c_str(),
 			 Properties.libdir.c_str(),
 			 getInstType() == INST_TYPE_DYNINST ?
