$OpenBSD: patch-mpn_vax_addmul_1_s,v 1.1 2013/07/22 16:54:56 espie Exp $
--- mpn/vax/addmul_1.s.orig	Sun May  8 03:49:29 2011
+++ mpn/vax/addmul_1.s	Mon Jul 22 02:58:50 2013
@@ -27,98 +27,98 @@
 
 .text
 	.align 1
-.globl ___gmpn_addmul_1
-___gmpn_addmul_1:
+.globl __gmpn_addmul_1
+__gmpn_addmul_1:
 	.word	0xfc0
-	movl	12(ap),r4
-	movl	8(ap),r8
-	movl	4(ap),r9
-	movl	16(ap),r6
+	movl	12(%ap),%r4
+	movl	8(%ap),%r8
+	movl	4(%ap),%r9
+	movl	16(%ap),%r6
 	jlss	s2_big
 
-	clrl	r3
-	incl	r4
-	ashl	$-1,r4,r7
-	jlbc	r4,L1
-	clrl	r11
+	clrl	%r3
+	incl	%r4
+	ashl	$-1,%r4,%r7
+	jlbc	%r4,L1
+	clrl	%r11
 
 # Loop for S2_LIMB < 0x80000000
-Loop1:	movl	(r8)+,r1
+Loop1:	movl	(%r8)+,%r1
 	jlss	L1n0
-	emul	r1,r6,$0,r2
-	addl2	r11,r2
-	adwc	$0,r3
-	addl2	r2,(r9)+
-	adwc	$0,r3
-L1:	movl	(r8)+,r1
+	emul	%r1,%r6,$0,%r2
+	addl2	%r11,%r2
+	adwc	$0,%r3
+	addl2	%r2,(%r9)+
+	adwc	$0,%r3
+L1:	movl	(%r8)+,%r1
 	jlss	L1n1
-L1p1:	emul	r1,r6,$0,r10
-	addl2	r3,r10
-	adwc	$0,r11
-	addl2	r10,(r9)+
-	adwc	$0,r11
+L1p1:	emul	%r1,%r6,$0,%r10
+	addl2	%r3,%r10
+	adwc	$0,%r11
+	addl2	%r10,(%r9)+
+	adwc	$0,%r11
 
-	sobgtr	r7,Loop1
-	movl	r11,r0
+	sobgtr	%r7,Loop1
+	movl	%r11,%r0
 	ret
 
-L1n0:	emul	r1,r6,$0,r2
-	addl2	r11,r2
-	adwc	r6,r3
-	addl2	r2,(r9)+
-	adwc	$0,r3
-	movl	(r8)+,r1
+L1n0:	emul	%r1,%r6,$0,%r2
+	addl2	%r11,%r2
+	adwc	%r6,%r3
+	addl2	%r2,(%r9)+
+	adwc	$0,%r3
+	movl	(%r8)+,%r1
 	jgeq	L1p1
-L1n1:	emul	r1,r6,$0,r10
-	addl2	r3,r10
-	adwc	r6,r11
-	addl2	r10,(r9)+
-	adwc	$0,r11
+L1n1:	emul	%r1,%r6,$0,%r10
+	addl2	%r3,%r10
+	adwc	%r6,%r11
+	addl2	%r10,(%r9)+
+	adwc	$0,%r11
 
-	sobgtr	r7,Loop1
-	movl	r11,r0
+	sobgtr	%r7,Loop1
+	movl	%r11,%r0
 	ret
 
 
-s2_big:	clrl	r3
-	incl	r4
-	ashl	$-1,r4,r7
-	jlbc	r4,L2
-	clrl	r11
+s2_big:	clrl	%r3
+	incl	%r4
+	ashl	$-1,%r4,%r7
+	jlbc	%r4,L2
+	clrl	%r11
 
 # Loop for S2_LIMB >= 0x80000000
-Loop2:	movl	(r8)+,r1
+Loop2:	movl	(%r8)+,%r1
 	jlss	L2n0
-	emul	r1,r6,$0,r2
-	addl2	r11,r2
-	adwc	r1,r3
-	addl2	r2,(r9)+
-	adwc	$0,r3
-L2:	movl	(r8)+,r1
+	emul	%r1,%r6,$0,%r2
+	addl2	%r11,%r2
+	adwc	%r1,%r3
+	addl2	%r2,(%r9)+
+	adwc	$0,%r3
+L2:	movl	(%r8)+,%r1
 	jlss	L2n1
-L2p1:	emul	r1,r6,$0,r10
-	addl2	r3,r10
-	adwc	r1,r11
-	addl2	r10,(r9)+
-	adwc	$0,r11
+L2p1:	emul	%r1,%r6,$0,%r10
+	addl2	%r3,%r10
+	adwc	%r1,%r11
+	addl2	%r10,(%r9)+
+	adwc	$0,%r11
 
-	sobgtr	r7,Loop2
-	movl	r11,r0
+	sobgtr	%r7,Loop2
+	movl	%r11,%r0
 	ret
 
-L2n0:	emul	r1,r6,$0,r2
-	addl2	r11,r2
-	adwc	r6,r3
-	addl2	r2,(r9)+
-	adwc	r1,r3
-	movl	(r8)+,r1
+L2n0:	emul	%r1,%r6,$0,%r2
+	addl2	%r11,%r2
+	adwc	%r6,%r3
+	addl2	%r2,(%r9)+
+	adwc	%r1,%r3
+	movl	(%r8)+,%r1
 	jgeq	L2p1
-L2n1:	emul	r1,r6,$0,r10
-	addl2	r3,r10
-	adwc	r6,r11
-	addl2	r10,(r9)+
-	adwc	r1,r11
+L2n1:	emul	%r1,%r6,$0,%r10
+	addl2	%r3,%r10
+	adwc	%r6,%r11
+	addl2	%r10,(%r9)+
+	adwc	%r1,%r11
 
-	sobgtr	r7,Loop2
-	movl	r11,r0
+	sobgtr	%r7,Loop2
+	movl	%r11,%r0
 	ret
