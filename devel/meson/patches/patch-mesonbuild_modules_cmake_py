$OpenBSD: patch-mesonbuild_modules_cmake_py,v 1.1 2019/04/29 06:43:23 ajacoutot Exp $

From cb1ef0c44990a710f6c78c5f808bf6e04985f59b Mon Sep 17 00:00:00 2001
From: Daniel Mensinger <daniel@mensinger-ka.de>
Date: Sun, 28 Apr 2019 15:29:34 +0200
Subject: [PATCH] cmake: Use CMAKE_ROOT instead of _INCLUDE_FILE (closes #5218)

Index: mesonbuild/modules/cmake.py
--- mesonbuild/modules/cmake.py.orig
+++ mesonbuild/modules/cmake.py
@@ -72,20 +72,12 @@ class CmakeModule(ExtensionModule):
             mlog.log('error retrieving cmake informations: returnCode={0} stdout={1} stderr={2}'.format(p.returncode, stdout, stderr))
             return False
 
-        match = re.search('\n_INCLUDED_FILE \\"([^"]+)"\n', stdout.strip())
+        match = re.search('\nCMAKE_ROOT \\"([^"]+)"\n', stdout.strip())
         if not match:
             mlog.log('unable to determine cmake root')
             return False
 
-        # compilerpath is something like '/usr/share/cmake-3.5/Modules/Platform/Linux-GNU-CXX.cmake'
-        #Â or 'C:/Program Files (x86)/CMake 2.8/share/cmake-2.8/Modules/Platform/Windows-MSVC-CXX.cmake' under windows
-        compilerpath = match.group(1)
-        pos = compilerpath.find('/Modules/Platform/')
-        if pos < 0:
-            mlog.log('unknown _INCLUDED_FILE path scheme')
-            return False
-
-        cmakePath = pathlib.PurePath(compilerpath[0:pos])
+        cmakePath = pathlib.PurePath(match.group(1))
         self.cmake_root = os.path.join(*cmakePath.parts)
         self.cmake_detected = True
         return True
