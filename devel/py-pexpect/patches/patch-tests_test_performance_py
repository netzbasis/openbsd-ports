$OpenBSD: patch-tests_test_performance_py,v 1.1 2016/01/07 17:16:21 shadchin Exp $
--- tests/test_performance.py.orig	Wed Dec 30 00:45:19 2015
+++ tests/test_performance.py	Wed Dec 30 00:46:18 2015
@@ -44,7 +44,7 @@ class PerformanceTestCase (PexpectTestCase.PexpectTest
             return 'for n in range(1, %d+1): print(n)' % n
 
     def plain_range(self, n):
-        e = pexpect.spawn('python', timeout=100)
+        e = pexpect.spawn('${MODPY_BIN}', timeout=100)
         self.assertEqual(e.expect(b'>>>'), 0)
         e.sendline(self._iter_n(n))
         self.assertEqual(e.expect(br'\.{3}'), 0)
@@ -52,7 +52,7 @@ class PerformanceTestCase (PexpectTestCase.PexpectTest
         self.assertEqual(e.expect([b'inquisition', '%d' % n]), 1)
 
     def window_range(self, n):
-        e = pexpect.spawn('python', timeout=100)
+        e = pexpect.spawn('${MODPY_BIN}', timeout=100)
         self.assertEqual(e.expect(b'>>>'), 0)
         e.sendline(self._iter_n(n))
         self.assertEqual(e.expect(r'\.{3}'), 0)
@@ -60,7 +60,7 @@ class PerformanceTestCase (PexpectTestCase.PexpectTest
         self.assertEqual(e.expect([b'inquisition', '%d' % n], searchwindowsize=20), 1)
 
     def exact_range(self, n):
-        e = pexpect.spawn('python', timeout=100)
+        e = pexpect.spawn('${MODPY_BIN}', timeout=100)
         self.assertEqual(e.expect_exact([b'>>>']), 0)
         e.sendline(self._iter_n(n))
         self.assertEqual(e.expect_exact([b'...']), 0)
@@ -68,7 +68,7 @@ class PerformanceTestCase (PexpectTestCase.PexpectTest
         self.assertEqual(e.expect_exact([b'inquisition', '%d' % n],timeout=520), 1)
 
     def ewin_range(self, n):
-        e = pexpect.spawn('python', timeout=100)
+        e = pexpect.spawn('${MODPY_BIN}', timeout=100)
         self.assertEqual(e.expect_exact([b'>>>']), 0)
         e.sendline(self._iter_n(n))
         self.assertEqual(e.expect_exact([b'...']), 0)
@@ -76,7 +76,7 @@ class PerformanceTestCase (PexpectTestCase.PexpectTest
         self.assertEqual(e.expect_exact([b'inquisition', '%d' % n], searchwindowsize=20), 1)
 
     def faster_range(self, n):
-        e = pexpect.spawn('python', timeout=100)
+        e = pexpect.spawn('${MODPY_BIN}', timeout=100)
         self.assertEqual(e.expect(b'>>>'), 0)
         e.sendline(('list(range(1, %d+1))' % n).encode('ascii'))
         self.assertEqual(e.expect([b'inquisition', '%d' % n]), 1)
