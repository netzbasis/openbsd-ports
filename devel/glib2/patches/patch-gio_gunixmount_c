$OpenBSD: patch-gio_gunixmount_c,v 1.15 2019/01/23 03:37:10 ajacoutot Exp $

https://bugzilla.gnome.org/show_bug.cgi?id=653555

Index: gio/gunixmount.c
--- gio/gunixmount.c.orig
+++ gio/gunixmount.c
@@ -27,6 +27,12 @@
 #include <sys/wait.h>
 #include <unistd.h>
 
+#ifdef __OpenBSD__
+#include <errno.h>
+#include <sys/types.h>
+#include <sys/mount.h>
+#endif
+
 #include <glib.h>
 #include "gsubprocess.h"
 #include "gioenums.h"
@@ -337,6 +343,21 @@ g_unix_mount_unmount (GMount             *mount,
   else
     argv[1] = unix_mount->device_path;
 
+/* sysutils/toad */
+#ifdef __OpenBSD__
+  if (getuid() != 0)
+    {
+      char *argv[] = {"umount", NULL, NULL, NULL};
+      gchar *pkexec;
+      if ((pkexec = g_find_program_in_path ("pkexec")) != NULL)
+        {
+          argv[0] = pkexec;
+          argv[2] = argv[1];
+          argv[1] = "/sbin/umount";
+        }
+    }
+#endif
+
   eject_unmount_do (mount, cancellable, callback, user_data, argv);
 }
 
@@ -358,12 +379,20 @@ g_unix_mount_eject (GMount             *mount,
   GUnixMount *unix_mount = G_UNIX_MOUNT (mount);
   char *argv[] = {"eject", NULL, NULL};
 
+#ifndef __OpenBSD__ /* eject(1) requires a device on OpenBSD */
   if (unix_mount->mount_path != NULL)
     argv[1] = unix_mount->mount_path;
   else
+#endif
     argv[1] = unix_mount->device_path;
 
   eject_unmount_do (mount, cancellable, callback, user_data, argv);
+
+/* eject(1) on OpenBSD does not try to unmount first */
+#ifdef __OpenBSD__
+  if (unmount(unix_mount->mount_path, MNT_FORCE) < 0)
+    g_warning ("%s unmount failed: %s\n", unix_mount->mount_path, strerror(errno));
+#endif
 }
 
 static gboolean
