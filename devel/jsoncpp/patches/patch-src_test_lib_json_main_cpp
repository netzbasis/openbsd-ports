$OpenBSD: patch-src_test_lib_json_main_cpp,v 1.4 2016/01/20 09:37:13 dcoppa Exp $
--- src/test_lib_json/main.cpp.orig	Thu Jul 23 07:32:47 2015
+++ src/test_lib_json/main.cpp	Wed Jan 20 09:45:46 2016
@@ -298,7 +298,7 @@ JSONTEST_FIXTURE(ValueTest, null) {
 
 #if !defined(__ARMEL__)
   // See line #165 of include/json/value.h
-  JSONTEST_ASSERT_EQUAL(Json::Value::null, null_);
+  JSONTEST_ASSERT_EQUAL(Json::Value::nullRef, null_);
 #endif
 }
 
@@ -1215,7 +1215,7 @@ JSONTEST_FIXTURE(ValueTest, nonIntegers) {
   JSONTEST_ASSERT_EQUAL(-2147483648.5, val.asDouble());
   JSONTEST_ASSERT_EQUAL(float(-2147483648.5), val.asFloat());
 #ifdef JSON_HAS_INT64
-  JSONTEST_ASSERT_EQUAL(-Json::Int64(1) << 31, val.asLargestInt());
+  JSONTEST_ASSERT_EQUAL(-(Json::Int64(1) << 31), val.asLargestInt());
 #endif
   JSONTEST_ASSERT_EQUAL(true, val.asBool());
   JSONTEST_ASSERT_EQUAL("-2147483648.5",
@@ -1257,7 +1257,7 @@ JSONTEST_FIXTURE(ValueTest, nonIntegers) {
 
   // A 16-digit floating point number.
   val = Json::Value(2199023255552000.0f);
-  JSONTEST_ASSERT_EQUAL(float(2199023255552000), val.asFloat());
+  JSONTEST_ASSERT_EQUAL(float(2199023255552000LL), val.asFloat());
   JSONTEST_ASSERT_STRING_EQUAL("2199023255552000",
                                normalizeFloatingPointStr(val.asString()));
 
