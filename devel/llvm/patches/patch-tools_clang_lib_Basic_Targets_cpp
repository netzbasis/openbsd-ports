$OpenBSD: patch-tools_clang_lib_Basic_Targets_cpp,v 1.20 2017/02/10 09:37:43 ajacoutot Exp $

- Enable __float128 support on X86
- Set ABI for ARM
- [OpenBSD] set OpenBSD defines for aarch64

--- tools/clang/lib/Basic/Targets.cpp.orig	Tue Jan 10 21:16:47 2017
+++ tools/clang/lib/Basic/Targets.cpp	Tue Jan 10 22:19:10 2017
@@ -545,6 +545,8 @@ class OpenBSDTargetInfo : public OSTargetInfo<Target> 
     Builder.defineMacro("__ELF__");
     if (Opts.POSIXThreads)
       Builder.defineMacro("_REENTRANT");
+    if (this->HasFloat128)
+      Builder.defineMacro("__FLOAT128__");
   }
 public:
   OpenBSDTargetInfo(const llvm::Triple &Triple, const TargetOptions &Opts)
@@ -553,8 +555,11 @@ class OpenBSDTargetInfo : public OSTargetInfo<Target> 
 
       switch (Triple.getArch()) {
         default:
+          break;
         case llvm::Triple::x86:
         case llvm::Triple::x86_64:
+          this->HasFloat128 = true;
+          // FALLTHROUGH
         case llvm::Triple::arm:
         case llvm::Triple::sparc:
           this->MCountName = "__mcount";
@@ -5144,6 +5149,8 @@ class ARMTargetInfo : public TargetInfo { (public)
       default:
         if (Triple.getOS() == llvm::Triple::NetBSD)
           setABI("apcs-gnu");
+        else if (Triple.getOS() == llvm::Triple::OpenBSD)
+          setABI("aapcs-linux");
         else
           setABI("aapcs");
         break;
@@ -8574,6 +8581,8 @@ static TargetInfo *AllocateTarget(const llvm::Triple &
       return new LinuxTargetInfo<AArch64leTargetInfo>(Triple, Opts);
     case llvm::Triple::NetBSD:
       return new NetBSDTargetInfo<AArch64leTargetInfo>(Triple, Opts);
+    case llvm::Triple::OpenBSD:
+      return new OpenBSDTargetInfo<AArch64leTargetInfo>(Triple, Opts);
     default:
       return new AArch64leTargetInfo(Triple, Opts);
     }
