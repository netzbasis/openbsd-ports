$OpenBSD: patch-lib_Target_Sparc_SparcISelLowering_cpp,v 1.5 2020/05/19 10:05:47 jca Exp $

- Make sure that we really don't emit quad-precision unless the
  "hard-quad-float" feature is available
- Use a 64-bit register when required

Index: lib/Target/Sparc/SparcISelLowering.cpp
--- lib/Target/Sparc/SparcISelLowering.cpp.orig
+++ lib/Target/Sparc/SparcISelLowering.cpp
@@ -3103,6 +3103,11 @@ SparcTargetLowering::EmitInstrWithCustomInserter(Machi
   case SP::SELECT_CC_DFP_ICC:
   case SP::SELECT_CC_QFP_ICC:
     return expandSelectCC(MI, BB, SP::BCOND);
+  case SP::SELECT_CC_Int_XCC:
+  case SP::SELECT_CC_FP_XCC:
+  case SP::SELECT_CC_DFP_XCC:
+  case SP::SELECT_CC_QFP_XCC:
+    return expandSelectCC(MI, BB, SP::BPXCC);
   case SP::SELECT_CC_Int_FCC:
   case SP::SELECT_CC_FP_FCC:
   case SP::SELECT_CC_DFP_FCC:
@@ -3258,6 +3263,8 @@ SparcTargetLowering::getRegForInlineAsmConstraint(cons
     case 'r':
       if (VT == MVT::v2i32)
         return std::make_pair(0U, &SP::IntPairRegClass);
+      else if (VT == MVT::i64 && Subtarget->is64Bit())
+	return std::make_pair(0U, &SP::I64RegsRegClass);
       else
         return std::make_pair(0U, &SP::IntRegsRegClass);
     case 'f':
